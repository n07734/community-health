{"version":3,"sources":["prefetchedData sync /^/.//.*/.json$","theme.js","components/shared/StyledTags.js","components/shared/ChartDescription.js","components/shared/Paper.js","components/shared/Button.js","components/home/Message.js","state/types.js","api/batch.js","api/queries.js","api/fillers.js","api/api.js","format/rawData.js","format/lightenData.js","format/userData.js","state/actions.js","components/home/DataOptions.js","components/charts/ChartHeading.js","components/charts/styledCharts.js","components/charts/batchBy.js","components/charts/lineHelpers.js","components/charts/Line.js","components/repo/PullRequestTrends.js","components/repo/IssuesTrends.js","components/charts/hasChartData.js","components/charts/Bar.js","format/chordData.js","components/charts/Chord.js","components/repo/TeamTrends.js","components/charts/Radar.js","format/radarData.js","components/repo/UserTrends.js","components/repo/UserList.js","components/repo/RepoDescription.js","components/repo/Repo.js","components/user/User.js","components/home/Visualisation.js","components/home/PageWrapper.js","components/home/Links.js","components/home/Page.js","App.js","state/reducers.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","themeColor","type","light","dark","themeColorBg","fontFamily","fontSize","defaultCopy","color","marginTop","marginBottom","fontWeight","markerSettings","legendOrientation","legendPosition","height","legendOffsetX","legendOffsetY","spacing","x","tiny","small","medium","large","y","theme","createMuiTheme","palette","secondary","contrastText","main","primary","mainCopy","groupedCharts","display","flexWrap","justifyContent","iconHover","text","link","background","default","paper","shadow","switch","typography","useNextVariants","mySpacing","copy","body","lineHeight","list","listItem","h4","h3","h2","h1","charts","textColor","crosshair","line","stroke","axis","legend","fill","ticks","dotColor","tooltip","container","boxShadow","ledgend","grid","markers","lineStyle","strokeWidth","textStyle","tertiary","strokeDasharray","styles","p","P","withStyles","className","classes","children","UL","OL","LI","H","level","styleAs","props","hClassName","Tag","root","flexGrow","title","intro","expandText","useState","toggle","setCount","href","onClick","preventDefault","Collapse","in","padding","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","position","flexDirection","classNames","marginRight","key","value","join","variant","size","alignItems","borderRadius","margin","marginLeft","error","backgroundColor","warning","message","types","SET_USER","CLEAR_USER","STORE_ORG","STORE_TOKEN","SET_PR_PAGINATION","SET_RELEASES_PAGINATION","SET_ISSUES_PAGINATION","FETCH_START","FETCH_ERROR","CLEAR_FETCH_ERROR","FETCH_END","STORE_REPOS","STORE_REPO","ADD_PRS","CLEAR_PRS","ADD_REPO_INFO","CLEAR_REPO_INFO","ADD_ISSUES","CLEAR_ISSUES","ADD_RELEASES","CLEAR_RELEASES","TOGGLE_THEME","PREFETCHED_REPO","ADD_USERS_DATA","CLEAR_USERS_DATA","runBatchQueue","batches","job","resolved","Promise","reject","currentBatch","remainingBatches","all","j","then","results","length","more","concat","catch","batch","argsList","batchSize","splitEvery","cursorQ","cursor","pageInfo","comments","pullRequests","reviews","issues","releases","batchedQuery","fetches","org","repo","issuesPagination","issuesCursor","issuesHasNextPage","hasNextPage","releasesPagination","releasesCursor","releasesHasNextPage","prPagination","prCursor","prHasNextPage","query","resultInfo","data","resultTypes","actions","nextPageInfo","pathOr","cursorAction","some","fillerType","hasMoreResults","Boolean","commentsQuery","nodeId","rawData","nextArgs","reviewsQuery","reviewCommentsQuery","fillData","apiCall","fillByType","fillers","pullRequestsComments","pullRequestsReviews","allPullRequestReviewsComments","filler","resolvedFillers","reduce","currentItem","applyFillerResult","recursiveFiller","makeQuery","queryInfo","accumulator","currentHasNextPage","resolver","nextResult","a","newHasNextPage","updatedData","updateRawData","newData","updatedNode","assign","node","getQueryInfo","getAllReviewComments","review","currentReviewComments","reviewCommentsQueryInfo","allReviewComments","edges","updatedReviewComments","getAllPullRequestReviews","pullRequest","currentReviews","reviewsQueryInfo","allReviews","allPullRequestsReviews","updatedpullRequestsData","updatePullRequests","propOr","repository","pullRequestsItems","pullRequestsData","mergedPullRequests","currentPullRequest","item","find","getAllPullRequestComments","currentComments","commentsQueryInfo","allComments","allPullRequestsComments","parseJSON","response","json","status","triggeredAbuseRate","test","getErrorMessage","state","missing","token","filter","acc","current","i","prepend","api","dispatch","apiCallWithToken","rejecter","fetch","method","headers","JSON","stringify","hasArgs","every","isValid","validateRequest","isValidRequest","payload","errors","result","fullData","errorMessage","formatCommenters","items","user","path","userCount","mergeCommenters","left","right","leftEntries","entries","rightEntries","mergedObject","newTotal","filterByUser","prData","author","url","additions","deletions","changedFiles","createdAt","mergedAt","allCodeComments","push","codeComments","codeCommenters","formatCodeComments","generalComments","generalCommenters","formatGeneralComments","ghApprovals","ghApprovers","approvals","approvers","formatApprovals","prSize","age","differenceInDays","commenters","formatPullRequests","formatIssue","closedAt","labels","isBug","formatIssues","formatRelease","tag","date","description","releaseType","majorV","major","minorV","minor","patchV","patch","prereleaseV","prerelease","getReleaseType","slimValue","Array","isArray","slimArray","slimObject","arr","newArray","obj","newObject","newValue","baseUserData","approvalsGiven","approvalsByUser","commentsGiven","commentsReceived","codeCommentsGiven","codeCommentsReceived","generalCommentsGiven","generalCommentsReceived","totalPRs","uniquePRsContributedTo","commentsByUser","updateContributorCount","currentData","objKey","addition","prevData","updated","formatUserData","updateByUsersCount","currentUserData","currentKeyData","updatedKeyData","userData","updatedCommentsByUser","updatedApprovalsByUser","updatedCommentsGiven","updatedCodeCommentsGiven","updatedGeneralCommentsGiven","updatedApprovalsGiven","updatedUniquePRsApproved","Set","forEach","prSizes","averagePrSize","Math","round","prAges","averagePrAge","approvalsReceived","uniqueAuthors","newUsersData","values","sortedUsers","sort","b","aTotal","setUser","storeToken","storeOrg","getState","currentOrg","clearData","storeRepo","currentRepo","updateUsersData","formatApiRepoInfo","sdlc","getPreFetchedData","repoData","require","preFetchedRepo","usersData","getDownloadProps","reportData","pipe","pickAll","dissocPath","assoc","getReportData","blob","Blob","URL","createObjectURL","download","buttonText","fetching","connect","setValue","event","action","isDirty","getData","getDownloadInfo","getPreFetchedRepo","form","gridTemplateColumns","columnGap","rowGap","gridAutoRows","fullRow","gridColumn","formDescription","dataPaper","child","preFetched","Paper","onSubmit","TextField","label","onChange","ChartHeading","useStyles","makeStyles","borderBottom","content","bottom","LineItem","Item","style","centerHeading","textAlign","headingWrap","chartComponentWrap","width","maxWidth","chordWrap","chartWrap","opacity","styledCharts","Chart","getWeekNumber","dateMS","Date","split","getTime","batchWeekly","prevWeeks","slice","currentWeek","prev","prevItemsWeek","currentItemsWeek","isNewWeek","batchBy","getMaxYValue","allValues","apply","max","dateSort","dateA","dateB","formatDate","info","month","getMonth","dayM","getDate","getFullYear","formatBatches","dataKey","averageBy","formatLinesData","axix","lines","groupMath","formattedData","sortedData","batchedData","formatLineData","formatGraphMarkers","lineData","start","end","currentStart","currentEnd","dateStart","dateEnd","currentDate","MAJOR","MINOR","smoothNumber","ruffledNumber","stringNumber","roundTo","ceil","reduceRight","index","increment","number","parseInt","updatedItem","reverse","ToolTip","convertedRightLines","getYValue","point","serieId","xCurrentValue","xFormatted","yCurrentValue","yFormatted","rightItemMatch","originalY","Chip","points","rows","serieColor","Line","useTheme","leftAxis","xAxis","leftLinesData","maxLeftValue","rightAxis","rightLinesData","maxRightValue","dataItem","leftHeadingItems","rightHeadingItems","formattedMarkers","hasData","top","colors","lineWidth","curve","animate","xScale","format","xFormat","yScale","min","axisBottom","tickSize","tickPadding","tickRotation","axisLeft","tickValues","axisRight","rawLeftValue","realRightValue","enableGridX","enableSlices","sliceTooltip","PullRequestTrends","formatIssueData","bug","issue","IssuesTrends","hasChartData","dataArray","Bar","bars","sortBy","indexBy","trimmedData","byPropDesc","prop","finalData","groupMode","enableLabel","getNameList","scoredData","keyData","given","sortedValues","total","showNames","accPercent","itemPercent","percentageOfTotal","formatChordData","otherAppened","matrix","otherTotal","ignoreNames","name","martixRow","matrixRowsForNamed","nameData","matrixRowForOther","mergedMatrix","getMatrix","names","Chord","hasMatrixData","row","arcBorderColor","from","modifiers","ribbonOpacity","ribbonBorderWidth","ribbonBorderColor","innerRadiusRatio","labelRotation","padAngle","innerRadiusOffset","labelOffset","labelTextColor","isInteractive","arcHoverOpacity","arcHoverOthersOpacity","ribbonHoverOpacity","ribbonHoverOthersOpacity","motionStiffness","motionDamping","Radar","titleItems","toolTipValues","dotSize","dotBorderColor","dotBorderWidth","gridShape","enableDotLabel","gridLabelOffset","gridLevels","maxValue","gridAngleStep","angleStep","tooltipFormat","shift","formatRadarData","filterAuthor","defaultValues","uniquePRsApproved","filteredContributors","p10","topUsers","totalled","addedUser","combinedData","averagedData","approvalsGivenByTeam","maxValues","parentAcc","upDateMaxValues","accVaue","users","radialChartsContributions","topXUsers","area","received","givenOriginal","receivedOriginal","UserTrends","radarData","contributionsRadar","setUserAction","currentTarget","window","scrollTo","Sdlc","RepoDescription","repoInfo","colourA","colourB","userRadars","userName","originalUser","peersOriginal","getRadarData","userBars","averageAndUserData","userGraphs","mergedPrData","peerPrData","userPrData","removeUser","flexBasis","topButton","radars","graphs","animation","User","Repo","wrapper","overflow","themeType","themeToggle","icon","alt","Page","PageWrapper","DataOptions","useEffect","quertString","urlParams","URLSearchParams","get","reducers","combineReducers","prs","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.32213f30.chunk.js","sourcesContent":["var map = {\n\t\"./TypeScript.json\": 446,\n\t\"./babel.json\": 447,\n\t\"./deno.json\": 448,\n\t\"./electron.json\": 449,\n\t\"./jest.json\": 450,\n\t\"./kotlin.json\": 451,\n\t\"./material-ui.json\": 452,\n\t\"./node.json\": 453,\n\t\"./prettier.json\": 454,\n\t\"./ramda.json\": 455,\n\t\"./react.json\": 456,\n\t\"./swift.json\": 457,\n\t\"./vscode.json\": 458,\n\t\"./vue-next.json\": 459\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 445;","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst themeColor = type => ({\n    light: '#232023',\n    dark: '#eee',\n})[type]\n\nconst themeColorBg = type => ({\n    light: '#fff',\n    dark: '#232023',\n})[type]\n\nconst fontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\nconst fontSize = 12\n\nconst defaultCopy = (type) => ({\n    color: themeColor(type),\n    marginTop: 0,\n    marginBottom: '0.8rem',\n    fontSize: '1rem',\n    fontWeight: '400',\n    fontFamily,\n})\n\nconst markerSettings = {\n    legendOrientation: 'horizontal',\n    legendPosition: 'top-right',\n    height: 10,\n    legendOffsetX: 0,\n    legendOffsetY: -4,\n}\n\nconst spacing = {\n    x: {\n        tiny: '0.2rem',\n        small: '0.5rem',\n        medium: '0.8rem',\n        large: '1.2rem',\n    },\n    y: {\n        tiny: '0.5rem',\n        small: '0.8rem',\n        medium: '1rem',\n        large: '1.4rem',\n    },\n}\n\nconst theme =  (type = 'light') => createMuiTheme({\n    type,\n    palette: {\n        type,\n        secondary: {\n            contrastText: '#ccc',\n            dark: '#1e6392',\n            light: '#7986cb',\n            main: '#1f77b4',\n        },\n        primary: {\n            contrastText: '#ccc',\n            dark: '#b10e4f',\n            light: '#d65287',\n            main: '#e82573',\n        },\n        mainCopy: {\n            color: themeColor(type),\n            fontSize: '1rem',\n            fontWeight: '400',\n            fontFamily,\n        },\n\n        groupedCharts: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-evenly',\n        },\n        iconHover: ({\n            light: '#d65287',\n            dark: '#e82573',\n        })[type],\n        text: {\n            primary: themeColor(type),\n        },\n        link: ({\n            light: '#1f77b4',\n            dark: '#e82573',\n        })[type],\n        background: {\n            default: themeColorBg(type),\n            paper: themeColorBg(type),\n        },\n        shadow:({\n            light: '#ccc',\n            dark: '#666',\n        })[type],\n        switch: themeColor(type),\n    },\n    typography: { useNextVariants: true },\n    mySpacing: spacing,\n    copy: {\n        body: {\n            ...defaultCopy(type),\n            lineHeight: '1.3rem',\n        },\n        list: {\n            ...defaultCopy(type),\n            color: themeColor(type),\n        },\n        listItem: {\n            color: themeColor(type),\n            marginBottom: '0.2rem',\n        },\n        h4: {\n            ...defaultCopy(type),\n            marginBottom: '0.5rem',\n            fontSize: '1.3rem',\n            fontWeight: '500',\n        },\n        h3: {\n            ...defaultCopy(type),\n            fontSize: '2rem',\n            fontWeight: '500',\n        },\n        h2: {\n            ...defaultCopy(type),\n            fontSize: '3rem',\n            fontWeight: '200',\n        },\n        h1: {\n            ...defaultCopy(type),\n            fontSize: '4rem',\n            fontWeight: '300',\n        },\n    },\n    charts: {\n        fontFamily,\n        fontSize,\n        textColor: themeColor(type),\n        crosshair: {\n            line: {\n                stroke: themeColor(type),\n            },\n        },\n        axis: {\n            legend: {\n                text: { fill: themeColor(type) },\n            },\n            ticks: {\n                text: { fill: themeColor(type) },\n            },\n        },\n        dotColor: themeColor(type),\n        tooltip: {\n            fontFamily,\n            fontSize,\n            container: {\n                background: themeColorBg(type),\n                color: themeColor(type),\n                boxShadow: `0 1px 2px ${themeColor(type)}`,\n            },\n        },\n        ledgend: {\n            fontFamily,\n            fontSize,\n            fill: themeColor(type),\n        },\n        grid: {\n            line: {\n                stroke: '#999',\n            },\n        },\n        markers: {\n            primary: {\n                lineStyle: {\n                    stroke:({\n                        light: '#077314',\n                        dark: '#077314',\n                    })[type],\n                    strokeWidth: 1,\n                },\n                textStyle: {\n                    fontFamily,\n                    fontSize,\n                    fill: ({\n                        light: '#077314',\n                        dark: '#077314',\n                    })[type],\n                },\n                ...markerSettings,\n            },\n            secondary: {\n                lineStyle: {\n                    stroke:({\n                        light: '#8b4ff0',\n                        dark: '#6b3dba',\n                    })[type],\n                    strokeWidth: 1,\n                },\n                textStyle: {\n                    fontFamily,\n                    fontSize,\n                    fill: ({\n                        light: '#8b4ff0',\n                        dark: '#6b3dba',\n                    })[type],\n                },\n                ...markerSettings,\n            },\n            tertiary: {\n                lineStyle: {\n                    stroke:({\n                        light: '#87cac6',\n                        dark: '#6b3dba',\n                    })[type],\n                    strokeWidth: 1,\n                    strokeDasharray:'2 6',\n                },\n                textStyle: {\n                    fontFamily,\n                    fontSize,\n                    fill: ({\n                        light: '#87cac6',\n                        dark: '#6b3dba',\n                    })[type],\n                },\n                ...markerSettings,\n            },\n\n        },\n    },\n})\n\nexport default theme\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n    p: theme.copy.body,\n    h1: {\n        ...theme.copy.h1,\n        '@media (max-width: 768px)': {\n            fontSize: '3.5rem'\n        },\n        '@media (max-width: 668px)': {\n            fontSize: '3rem'\n        },\n    },\n    h2: {\n        ...theme.copy.h2,\n        '@media (max-width: 768px)': {\n            fontSize: '3rem'\n        },\n        '@media (max-width: 668px)': {\n            fontSize: '2.5rem'\n        },\n    },\n    h3: {\n        ...theme.copy.h3,\n        '@media (max-width: 768px)': {\n            fontSize: '1.8rem'\n        },\n        '@media (max-width: 668px)': {\n            fontSize: '1.3rem'\n        },\n    },\n    h4: theme.copy.h4,\n    list: theme.copy.list,\n    listItem: theme.copy.listItem,\n})\n\nconst P = withStyles(styles)(({\n    className,\n    classes,\n    children,\n} = {}) => <p className={`${classes.p} ${className}`}>\n    {children}\n</p>)\n\nconst UL = withStyles(styles)(({\n    classes,\n    children,\n} = {}) => <ul className={classes.list}>\n    {children}\n</ul>)\n\nconst OL = withStyles(styles)(({\n    classes,\n    children,\n} = {}) => <ol className={classes.list}>\n    {children}\n</ol>)\n\nconst LI = withStyles(styles)(({\n    classes,\n    children,\n} = {}) => <li className={classes.listItem}>\n    {children}\n</li>)\n\nconst H = withStyles(styles)(({\n    level = 1,\n    styleAs,\n    className,\n    classes,\n    ...props\n} = {}) => {\n    const hClassName = `h${styleAs || level}`\n    const Tag = `h${level}`\n\n    return (\n        <Tag\n            className={`${classes[hClassName]} ${className}`}\n            {...props}\n\n        />\n    )\n})\n\n\nexport {\n    P,\n    UL,\n    OL,\n    LI,\n    H,\n}\n\n","import React, { useState } from 'react'\nimport Collapse from '@material-ui/core/Collapse'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { H, P } from './StyledTags'\n\n\nconst ChartDescription = ({\n    title,\n    intro,\n    children,\n    expandText = 'See more',\n    className,\n    classes,\n} = {}) => {\n    const [toggle, setCount] = useState(false)\n\n    return (\n        <div className={`${classes.root} ${className}`}>\n            {\n               title && typeof title === 'string'\n                    ? <H level={2} >{title}</H>\n                    : title\n            }\n            <P>\n                {intro} { \n                    children && <a\n                        className={classes.link}\n                        href=\"#desc\"\n                        onClick={(e) => {\n                            e.preventDefault()\n                            setCount(!toggle)\n                        }}>\n                        {\n                            toggle\n                                ? 'See less'\n                                : expandText\n                        }\n                    </a>\n                }\n            </P>\n            <Collapse in={toggle}>\n                {children}\n            </Collapse>\n        </div>\n    )\n}\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginBottom: '1rem',\n    },\n    link: {\n        color: theme.palette.link,\n    },\n})\n\nexport default withStyles(styles)(ChartDescription)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\n\nconst styles = theme => ({\n    root: {\n        padding: `${theme.mySpacing.y.large} ${theme.mySpacing.y.large} 0 ${theme.mySpacing.y.large}`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'top left',\n        backgroundSize: '100% 20px',\n        backgroundImage: `linear-gradient(${theme.palette.shadow}, rgba(0,0,0,0))`,\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n\n    },\n    'bg-none': {\n        background: 'none'\n    },\n    'justify': {\n        justifyContent: 'space-between',\n    },\n})\n\nconst PaperWapper = ({ classes = {}, className = '', children } = {}) => (\n    <div\n        className={classNames(classes.root, classes[className] || className)}\n    >\n        {children}\n    </div>\n)\n\nexport default withStyles(styles)(PaperWapper)","import React from 'react'\nimport {\n    Button as CoreButton,\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst Button = ({\n    className,\n    classes,\n    onClick,\n    key,\n    value,\n    type = 'submit',\n    color = 'inherit',\n} = {}) => (\n    <CoreButton\n        className={[classes.root, (className || '')].join(' ')}\n        variant=\"contained\"\n        size=\"small\"\n        type={type}\n        color={color}\n        value={value}\n        key={key}\n        onClick={onClick}\n    >\n        {value}\n    </CoreButton>\n)\n\nconst styles = theme => ({\n    root: {\n        marginRight: theme.mySpacing.x.small,\n        marginBottom: theme.mySpacing.y.small,\n    },\n})\nexport default withStyles(styles)(Button)","import React from 'react'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { P } from '../shared/StyledTags'\n\nconst variant = {\n    'warning': <WarningIcon />,\n    'error': <ErrorIcon />,\n}\n\nconst Message = ({\n    error: {\n        level,\n        message,\n    },\n    classes,\n    className,\n} = {}) => (\n    <div className={`${classes[level]} ${classes.root} ${className}`} >\n        {variant[level]}\n        <P className={classes.copy}>{message}</P>\n    </div>\n)\n\nconst styles = theme => ({\n    root: {\n        padding: '0.8rem',\n        display: 'flex',\n        alignItems: 'center',\n        borderRadius: '4px',\n    },\n    copy: {\n        margin: 0,\n        marginLeft: theme.mySpacing.y.medium,\n        padding: 0,\n        color: '#000',\n    },\n    error: {\n        backgroundColor: '#e02e2e',\n    },\n    warning: {\n        backgroundColor: '#dc7e09',\n    },\n})\nexport default withStyles(styles)(Message)","const types = {\n    SET_USER: 'SET_USER',\n    CLEAR_USER: 'CLEAR_USER',\n    STORE_ORG: 'STORE_ORG',\n    STORE_TOKEN: 'STORE_TOKEN',\n    SET_PR_PAGINATION: 'SET_PR_PAGINATION',\n    SET_RELEASES_PAGINATION: 'SET_RELEASES_PAGINATION',\n    SET_ISSUES_PAGINATION: 'SET_ISSUES_PAGINATION',\n    FETCH_START: 'FETCH_START',\n    FETCH_ERROR: 'FETCH_ERROR',\n    CLEAR_FETCH_ERROR: 'CLEAR_FETCH_ERROR',\n    FETCH_END: 'FETCH_END',\n    STORE_REPOS: 'STORE_REPOS',\n    STORE_REPO: 'STORE_REPO',\n    ADD_PRS: 'ADD_PRS',\n    CLEAR_PRS: 'CLEAR_PRS',\n    ADD_REPO_INFO: 'ADD_REPO_INFO',\n    CLEAR_REPO_INFO: 'CLEAR_REPO_INFO',\n    ADD_ISSUES: 'ADD_ISSUES',\n    CLEAR_ISSUES: 'CLEAR_ISSUES',\n    ADD_RELEASES: 'ADD_RELEASES',\n    CLEAR_RELEASES: 'CLEAR_RELEASES',\n    TOGGLE_THEME: 'TOGGLE_THEME',\n    PREFETCHED_REPO: 'PREFETCHED_REPO',\n    ADD_USERS_DATA: 'ADD_USERS_DATA',\n    CLEAR_USERS_DATA: 'CLEAR_USERS_DATA',\n}\n\nexport default types","import { splitEvery } from 'ramda'\n\n// Runs each batch synchronously and the items in a batch asynchronously\nconst runBatchQueue = (batches, job, resolved = []) => new Promise((resolve, reject) => {\n    const [currentBatch, ...remainingBatches] = batches\n\n    Promise.all(currentBatch.map((j) => job(j)))\n        .then((results) => (\n            remainingBatches && remainingBatches.length\n                ? runBatchQueue(remainingBatches, job, results)\n                    .then((more) => resolve(resolved.concat(more)))\n                    .catch(reject)\n                : resolve(resolved.concat(results))\n        ))\n        .catch(reject)\n})\n\n// Takes an array of arguments for the job and runs them in batches\nconst batch = (argsList = [], job, batchSize = 2) => {\n    const batches = splitEvery(batchSize, argsList)\n\n    return argsList.length\n        ? runBatchQueue(batches, job)\n        : []\n}\n\nexport default batch\n","import { pathOr } from 'ramda'\n\nimport types from '../state/types'\n\nconst cursorQ = (cursor, key = 'after') => cursor\n    ? ` ${key}:\"${cursor}\" `\n    : ''\n\nconst pageInfo = 'pageInfo { endCursor hasNextPage hasPreviousPage startCursor }'\n\nconst comments = (cursor) => `\n    comments(first: ${cursor ? 100: 10} ${cursorQ(cursor)}) {\n      edges {\n        node {\n          author {\n            login\n          }\n          body\n        }\n      }\n      ${pageInfo}\n    }\n`\n\nconst pullRequests = cursor => `\npullRequests(\n  first: 100\n  ${cursorQ(cursor)}\n  states: [MERGED]\n  orderBy: {field: CREATED_AT direction: DESC}\n) {\n  edges {\n    node {\n      id\n      url\n      author {\n        login\n      }\n      repository {\n        name\n        owner {\n          login\n        }\n      }\n      additions\n      deletions\n      changedFiles\n      mergedAt\n      createdAt\n      ${reviews()}\n      ${comments()}\n    }\n  }\n  ${pageInfo}\n}`\n\nconst issues = cursor => `\nissues(\n  ${cursorQ(cursor)}\n  first: 100\n  orderBy: { field:CREATED_AT direction:DESC }\n) {\n  edges {\n    node {\n      title\n      createdAt\n      closedAt\n      state\n      labels(first:5) {\n        edges {\n          node {\n            name\n          }\n        }\n      }\n    }\n  }\n  ${pageInfo}\n}`\n\nconst releases = cursor => `\nreleases(\n  ${cursorQ(cursor)}\n  first:100\n  orderBy:{ field:CREATED_AT direction:DESC }\n) {\n  edges {\n    node {\n      id\n      name\n      createdAt\n      tag {\n        name\n      }\n    }\n  }\n  ${pageInfo}\n}`\n\nconst reviews = (cursor) => `\n    reviews(first: ${cursor ? 100 : 10} ${cursorQ(cursor)}) {\n      edges {\n        node {\n          id\n          state\n          author {\n            login\n          }\n          ${comments()}\n        }\n      }\n      ${pageInfo}\n    }\n`\n\nconst releasesQuery = ({\n    fetches: {\n        token,\n        org,\n        repo,\n        releasesPagination: {\n            cursor,\n            hasNextPage,\n        } = {},\n    } = {},\n} = {}) => ({\n    query: `{\n        repository(name: \"${repo}\" owner: \"${org}\") {\n          ${releases(cursor)}\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'repository', 'releases', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'repository', 'releases', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            repo,\n            org,\n            nodeId: pathOr('', ['data', 'repository', 'id'], data),\n            cursor: pathOr('', ['data', 'repository', 'releases', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n    token,\n    cursorAction: types.SET_RELEASES_PAGINATION,\n    hasMoreResults: hasNextPage,\n})\n\nconst issuesQuery = ({\n    fetches: {\n        token,\n        org,\n        repo,\n        issuesPagination: {\n            cursor,\n            hasNextPage,\n        } = {},\n    } = {},\n} = {}) => ({\n    query: `{\n        repository(name: \"${repo}\" owner: \"${org}\") {\n          ${issues(cursor)}\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'repository', 'issues', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'repository', 'issues', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            repo,\n            org,\n            nodeId: pathOr('', ['data', 'repository', 'id'], data),\n            cursor: pathOr('', ['data', 'repository', 'issues', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n    token,\n    cursorAction: types.SET_ISSUES_PAGINATION,\n    hasMoreResults: hasNextPage,\n})\n\nconst prQuery = ({\n    fetches: {\n        token,\n        org,\n        repo,\n        prPagination: {\n            cursor,\n            hasNextPage,\n        },\n    } = {},\n}) => ({\n    query: `{\n          repository(name: \"${repo}\" owner: \"${org}\") {\n            ${pullRequests(cursor)}\n          }\n      }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'repository', 'pullRequests', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'repository', 'pullRequests', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            repo,\n            org,\n            nodeId: pathOr('', ['data', 'repository', 'id'], data),\n            cursor: pathOr('', ['data', 'repository', 'pullRequests', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n    fillerType: 'pullRequests',\n    token,\n    cursorAction: types.SET_PR_PAGINATION,\n    hasMoreResults: hasNextPage,\n})\n\nconst batchedQuery = ({\n    fetches: {\n        org,\n        repo,\n        issuesPagination: {\n            cursor: issuesCursor,\n            hasNextPage: issuesHasNextPage,\n        } = {},\n        releasesPagination: {\n            cursor: releasesCursor,\n            hasNextPage: releasesHasNextPage,\n        } = {},\n        prPagination: {\n            cursor: prCursor,\n            hasNextPage: prHasNextPage,\n        } = {},\n    },\n}) => ({\n    query: `{\n      repository(name: \"${repo}\" owner: \"${org}\") {\n        id\n        description\n        name\n        owner {\n          org: login\n        }\n        ${prHasNextPage ? pullRequests(prCursor) : ''}\n        ${issuesHasNextPage ? issues(issuesCursor) : ''}\n        ${releasesHasNextPage ? releases(releasesCursor) : ''}\n      }\n    }`,\n    resultInfo: (data) => {\n        const resultTypes = [\n            'pullRequests',\n            'issues',\n            'releases',\n        ]\n\n        const actions = {\n            pullRequests: types.SET_PR_PAGINATION,\n            issues: types.SET_ISSUES_PAGINATION,\n            releases: types.SET_RELEASES_PAGINATION,\n        }\n\n        const nextPageInfo = resultTypes\n            .map((type) => ({\n                hasNextPage: pathOr(false, ['data', 'repository', type, 'pageInfo', 'hasNextPage'], data),\n                cursor: pathOr('', ['data', 'repository', type, 'pageInfo', 'endCursor'], data),\n                cursorAction: actions[type],\n            }))\n\n        const hasNextPage = resultTypes\n            .some(type => pathOr(false, ['data', 'repository', type, 'pageInfo', 'hasNextPage'], data))\n\n        return {\n            hasNextPage,\n            nextPageInfo,\n        }\n    },\n    fillerType: 'batchedQuery',\n    hasMoreResults: [\n        prHasNextPage,\n        issuesHasNextPage,\n        releasesHasNextPage,\n    ]\n        .some(Boolean),\n})\n\nconst commentsQuery = ({ nodeId, cursor }) => ({\n    query: `{\n      node(id:\"${nodeId}\") {\n          ... on PullRequest {\n            id\n            ${comments(cursor)}\n          }\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'node', 'comments', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'node', 'comments', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            nodeId: pathOr('', ['data', 'node', 'id'], data),\n            cursor: pathOr('', ['data', 'node', 'comments', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n})\n\nconst reviewsQuery = ({ nodeId, cursor }) => ({\n    query: `{\n      node(id:\"${nodeId}\") {\n          ... on PullRequest {\n            id\n            ${reviews(cursor)}\n          }\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'node', 'reviews', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'node', 'reviews', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            nodeId: pathOr('', ['data', 'node', 'id'], data),\n            cursor: pathOr('', ['data', 'node', 'reviews', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n    fillerType: 'pullRequestReviewComments',\n})\n\nconst reviewCommentsQuery = ({ nodeId, cursor }) => ({\n    query: `{\n      node(id:\"${nodeId}\") {\n          ... on PullRequestReview {\n            id\n            ${comments(cursor)}\n          }\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'node', 'comments', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'node', 'comments', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            nodeId: pathOr('', ['data', 'node', 'id'], data),\n            cursor: pathOr('', ['data', 'node', 'comments', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n})\n\nexport {\n    batchedQuery,\n    prQuery,\n    reviewCommentsQuery,\n    commentsQuery,\n    reviewsQuery,\n    releasesQuery,\n    issuesQuery,\n}","import { pathOr, propOr } from 'ramda'\nimport batch from './batch'\n\nimport {\n    commentsQuery,\n    reviewsQuery,\n    reviewCommentsQuery,\n} from './queries'\n\n// TODO: make this file more understandable\n// TODO: retry errored fill\nconst fillData = apiCall => {\n    const fillByType = (type) => {\n\n        const fillersByType = {\n            'pullRequests': [\n                pullRequestsComments,\n                pullRequestsReviews,\n            ],\n            'pullRequestReviewComments': [\n                allPullRequestReviewsComments,\n            ],\n            'batchedQuery': [\n                pullRequestsComments,\n                pullRequestsReviews,\n            ],\n        }\n\n        const fillers = fillersByType[type] || []\n\n        return (data) => fillers.length\n            ? Promise.all(\n                fillers\n                    .map((filler) => filler(data))\n            )\n                .then((resolvedFillers) => resolvedFillers\n                    .reduce((currentItem, applyFillerResult) => applyFillerResult(currentItem), data)\n                )\n            : data\n    }\n\n    const recursiveFiller = makeQuery => (queryInfo = {}) => (accumulator = []) => {\n        const {\n            hasNextPage: currentHasNextPage,\n        } = queryInfo\n\n        const {\n            query,\n            resultInfo,\n            fillerType,\n        } = makeQuery(queryInfo)\n\n        const resolver = async(nextResult) => {\n            const {\n                results = [],\n                hasNextPage: newHasNextPage,\n                nextArgs,\n            } = resultInfo(nextResult)\n\n            const updatedData = [\n                ...accumulator,\n                ...results,\n            ]\n\n            return newHasNextPage\n                ? recursiveFiller(makeQuery)(nextArgs)(updatedData)\n                : await fillByType(fillerType)(updatedData)\n        }\n\n        return currentHasNextPage\n            ? apiCall(query)(resolver)((error) => {\n                throw error\n            })\n            : accumulator\n    }\n\n    const updateRawData = (rawData = {}) => key => newData => {\n        const updatedNode = Object.assign(rawData.node, { [key]: newData })\n\n        return Object.assign(rawData, { node: updatedNode })\n    }\n\n    const getQueryInfo = key => data => ({\n        nodeId: pathOr('', ['node', 'id'], data),\n        cursor: pathOr('', ['node', key, 'pageInfo', 'endCursor'], data),\n        hasNextPage: pathOr(false, ['node', key, 'pageInfo', 'hasNextPage'], data),\n    })\n\n    const allPullRequestReviewsComments = async(data = []) => {\n        const getAllReviewComments = async(review) => {\n            const currentReviewComments = pathOr([], ['node', 'comments', 'edges'], review)\n            const reviewCommentsQueryInfo = getQueryInfo('comments')(review)\n\n            const allReviewComments = await recursiveFiller(reviewCommentsQuery)(reviewCommentsQueryInfo)(currentReviewComments)\n\n\n            return updateRawData(review)('comments')({ edges: allReviewComments })\n        }\n        const updatedReviewComments = await batch(data, getAllReviewComments, 10)\n\n        return () => updatedReviewComments\n    }\n\n    const pullRequestsReviews = async(data) => {\n        const pullRequests = pathOr([], ['data', 'repository', 'pullRequests', 'edges'], data)\n\n        const getAllPullRequestReviews = async (pullRequest) => {\n            const currentReviews = pathOr([], ['node','reviews','edges'], pullRequest)\n            const reviewsQueryInfo = getQueryInfo('reviews')(pullRequest)\n\n            const allReviews = await recursiveFiller(reviewsQuery)(reviewsQueryInfo)(currentReviews)\n\n            return {\n                nodeId: pathOr('', ['node', 'id'], pullRequest),\n                results: { edges: allReviews },\n            }\n        }\n        const allPullRequestsReviews = await batch(pullRequests, getAllPullRequestReviews, 10)\n\n        return (data) => {\n            const updatedpullRequestsData = updatePullRequests(data)('reviews')(allPullRequestsReviews)\n\n            return {\n                data: Object.assign(propOr({}, 'data', data),\n                    {\n                        repository: Object.assign(pathOr(\n                            {\n                                pullRequests: updatedpullRequestsData,\n                            },\n                            ['data', 'repository'],\n                            data,\n                        )),\n                    }\n                ),\n            }\n        }\n    }\n\n    const updatePullRequests = data =>  key => pullRequestsItems => {\n        const pullRequestsData = pathOr({}, ['data', 'repository', 'pullRequests'], data)\n        const currentPullRequests = pathOr([], ['data', 'repository', 'pullRequests', 'edges'], data)\n\n        const mergedPullRequests = currentPullRequests\n            .map((currentPullRequest) => {\n                const nodeId = pathOr('', ['node', 'id'], currentPullRequest)\n                const item = pullRequestsItems\n                    .find(x => x.nodeId === nodeId)\n\n                return item\n                    ? updateRawData(currentPullRequest)(key)(item.results)\n                    : currentPullRequest\n\n            })\n\n        return Object.assign(pullRequestsData, { edges: mergedPullRequests })\n    }\n\n    const pullRequestsComments = async(data) => {\n        const pullRequests = pathOr([], ['data', 'repository', 'pullRequests', 'edges'], data)\n\n        const getAllPullRequestComments = async (pullRequest) => {\n            const currentComments = pathOr([], ['node', 'comments', 'edges'], pullRequest)\n            const commentsQueryInfo = getQueryInfo('comments')(pullRequest)\n\n            const allComments = await recursiveFiller(commentsQuery)(commentsQueryInfo)(currentComments)\n\n            return {\n                nodeId: pathOr('', ['node','id'], pullRequest),\n                results: { edges: allComments },\n            }\n        }\n\n        const allPullRequestsComments = await batch(pullRequests, getAllPullRequestComments, 10)\n\n        return (data) => {\n            const updatedpullRequestsData = updatePullRequests(data)('comments')(allPullRequestsComments)\n\n            return {\n                data: Object.assign(propOr({}, 'data', data),\n                    {\n                        repository: Object.assign(pathOr(\n                            {\n                                pullRequests: updatedpullRequestsData,\n                            },\n                            ['data', 'repository'],\n                            data\n                        )),\n                    }\n                ),\n            }\n        }\n    }\n\n    return fillByType\n}\n\nexport default fillData\n","// TODO: Think more about if this should maintain github api data structures\n// TODO: add tests\nimport { pathOr, propOr } from 'ramda'\nimport fillData from './fillers'\n\nimport types from '../state/types'\n\nconst parseJSON = response => new Promise((resolve, reject) => {\n    response.json()\n        .then(data => response.status === 200\n            ? resolve(data)\n            : reject(Object.assign(data, { status: response.status }))\n        )\n        .catch(error => {\n            error.status = response.status\n            reject(error)\n        })\n})\n\nconst triggeredAbuseRate = ({ message = '' } = {}) => /You have triggered an abuse detection mechanism/.test(message)\n\nconst apiCall = token => query => resolver => rejecter =>\n    fetch('https://api.github.com/graphql', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({ query }),\n    })\n        .then(parseJSON)\n        .then(data => triggeredAbuseRate(data)\n            ? rejecter(data)\n            : resolver(data)\n        )\n        .catch(rejecter)\n\nconst getErrorMessage = state => {\n    const {\n        fetches: {\n            org,\n            repo,\n            token,\n        } = {},\n    } = state\n\n    const missing = [\n        !org && 'Organisation',\n        !repo && 'Repository',\n        !token &&'GitHib token',\n    ]\n        .filter(Boolean)\n\n    const prepend = (i) => {\n        const maxIndex = missing.length - 1\n\n        return [\n            i === 0\n            && (() => 'Missing '),\n            i === maxIndex\n            && (() => ' and '),\n            i > 0\n            && (() => ', '),\n        ].find(Boolean)()\n    }\n\n    const message = missing\n        .reduce((acc, current, i) => acc + prepend(i) + current, '')\n\n    return message\n}\n\nconst validateRequest = state => {\n    const {\n        fetches: {\n            org,\n            repo,\n            token,\n        } = {},\n    } = state\n\n    const hasArgs = [org, repo, token]\n        .every(item => typeof item === 'string' && item.length > 0)\n\n    return {\n        isValid: hasArgs,\n        error: !hasArgs\n            ? {\n                level: 'error',\n                message: getErrorMessage(state),\n            }\n            : null,\n    }\n}\n\nconst api = state => queryInfo => dispatch => {\n    dispatch({\n        type: types.CLEAR_FETCH_ERROR,\n    })\n\n    const {\n        query,\n        resultInfo,\n        fillerType,\n        cursorAction,\n        hasMoreResults,\n    } = queryInfo(state)\n\n    const token = pathOr('', ['fetches', 'token'], state)\n    const apiCallWithToken = apiCall(token)\n\n    const { isValid: isValidRequest, error = {}} = validateRequest(state)\n\n    !isValidRequest && dispatch({\n        type: types.FETCH_ERROR,\n        payload: error,\n    })\n\n    // TODO: Not like this, yuck\n    const resolver = async(response = {}) => {\n        response.errors\n            && dispatch({\n                type: types.FETCH_ERROR,\n                payload: {\n                    level: 'error',\n                    message: 'Error with graphql query',\n                },\n            })\n\n        const result = resultInfo(response)\n\n        // TODO: FILLERS HERE SORT OUT RAW and filled data\n        // pass in fillers\n        const fullData = await fillData(apiCallWithToken)(fillerType)(response)\n\n        // TODO: dispatch should not be in api call need to update this info outside\n        cursorAction\n            && dispatch({\n                type: cursorAction,\n                payload: {\n                    cursor: pathOr('', ['nextArgs', 'cursor'], result),\n                    hasNextPage: propOr(false, 'hasNextPage', result),\n                },\n            })\n\n        const nextPageInfo = propOr([], 'nextPageInfo', result)\n        nextPageInfo\n            .map(pageInfo => dispatch({\n                type: pageInfo.cursorAction,\n                payload: {\n                    cursor: pageInfo.cursor,\n                    hasNextPage: pageInfo.hasNextPage,\n                },\n            }))\n\n        return fullData\n    }\n\n    const rejecter = (error = {}) => {\n        const status = error.status\n        const errorMessage = [\n            (/ENOTFOUND|ECONNRESET/.test(error.code) || triggeredAbuseRate(error) || status === 503)\n                && {\n                    level: 'warn',\n                    message: 'You may have triggered the api\\'s abuse detection, please wait a minute before trying again',\n                },\n            status === 401\n                && {\n                    level: 'error',\n                    message: 'GitHub token does not have correct settings, please see README',\n                },\n            /40\\d/.test(status)\n                && {\n                    level: 'error',\n                    message: `Auth error: ${error.message || 'UNKOWN'}`,\n                },\n            {\n                level: 'error',\n                message: `ERROR: ${error.message || 'UNKOWN'}`,\n            },\n        ].find(Boolean)\n\n        dispatch({\n            type: types.FETCH_ERROR,\n            payload: errorMessage,\n        })\n    }\n\n    return isValidRequest && hasMoreResults\n        ? apiCallWithToken(query)(resolver)(rejecter)\n        : Promise.resolve()\n\n}\n\nexport default api","import { path, pathOr } from 'ramda'\nimport differenceInDays from 'date-fns/difference_in_days'\nimport {\n    major,\n    minor,\n    patch,\n    prerelease,\n} from 'semver'\n\nconst formatCommenters = items => items\n    .reduce((acc, item) => {\n        const user = path(['node', 'author', 'login'], item)\n        const userCount = (acc[user] || 0) + 1\n\n        return Object.assign(acc, { [user]: userCount })\n    }, {})\n\nconst mergeCommenters = (left = {}) => (right = {}) => {\n    const leftEntries = Object.entries(left)\n    const rightEntries = Object.entries(right)\n\n    const mergedObject = [\n        ...leftEntries,\n        ...rightEntries,\n    ]\n        .reduce((acc, [user, value]) => {\n            const newTotal = (acc[user] || 0) + value\n\n            return Object.assign(acc, { [user]: newTotal })\n        }, {})\n\n    return mergedObject\n}\n\nconst filterByUser = user => item => path(['node', 'author', 'login'], item) !== user\n\nconst formatCodeComments = (data) => {\n    const author = pathOr('', ['node', 'author', 'login'], data)\n    const allReviews = pathOr([], ['node', 'reviews', 'edges'], data)\n\n    const allCodeComments = allReviews\n        .reduce((acc, review) => {\n            const comments = pathOr([], ['node', 'comments', 'edges'], review)\n                .filter(filterByUser(author))\n\n            acc.push(...comments)\n\n            return acc\n        }, [])\n\n    return {\n        codeComments: allCodeComments.length,\n        codeCommenters: formatCommenters(allCodeComments),\n    }\n}\n\nconst formatGeneralComments = (data) => {\n    const author = pathOr('', ['node', 'author', 'login'], data)\n    const comments = pathOr([], ['node', 'comments', 'edges'], data)\n        .filter(filterByUser(author))\n\n    return {\n        generalComments: comments.length,\n        generalCommenters: formatCommenters(comments),\n    }\n}\n\nconst formatApprovals = (data) => {\n    const reviews = pathOr([], ['node', 'reviews', 'edges'], data)\n    const ghApprovals = reviews\n        .filter(x => path(['node', 'state'], x) === 'APPROVED')\n\n    const ghApprovers = formatCommenters(ghApprovals)\n\n    return {\n        approvals: ghApprovals.length,\n        approvers: ghApprovers,\n    }\n}\n\nconst prData = (data) => {\n    const org = pathOr('', ['node', 'repository', 'owner', 'login'], data)\n    const repo = pathOr('', ['node', 'repository', 'name'], data)\n    const author = pathOr('', ['node', 'author', 'login'], data)\n    const url = pathOr('', ['node', 'url'], data)\n    const additions = pathOr(0, ['node', 'additions'], data)\n    const deletions = pathOr(0, ['node', 'deletions'], data)\n    const changedFiles = pathOr(0, ['node', 'changedFiles'], data)\n    const createdAt = pathOr('', ['node', 'createdAt'], data)\n    const mergedAt = pathOr('', ['node', 'mergedAt'], data)\n\n    const {\n        codeComments = 0,\n        codeCommenters,\n    } = formatCodeComments(data)\n\n    const {\n        generalComments = 0,\n        generalCommenters,\n    } = formatGeneralComments(data)\n\n    const {\n        approvals,\n        approvers,\n    } = formatApprovals(data)\n\n    const prInfo = {\n        repo,\n        org,\n        author,\n        url,\n\n        additions,\n        deletions,\n        changedFiles,\n        prSize: additions + deletions,\n\n        createdAt,\n        mergedAt,\n        age: differenceInDays(mergedAt, createdAt) || 1,\n\n        approvals,\n        approvers,\n\n        generalComments,\n        generalCommenters,\n\n        codeComments,\n        codeCommenters,\n\n        comments: codeComments + generalComments,\n        commenters: mergeCommenters(generalCommenters)(codeCommenters),\n    }\n\n    return prInfo\n}\n\nconst formatPullRequests = data =>  pathOr([], ['data', 'repository', 'pullRequests', 'edges'], data)\n    .map(prData)\n\nconst formatRepo = (data) => ({\n    name: pathOr('', ['data', 'repository', 'name'], data),\n    org: pathOr('', ['data', 'repository', 'owner', 'login'], data),\n    pullRequests: formatPullRequests(data),\n})\n\nconst formatIssue = (data) => {\n    const createdAt = pathOr('', ['node', 'createdAt'], data)\n    const closedAt = pathOr('', ['node', 'closedAt'], data)\n    const title = pathOr('', ['node', 'title'], data)\n    const labels = pathOr([], ['node', 'labels', 'edges'], data)\n\n    return {\n        createdAt,\n        mergedAt: createdAt,\n        closedAt,\n        isBug: /bug/i.test(title) || labels.some(x => /bug/i.test(path(['node', 'name'], x))),\n    }\n}\n\nconst formatIssues = data =>\n    pathOr([], ['data', 'repository', 'issues', 'edges'], data)\n        .map(formatIssue)\n\n\nconst getReleaseType = (tag) => {\n    try {\n        const majorV = major(tag)\n        const minorV = minor(tag)\n        const patchV = patch(tag)\n        const prereleaseV = prerelease(tag)\n    \n        const releaseType = [\n            !prereleaseV && majorV && minorV === 0 && patchV === 0 && 'MAJOR',\n            !prereleaseV && minorV && patchV === 0 && 'MINOR',\n            'PATCH',\n        ].find(Boolean)\n\n        return releaseType\n    } catch(error) {\n        return 'PATCH'\n    }\n}\n\nconst formatRelease = (data) => {\n    const createdAt = pathOr('', ['node', 'createdAt'], data)\n    const tag = pathOr('', ['node', 'tag', 'name'], data)\n\n    const releaseType = getReleaseType(tag)\n\n    return {\n        date: createdAt,\n        description: tag,\n        releaseType,\n    }\n}\n\nconst formatReleases = data =>\n    pathOr([], ['data', 'repository', 'releases', 'edges'], data)\n        .map(formatRelease)\n\nexport {\n    formatRepo,\n    formatPullRequests,\n    formatIssues,\n    formatReleases,\n}\n","const slimValue = (value) => {\n    const newValue = (typeof value === 'string' && value.length && value) // picks defined string \n        || (/^[\\d.]+$/.test(`${value}`) && /^[^0]/.test(`${value}`) && value) // picks non 0 number\n        || (Array.isArray(value) && value.length && slimArray(value)) // picks defined array\n        || (value && Object.keys(value).length && slimObject(value)) // picks defiend object\n        || (typeof value === 'boolean' && value) // allows boolean, false will be ignored  \n\n    return newValue\n}\n\nconst slimArray = arr => {\n    const newArray = arr\n        .reduce((acc, item) => [\n            ...acc,\n            ...([slimValue(item)])\n        ], [])\n\n    return newArray.length && newArray\n}\n\nconst slimObject = obj => {\n    const newObject = Object.entries(obj)\n        .reduce((acc, [key, value]) => {\n            const newValue = slimValue(value)\n\n            return {\n                ...acc,\n                ...( newValue\n                    ? { [key]: newValue }\n                    : {}\n                )\n            }\n        }, {});\n\n    return Object.keys(newObject).length && newObject\n}\n\nexport {\n    slimValue,\n    slimArray,\n    slimObject,\n}\n","\nconst baseUserData = {\n    author: '',\n    approvalsGiven: 0,\n    approvalsByUser: {},\n    commentsGiven: 0,\n    commentsReceived: 0,\n    codeCommentsGiven: 0,\n    codeCommentsReceived: 0,\n    generalCommentsGiven: 0,\n    generalCommentsReceived: 0,\n    totalPRs: 0,\n    uniquePRsContributedTo: 0,\n    commentsByUser: {},\n}\n\nconst updateContributorCount = (currentData, objKey, obj, addition) => Object.entries(obj)\n    .reduce((acc, [key, value]) => {\n        const prevData = currentData[key] || {}\n        const updated = {\n            ...baseUserData,\n            ...prevData,\n            user: key,\n            [objKey]: (prevData[objKey] || 0) + (addition || value),\n        }\n\n        return Object.assign(acc, { [key]: updated })\n    }, {})\n\nconst formatUserData = (data = []) => {\n    const updateByUsersCount = (currentData, objKey, obj, author) => Object.entries(obj)\n        .reduce((acc, [key, value]) => {\n            const currentUserData = currentData[key] || {}\n            const currentKeyData = currentUserData[objKey] || {}\n            const updatedKeyData = {\n                ...currentKeyData,\n                [author]: (currentKeyData[author] || 0) + (value || 0),\n            }\n\n            const updated = {\n                ...baseUserData,\n                ...currentUserData,\n                author: key,\n                [objKey]: updatedKeyData,\n            }\n\n            return Object.assign(acc, { [key]: updated })\n        }, {})\n    const userData = data\n        .reduce((acc, prData) => {\n            const {\n                author,\n                prSize = 0,\n                age = 0,\n                approvals,\n                approvers = {},\n                comments,\n                commenters = {},\n                codeComments,\n                codeCommenters = {},\n                generalComments,\n                generalCommenters = {},\n            } = prData\n\n            const updatedCommentsByUser = updateByUsersCount(acc, 'commentsByUser', commenters, author)\n            Object.assign(acc, updatedCommentsByUser)\n\n            const updatedApprovalsByUser = updateByUsersCount(acc, 'approvalsByUser', approvers, author)\n            Object.assign(acc, updatedApprovalsByUser)\n\n            const updatedCommentsGiven = updateContributorCount(acc, 'commentsGiven', commenters)\n            Object.assign(acc, updatedCommentsGiven)\n\n            const updatedCodeCommentsGiven = updateContributorCount(acc, 'codeCommentsGiven', codeCommenters)\n            Object.assign(acc, updatedCodeCommentsGiven)\n\n            const updatedGeneralCommentsGiven = updateContributorCount(acc, 'generalCommentsGiven', generalCommenters)\n            Object.assign(acc, updatedGeneralCommentsGiven)\n\n            const updatedApprovalsGiven = updateContributorCount(acc, 'approvalsGiven', approvers)\n            Object.assign(acc, updatedApprovalsGiven)\n\n            const updatedUniquePRsApproved = updateContributorCount(acc, 'uniquePRsApproved', approvers, 1)\n            Object.assign(acc, updatedUniquePRsApproved)\n\n            const contrtibutors = [...new Set([\n                ...Object.keys(codeCommenters),\n                ...Object.keys(generalCommenters),\n                ...Object.keys(approvers),\n            ])]\n\n            contrtibutors\n                .forEach((key) => {\n                    const prevData = acc[key] || {}\n                    const updated = {\n                        ...baseUserData,\n                        ...prevData,\n                        author: key,\n                        uniquePRsContributedTo: (prevData.uniquePRsContributedTo || 0) + 1,\n                    }\n\n                    Object.assign(acc, { [key]: updated })\n                })\n\n\n            const prevData = acc[author] || {}\n\n            const prSizes = [...(prevData.prSizes || []), prSize]\n            const averagePrSize = Math.round(prSizes.reduce((acc, x) => acc + x, 0) / prSizes.length)\n\n            const prAges = [...(prevData.prAges || []), age]\n            const averagePrAge = Math.round(prAges.reduce((acc, x) => acc + x, 0) / prAges.length)\n\n            return Object.assign(acc, {\n                [author]: {\n                    ...baseUserData,\n                    ...prevData,\n                    author,\n                    user: author,\n                    approvalsReceived: (prevData.approvalsReceived || 0) + approvals,\n                    commentsReceived: (prevData.commentsReceived || 0) + comments,\n                    codeCommentsReceived: (prevData.codeCommentsReceived || 0) + codeComments,\n                    generalCommentsReceived: (prevData.generalCommentsReceived || 0) + generalComments,\n                    totalPRs: (prevData.totalPRs || 0) + 1,\n                    prSizes,\n                    prSize: averagePrSize,\n                    prAges,\n                    age: averagePrAge,\n                },\n            })\n\n        }, {})\n\n\n    const uniqueAuthors = [...new Set(data.map(x => x.author))]\n\n    const newUsersData = Object.values(userData)\n        .filter(({ author }) => uniqueAuthors.some(x => x === author))\n\n    const keys = [\n        'commentsGiven',\n        'commentsReceived',\n        'approvalsGiven',\n        'approvalsReceived',\n    ]\n\n    const sortedUsers = newUsersData\n        .sort((a, b) => {\n            const aTotal = keys\n                .reduce((acc, key) => acc + (a[key] || 0), 0)\n\n            const bTotal = keys\n                .reduce((acc, key) => acc + (b[key] || 0), 0)\n            return bTotal - aTotal\n        })\n\n    return sortedUsers\n}\n\nexport default formatUserData","import {\n    assoc,\n    dissocPath,\n    path,\n    pickAll,\n    pipe\n} from 'ramda'\nimport api from '../api/api'\nimport {\n    formatPullRequests,\n    formatIssues,\n    formatReleases,\n} from '../format/rawData'\nimport { slimObject } from '../format/lightenData'\nimport { batchedQuery } from '../api/queries'\nimport formatUserData from '../format/userData'\nimport types from './types'\n\nconst setUser = (user = '') => ({\n    type: types.SET_USER,\n    payload: user,\n})\n\nconst toggleTheme = () => ({\n    type: types.TOGGLE_THEME,\n})\n\nconst clearUser = () => ({\n    type: types.CLEAR_USER,\n})\n\nconst storeToken = (token = '') => ({\n    type: types.STORE_TOKEN,\n    payload: token,\n})\n\nconst storeOrg = (org = '') => (dispatch, getState) => {\n    const {\n        fetches: {\n            org: currentOrg,\n        },\n    } = getState()\n\n    org && currentOrg && org !== currentOrg\n        && clearData(dispatch)\n\n    return dispatch({\n        type: types.STORE_ORG,\n        payload: org,\n    })\n}\n\nconst storeRepo = (repo = '') => (dispatch, getState) => {\n    const {\n        fetches: {\n            repo: currentRepo,\n        },\n    } = getState()\n\n    repo && currentRepo && repo !== currentRepo\n        && clearData(dispatch)\n\n    return dispatch({\n        type: types.STORE_REPO,\n        payload: repo,\n    })\n}\n\nconst clearData = (dispatch) => {\n    dispatch({ type: types.CLEAR_USER })\n    dispatch({ type: types.CLEAR_PRS })\n    dispatch({ type: types.CLEAR_REPO_INFO })\n    dispatch({ type: types.CLEAR_USERS_DATA })\n    dispatch({ type: types.CLEAR_RELEASES })\n    dispatch({ type: types.CLEAR_ISSUES })\n    dispatch({ type: types.CLEAR_FETCH_ERROR })\n}\n\n// Hmm: full users format per new pr results\nconst updateUsersData = (dispatch, getState) => {\n    const { pullRequests } = getState()\n\n    dispatch({\n        type: types.ADD_USERS_DATA,\n        payload: formatUserData(pullRequests),\n    })\n}\n\nconst formatApiRepoInfo = ({ fetches: { repo, org, description = '' } = {}, sdlc = '' } = {} ) => ({\n    repo,\n    org,\n    description,\n    sdlc,\n})\n\nconst getAPIData = () => (dispatch, getState) => {\n    const state = getState()\n\n    dispatch({\n        type: types.FETCH_START,\n    })\n\n    state.preFetchedRepo\n        && clearData(dispatch)\n\n    return api(state)(batchedQuery)(dispatch)\n        .then((rawData) => {\n            dispatch({ type: types.FETCH_END })\n\n            dispatch({\n                type: types.ADD_PRS,\n                payload: formatPullRequests(rawData),\n            })\n\n            dispatch({\n                type: types.ADD_REPO_INFO,\n                payload: formatApiRepoInfo(rawData),\n            })\n\n            dispatch(updateUsersData)\n\n            dispatch({\n                type: types.ADD_RELEASES,\n                payload: formatReleases(rawData),\n            })\n\n            dispatch({\n                type: types.ADD_ISSUES,\n                payload: formatIssues(rawData),\n            })\n        })\n        .catch((error = {}) => {\n            dispatch({\n                type: types.FETCH_ERROR,\n                payload: {\n                    level: 'error',\n                    message: error.message || 'Unknown error',\n                },\n            })\n            dispatch({ type: types.FETCH_END })\n        })\n}\n\nconst getPreFetchedData = (repo = 'nivo') => (dispatch) => {\n    const repoData = require(`../prefetchedData/${repo}.json`)\n\n    const {\n        preFetchedRepo = '',\n        pullRequests = [],\n        usersData= [],\n        issues = [],\n        releases = [],\n    } = repoData\n\n    clearData(dispatch)\n\n    dispatch({\n        type: types.PREFETCHED_REPO,\n        payload: preFetchedRepo,\n    })\n\n    dispatch({\n        type: types.ADD_REPO_INFO,\n        payload: formatApiRepoInfo(repoData),\n    })\n\n    dispatch({\n        type: types.ADD_PRS,\n        payload: pullRequests,\n    })\n    dispatch({\n        type: types.ADD_USERS_DATA,\n        payload: usersData.length\n            ? usersData\n            : formatUserData(pullRequests),\n    })\n\n    dispatch({\n        type: types.ADD_ISSUES,\n        payload: issues,\n    })\n\n    dispatch({\n        type: types.ADD_RELEASES,\n        payload: releases,\n    })\n\n    dispatch({\n        type: types.FETCH_END,\n    })\n}\n\nconst getDownloadProps = (dispatch, getState) => {\n    const state = getState()\n\n    const repo = path(['fetches', 'repo'], state)\n    const getReportData = pipe(\n        pickAll(['fetches', 'repoInfo', 'pullRequests', 'userData', 'issues', 'releases']),\n        dissocPath(['fetches', 'token']),\n        assoc('preFetchedRepo', repo),\n        slimObject\n    )\n\n    const reportData = getReportData(state)\n    const json = JSON.stringify(reportData, null, 2)\n    const blob = new Blob([json], { type: \"application/json\" })\n    const href  = URL.createObjectURL(blob)\n\n    return {\n        href,\n        download: `${path(['fetches', 'org'], state)}-${repo}.json`,\n    }\n}\n\nexport {\n    setUser,\n    clearUser,\n    storeOrg,\n    storeToken,\n    storeRepo,\n    getAPIData,\n    getPreFetchedData,\n    toggleTheme,\n    getDownloadProps,\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { pathOr } from 'ramda'\n\nimport {\n    TextField,\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Paper from '../shared/Paper'\nimport Button from '../shared/Button'\nimport ChartDescription from '../shared/ChartDescription'\nimport { P, OL, LI } from '../shared/StyledTags'\nimport Message from './Message'\n\nimport types from '../../state/types'\nimport {\n    storeOrg,\n    storeToken,\n    storeRepo,\n    getAPIData,\n    getPreFetchedData,\n    getDownloadProps,\n} from '../../state/actions'\n\nconst buttonText = (fetching, preFetchedRepo, pullRequests = []) => [\n    fetching && 'fetching',\n    preFetchedRepo && 'Get new data',\n    pullRequests.length && 'Get more data',\n    'Get data',\n].find(Boolean)\n\nconst FetchForm = (props) => {\n    const {\n        setValue,\n        getData,\n        fetching,\n        repo,\n        token,\n        org,\n        error,\n        pullRequests = [],\n        classes,\n        preFetchedRepo,\n        getPreFetchedRepo,\n        getDownloadInfo,\n    } = props\n\n    return (\n        <Paper className={classes.dataPaper} >\n            <ChartDescription\n                className={classes.formDescription}\n                title=\"\"\n                expandText=\"go here\"\n                intro=\"To get data for other repositories, \"\n            >\n                <OL>\n                    <LI>*Token is required for GitHub GraphQL API calls, go to your GitHub <a className={classes.link} href=\"https://github.com/settings/tokens\">tokens</a> page</LI>\n                    <LI>Click on 'generate new token'</LI>\n                    <LI>Choose the settings 'repo' (all) and 'read:org', click 'Generate token'</LI>\n                    <LI>Use that token here</LI>\n                </OL>\n                <form\n                    className={classes.form}\n                    onSubmit={\n                        (e) => {\n                            e.preventDefault()\n\n                            !fetching\n                                && getData()\n                        }\n                    }\n                >\n                    <TextField\n                        variant=\"outlined\"\n                        className={classes.child}\n                        label=\"Token*\"\n                        margin=\"normal\"\n                        value={token}\n                        onChange={setValue('token')}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        className={classes.child}\n                        label=\"Organisation\"\n                        margin=\"normal\"\n                        value={org}\n                        onChange={setValue('org')}\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        className={classes.child}\n                        label=\"Repository\"\n                        margin=\"normal\"\n                        value={repo}\n                        onChange={setValue('repo')}\n                    />\n\n                    <Button\n                        className={classes.child}\n                        type={fetching ? 'disabled' : 'submit'}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        value={buttonText(fetching, preFetchedRepo, pullRequests)}\n                    />\n\n                    {\n                        error\n                            && <Message\n                                error={error}\n                                className={classes.fullRow}\n                            />\n                    }\n                </form>\n                {\n                    !fetching\n                        && !preFetchedRepo\n                        && pullRequests.length > 0\n                        && <P><a className={classes.link} {...getDownloadInfo()}>Download report data</a></P>\n                }\n            </ChartDescription>\n            <div className={classes.preFetched}>\n                 <P>\n                     Or take a look at contribution data from some popular Open Source repositories{preFetchedRepo}\n                 </P>\n                 {\n                     [\n                         'react',\n                         'vue-next',\n                         'TypeScript',\n                         'material-ui',\n                         'node',\n                         'deno',\n                         'vscode',\n                         'electron',\n                         'kotlin',\n                         'swift',\n                         'ramda',\n                         'babel',\n                         'jest',\n                         'prettier'\n                     ]\n                         .map((repo, i) => <Button\n                             value={repo}\n                             key={i}\n                             color={preFetchedRepo === repo ? 'primary' : 'secondary'}\n                             onClick={(e) => {\n                                 e.preventDefault()\n                                 getPreFetchedRepo(repo)\n                             }}\n                         />)\n                 }\n             </div>\n        </Paper>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    token: state.token,\n    org: state.org,\n    repo: state.repo,\n    fetching: state.fetching,\n    error: state.error,\n    pullRequests: state.pullRequests,\n    preFetchedRepo: state.preFetchedRepo,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setValue: (key) => (event) => {\n        const actions = {\n            token: storeToken,\n            org: storeOrg,\n            repo: storeRepo,\n        }\n        const action = actions[key]\n\n        const value = pathOr('', ['target', 'value'], event)\n        const isDirty = /[^\\w-.]/.test(value)\n\n        !isDirty && action\n            ? dispatch(action(value))\n            : dispatch({\n                type: types.FETCH_ERROR,\n                payload: {\n                    level: 'error',\n                    message: 'Input validation error',\n                },\n            })\n    },\n\n    getData: (x) => dispatch(getAPIData(x)),\n    getDownloadInfo: () => dispatch(getDownloadProps),\n    getPreFetchedRepo: (x) => dispatch(getPreFetchedData(x)),\n})\n\nconst styles = theme => ({\n    form: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(4, max-content)',\n        marginBottom: '1rem',\n        columnGap: '8px',\n        rowGap: '8px', // BUG: theme.spacing.unit does not have px for row but does for column, odd\n        '@media (max-width: 768px)': {\n            gridTemplateColumns: 'repeat(1, 1fr)',\n            gridAutoRows: '1fr'\n        }\n    },\n    link: {\n        color: theme.palette.link,\n    },\n    fullRow: {\n        gridColumn:'1 / -1',\n    },\n    formDescription: {\n        marginBottom: '0',\n    },\n    dataPaper: {\n        display: 'block',\n    },\n    child: {\n        margin: 0,\n    },\n    copy: {\n        display: 'inline',\n    },\n    preFetched: {\n        marginBottom: '1rem',\n    },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FetchForm))\n","import React, { Fragment } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { H } from '../shared/StyledTags'\n\nconst ChartHeading = ({ className, items = [], text = '', type = '' } = {}) => {\n    const prepend = (i) => {\n        const maxIndex = items.length - 1\n\n        return [\n            i === 0\n            && (() => ''),\n            i === maxIndex\n            && (() => ' and '),\n            i > 0\n            && (() => ', '),\n        ].find(Boolean)()\n    }\n\n    const useStyles = makeStyles(theme => ({\n        root: props => ({\n            color: props.color,\n            borderBottom: `solid 2px ${props.color}`,\n            display: 'inline-block',\n            lineHeight: '2rem',\n            position: 'relative',\n            '&:before': {\n                lineHeight: '0',\n                content: '\"•\"',\n                position: 'absolute',\n                bottom: '-1px',\n                left: '-3px',\n            },\n            '&:after': {\n                lineHeight: '0',\n                content: '\"•\"',\n                position: 'absolute',\n                bottom: '-1px',\n                right: '-3px',\n            }\n        }),\n    }))\n\n    const LineItem = ({ color, label}) => {\n        const classes = useStyles({ color });\n        return (\n            <span\n                className={classes.root}\n            >\n                {label}\n            </span>\n        )\n    }\n\n    const Item = ({ color, label}) => (\n        <span\n            style={{ color }}\n        >\n            {label}\n        </span>\n    )\n\n    return (\n        <H level={3} className={className}>\n            {text}\n            {\n                items\n                    .map((item, i) => <Fragment key={i}>\n                        {prepend(i)}\n                        {\n                            type === 'line'\n                                ? <LineItem {...item} />\n                                : <Item {...item} />\n                        }\n                        </Fragment>)\n            }\n        </H>\n    )\n}\n\nexport default ChartHeading\n","import { withStyles } from '@material-ui/core/styles'\n\nconst styles = () => ({\n    centerHeading: {\n        textAlign: 'center',\n    },\n    headingWrap: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    chartComponentWrap: {\n        width: '100%',\n        maxWidth: '1200px',\n        margin: '0 0 1rem 0',\n    },\n    chordWrap: {\n        width: '450px',\n        height: '450px',\n        '@media (max-width: 668px)': {\n            width: '370px',\n            height: '370px',\n            '& svg text': {\n                fontSize: '10px !important'\n            },\n        },\n    },\n    chartWrap: {\n        width: '100%',\n        height: '500px',\n        '& svg path': {\n            opacity: '0.7'\n        },\n        '@media (max-width: 768px)': {\n            height: '350px',\n            '& svg g line': {\n                opacity: '0.2'\n            },\n            '& svg g line:first-child': {\n                opacity: '1'\n            },\n        },\n        '@media (max-width: 668px)': {\n            height: '300px',\n            '& svg g circle': {\n                display: 'none'\n            },\n            '& svg path': {\n                opacity: '1'\n            },\n            '& svg text': {\n                fontSize: '10px !important'\n            },\n        },  \n    },\n})\n\nconst styledCharts = (Chart) => withStyles(styles)(Chart)\n\nexport default styledCharts","const weekInMS = 60000 * 60 * 24 * 7\n\nconst getWeekNumber = date => {\n    const dateMS = date && new Date(date.split('T')[0]).getTime()\n    const weekNumber = dateMS && Math.round((dateMS) / weekInMS)\n\n    return weekNumber\n}\n\nconst isNewWeek = (prev, current) => {\n    const prevItemsWeek = getWeekNumber(prev)\n    const currentItemsWeek = getWeekNumber(current)\n\n    return (prevItemsWeek && currentItemsWeek) && prevItemsWeek !== currentItemsWeek\n}\n\nconst batchWeekly = key => data => data\n    .reduce((acc, item) => {\n        const prevWeeks = acc.length > 1\n            ? acc.slice(0, acc.length - 1)\n            : []\n\n        const currentWeek = acc[acc.length - 1] || []\n        const prevItem = currentWeek[currentWeek.length - 1] || {}\n\n        const all = isNewWeek(prevItem[key], item[key])\n            ? acc\n                .concat([[item]])\n            : prevWeeks\n                .concat([currentWeek.concat(item)])\n\n        return all\n    }, [])\n\nconst batchBy = type => key => data => ({\n    'week': batchWeekly(key)(data),\n})[type]\n\nexport default batchBy","import { apply } from 'ramda'\nimport batchBy from './batchBy'\n\n\nconst getMaxYValue = (data) => {\n    const allValues = data\n        .reduce((acc, { data }) => {\n            const values = data\n                .map(x => x.y)\n\n            acc.push(...values)\n\n            return acc\n        }, [])\n\n    const maxValue = apply(Math.max, allValues)\n\n    return maxValue\n}\n\nconst dateSort = (\n    { mergedAt: dateA = '' },\n    { mergedAt: dateB = '' },\n) => new Date(dateA).getTime() - new Date(dateB).getTime()\n\nconst formatDate = (date) => {\n    const info = new Date(date)\n    const month = info.getMonth() + 1\n    const dayM = info.getDate()\n    return `${info.getFullYear()}-${month < 10 ? `0${month}` : month}-${dayM < 10 ? `0${dayM}` : dayM}`\n}\n\nconst formatBatches = batches => dataKey => averageBy => batches\n    .map((batch) => {\n        const value = batch\n            .reduce((acc, current) => (current[dataKey] || 0) + acc, 0)\n\n        const valueByTypes = {\n            'average': Math.round(value / batch.length),\n            'sum': value,\n            'count': batch.length,\n        }\n\n        return {\n            y: valueByTypes[averageBy],\n            x: formatDate(batch[0].mergedAt),\n        }\n    })\n\nconst formatLineData = (data, dataKey, averageBy = 'sum') => {\n    const filteredData = data\n        .filter(item => item.mergedAt && /\\d+/.test(item[dataKey]))\n\n    const sortedData = filteredData\n        .sort(dateSort)\n\n    const batchedData = batchBy('week')('mergedAt')(sortedData)\n    const formattedData = formatBatches(batchedData)(dataKey)(averageBy)\n\n    return formattedData\n}\n\nconst formatLinesData = (axix) => axix.lines\n    .map(({ label, color, dataKey, groupMath, data: lineData }) => {\n        const data = lineData || axix.data || []\n        const formattedData = formatLineData(data, dataKey, groupMath)\n\n        return formattedData.length\n            && ({\n                id: label,\n                color,\n                data: formattedData,\n            })\n    })\n    .filter(Boolean)\n\nconst formatGraphMarkers = (markers, theme, lineData) => {\n    const [dateStart, dateEnd] = lineData\n        .reduce(([start, end], { data = [] } = {}) => {\n            const currentStart = data[0].x\n            const currentEnd = data[data.length - 1].x\n\n            return [\n                !start || new Date(currentStart) < start\n                    ? new Date(currentStart)\n                    : start,\n                !end || new Date(currentEnd) > end\n                    ? new Date(currentEnd)\n                    : end,\n            ]\n        }, [])\n\n    const markerType = (type) => ({\n        MAJOR: 'primary',\n        MINOR: 'secondary',\n    })[type] || 'tertiary'\n\n    const formattedMarkers = markers\n        .filter(({ date } = {}) => {\n            const currentDate = new Date(date)\n\n            return currentDate > dateStart && currentDate < dateEnd\n        })\n        .map((item) => ({\n            axis: 'x',\n            value: new Date(item.date).getTime(),\n            legend: item.releaseType === 'MAJOR'\n                ? item.description\n                : '',\n            ...(theme.charts.markers[markerType(item.releaseType)] || {}),\n        }))\n\n    return formattedMarkers\n}\n\nconst smoothNumber = (ruffledNumber) => {\n    const stringNumber = `${ruffledNumber}`\n    const roundTo = Math.ceil(stringNumber.length * 0.4)\n\n    const [backwards] = stringNumber\n        .split('')\n        .reduceRight(([acc = '', increment = false], item, index) => {\n            var number = parseInt(item)\n\n            const updatedItem = increment\n                ? number + 1\n                : number\n\n\n            const round = index !== 0 && (updatedItem > 9 || (index > roundTo && updatedItem > 4))\n\n            const newValue = round || index > roundTo\n                ? 0\n                : updatedItem\n\n            return [\n                [\n                    ...acc,\n                    newValue,\n                ],\n                round,\n            ]\n        }, [])\n\n    const smooth = backwards.reverse().join('')\n\n    return smooth\n}\n\nexport {\n    getMaxYValue,\n    formatLinesData,\n    formatGraphMarkers,\n    smoothNumber,\n    dateSort,\n}","import React from 'react'\nimport { pathOr, propOr } from 'ramda'\nimport { ResponsiveLine as NivoLine } from '@nivo/line'\nimport { TableTooltip } from '@nivo/tooltip'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\n\nimport {\n    getMaxYValue,\n    formatLinesData,\n    formatGraphMarkers,\n    smoothNumber,\n} from './lineHelpers'\n\nconst ToolTip = convertedRightLines => data => {\n    // NOTE: this is needed to use the original Y value for the tool tip\n    const getYValue = (point) => {\n        const label = point.serieId\n        const xCurrentValue = point.data.xFormatted\n        const yCurrentValue = point.data.yFormatted\n\n        const { data: rightLineMatch = [] } = convertedRightLines\n            .find(x => x.id === label) || {}\n\n        const rightItemMatch = rightLineMatch\n            .find(({ x, y }) => x === xCurrentValue && y === yCurrentValue)\n\n        const updatedY = rightItemMatch\n            ? rightItemMatch.originalY\n            : yCurrentValue\n\n        return updatedY\n    }\n\n    const Chip = ({ color }) => <span\n        style={{\n            display: 'block',\n            width: '12px',\n            height: '12px',\n            background: color,\n        }}\n    />\n\n    const points = pathOr([], ['slice', 'points'], data)\n    return (\n        <TableTooltip\n            rows={\n                points\n                    .map((point) => [\n                        <Chip color={point.serieColor} />,\n                        point.serieId,\n                        <strong>{getYValue(point)}</strong>,\n                    ])\n            }\n        />\n    )\n}\n\nconst Line = styledCharts(({\n    title,\n    data = [],\n    markers = [],\n    classes,\n} = {}) => {\n    const theme = useTheme();\n    // TODO: function to see time gap in data to help format date e.g. should add year\n    const leftAxis = data\n        .find(({ xAxis } = {}) => xAxis === 'left') || { data: [], lines: [] }\n    const leftLinesData = formatLinesData(leftAxis)\n    const maxLeftValue = getMaxYValue(leftLinesData)\n\n    const rightAxis = data\n        .find(({ xAxis } = {}) => xAxis === 'right') || { data: [], lines: [] }\n    const rightLinesData = formatLinesData(rightAxis)\n    const maxRightValue = getMaxYValue(rightLinesData)\n\n    // As Nivo Line does not have right axis lines need to convert right line data to left line data\n    const convertedRightLines = rightLinesData\n        .map((item = {}) => {\n            const formattedData = item.data\n                .map((dataItem) => ({\n                    y: Math.round(dataItem.y * (maxLeftValue / maxRightValue)),\n                    x: dataItem.x,\n                    originalY: dataItem.y,\n                }))\n\n            return formattedData.length && ({\n                ...item,\n                data: formattedData,\n            })\n        })\n        .filter(Boolean)\n\n    const leftHeadingItems = title\n        ? [title]\n        : leftAxis.lines\n\n    const rightHeadingItems = rightAxis.lines\n\n    const lineData = leftLinesData.concat(convertedRightLines)\n\n    const formattedMarkers = formatGraphMarkers(markers, theme, lineData)\n\n    const hasData = (items) => items.some(x => propOr([], 'data', x).length)\n\n    return hasData(lineData) && (\n        <div className={classes.chartComponentWrap}>\n            <div className={classes.headingWrap}>\n                <ChartHeading type='line' items={leftHeadingItems} />\n                {\n                    rightHeadingItems\n                        && <ChartHeading type='line' items={rightHeadingItems} />\n                }\n            </div>\n\n            <div className={classes.chartWrap}>\n                <NivoLine\n                    margin={{ top: 14, right: 50, bottom: 50, left: 50 }}\n                    data={lineData}\n                    colors={[\n                        ...leftAxis.lines.map(x => x.color),\n                        ...rightAxis.lines.map(x => x.color),\n                    ]}\n                    lineWidth={1}\n                    curve='monotoneX'\n                    animate={false}\n                    xScale={{\n                        type: 'time',\n                        format: '%Y-%m-%d',\n                    }}\n                    xFormat=\"time:%Y-%m-%d\"\n                    yScale={{\n                        type: 'linear',\n                        min: 0,\n                        max: maxLeftValue,\n                    }}\n                    axisBottom={{\n                        format: '%b %d',\n                        tickSize: 0,\n                        tickPadding: 10,\n                        tickRotation: -45,\n\n                    }}\n                    axisLeft={{\n                        tickSize: 0,\n                        tickValues: 8,\n                    }}\n                    {...(\n                        formattedMarkers.length\n                            && { markers: formattedMarkers }\n\n                    )}\n                    {...(\n                        convertedRightLines.length\n                            && {\n                                axisRight: {\n                                    tickSize: 0,\n                                    tickValues: 8,\n                                    format: (rawLeftValue) => {\n                                        const realRightValue = Math.round(rawLeftValue * (maxRightValue / maxLeftValue))\n                                        return smoothNumber(realRightValue)\n                                    },\n                                },\n                            }\n                    )}\n                    enableGridX={false}\n                    enableSlices=\"x\"\n                    sliceTooltip={ToolTip(convertedRightLines)}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Line","import React from 'react'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport { P, UL, LI } from '../shared/StyledTags'\n\nimport Line from '../charts/Line'\n\nconst PullRequestTrends = ({\n    pullRequests = [],\n    releases = [],\n} = {}) => {\n    const { type } = useTheme();\n    return (\n        <Paper>\n            <ChartDescription\n                title=\"Pull Request trend data\"\n                intro='This section shows contribution trends over time and how releases impact them.'\n            >\n                <div>\n\n                    <P>Virtical lines are releases: Green is a Major release, solid purple is Minor and dotted purple is Patch or Alpha</P>\n                    <P>These are general questions meant to help teams find useful data and promote healthy discussions around their contributions. Team context is needed to have a clear understanding of the data.</P>\n                    <UL>\n                        <LI>Are there any/enough comments? To few comments may be a sign that the code is not getting fully reviewed.</LI>\n                        <LI>Are all PRs are being approved? If not then how do you know they are getting properly reviewed?</LI>\n                        <LI>Are there many large PRs? Generally the bigger the PR the lower the quality of the review will be.</LI>\n                        <LI>How are the trends changing during a feature lifecycle?</LI>\n                        <LI>What are the outliers and why?</LI>\n                    </UL>\n                </div>\n            </ChartDescription>\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Comments',\n                                color: '#1f77b4',\n                                dataKey: 'comments',\n                            },\n                            {\n                                label: 'Approvals',\n                                color: '#e82573',\n                                dataKey: 'approvals',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data: pullRequests,\n                    },\n                    {\n                        lines: [\n                            {\n                                label: 'PR Size',\n                                color: type === 'dark' ? '#e2e2e2' : '#777',\n                                dataKey: 'prSize',\n                            },\n                        ],\n                        xAxis: 'right',\n                        data: pullRequests,\n                    },\n                ]}\n            />\n\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Age (days)',\n                                color: '#e82573',\n                                dataKey: 'age',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data: pullRequests,\n                    },\n                    {\n                        lines: [\n                            {\n                                label: 'PR Size',\n                                color: type === 'dark' ? '#e2e2e2' : '#777',\n                                dataKey: 'prSize',\n                            },\n                        ],\n                        xAxis: 'right',\n                        data: pullRequests,\n                    },\n                ]}\n            />\n\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Additions',\n                                color: '#1f77b4',\n                                dataKey: 'additions',\n                            },\n                            {\n                                label: 'Deletions',\n                                color: '#e82573',\n                                dataKey: 'deletions',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data: pullRequests,\n                    },\n                ]}\n            />\n        </Paper>\n    )\n}\n\nexport default PullRequestTrends","import React from 'react'\n\nimport { P, UL, LI } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport Line from '../charts/Line'\n\n\nconst formatIssueData = (data = []) => data\n    .map((item) => ({\n        mergedAt: item.mergedAt,\n        ...(\n            item.isBug\n                ? { bug: 1 }\n                : { issue: 1 }\n        ),\n    }))\n\nconst IssuesTrends = ({\n    issues = [],\n    releases = [],\n} = {}) => {\n    const data = formatIssueData(issues)\n\n    return data && data.length > 0 && (\n        <Paper>\n            <ChartDescription\n                title=\"Issues trend data\"\n                intro=\"This is to help show the issue trends\"\n            >\n                <div>\n                    <P>Bugs in this graph are issues that have a title or a label that contains the word 'bug'</P>\n                    <UL>\n                        <LI>What happens when there is a new release?</LI>\n                        <LI>Is the bug count raising? If so then why?</LI>\n                    </UL>\n                    <P>Again, these are general questions meant to help teams find useful data and promote healthy discussions around team contributions. Team context is needed to have a clear understanding of the data.</P>\n                </div>\n            </ChartDescription>\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Issues',\n                                color: '#1f77b4',\n                                dataKey: 'issue',\n                                groupMath: 'count',\n                            },\n                            {\n                                label: 'Bugs',\n                                color: '#e82573',\n                                dataKey: 'bug',\n                                groupMath: 'count',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data,\n                    },\n                ]}\n            />\n        </Paper>\n    )\n}\n\nexport default IssuesTrends\n","const hasChartData = dataArray => keys => keys\n    .some(key => dataArray\n        .some(dataItem => dataItem[key])\n    )\n\nexport default hasChartData\n","import React from 'react'\nimport { filter } from 'ramda'\nimport { ResponsiveBar as NivoBar } from '@nivo/bar'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\nimport hasChartData from './hasChartData'\n\nconst Bar = styledCharts(({\n    data = [],\n    bars = [],\n    sortBy = 'comments',\n    indexBy = 'user',\n    max = 20,\n    classes,\n} = {}) => {\n    const theme = useTheme();\n    const trimmedData = filter(item => bars.some(x => item[x.dataKey]), data)\n\n\n    const byPropDesc = prop => (a, b) =>\n        +(a[prop] < b[prop]) || +(a[prop] === b[prop]) - 1\n\n    const sortedData = sortBy\n        ? trimmedData.sort(byPropDesc(sortBy))\n        : trimmedData\n\n\n    const finalData = max\n        ? sortedData.slice(0, max - 1)\n        : sortedData\n\n    const keys = bars.map(x => x.dataKey)\n\n    return hasChartData(data)(keys) && (\n        <div className={classes.chartComponentWrap}>\n            <ChartHeading items={bars} />\n            <div className={classes.chartWrap}>\n                <NivoBar\n                    data={finalData}\n                    keys={keys}\n                    indexBy={indexBy}\n                    margin={{ top: 5, right: 50, bottom: 60, left: 50 }}\n                    padding={0.3}\n                    groupMode=\"grouped\"\n                    colors={bars.map(x => x.color)}\n                    axisBottom={{\n                        tickSize: 0,\n                        tickRotation: -45,\n                    }}\n                    axisLeft={{\n                        tickSize: 0,\n                    }}\n                    enableLabel={false}\n                    animate={false}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Bar","const { path, prop } = require('ramda');\n\nconst getNameList = (data, key) => {\n    const scoredData = data\n        .reduce((acc, userData) => {\n            const author = userData.author\n            const keyData = userData[key] || {}\n            const given = Object.values(keyData).reduce((acc, current) => acc + current, 0)\n\n            return Object.assign(acc, { [author]: given })\n        }, {})\n\n    const sortedValues = Object.entries(scoredData)\n        .sort(([, a], [, b]) => b - a)\n\n    const total = sortedValues\n        .reduce((acc, [, value]) => value + acc, 0)\n\n\n    const percentageOfTotal = (value) => {\n        const percentPerUnit = 100 / total\n        const percentOf = value * percentPerUnit\n\n        return percentOf\n    }\n\n    const { showNames } = sortedValues\n        .reduce((\n            { accPercent = 0, showNames = [] },\n            [author, value],\n        ) => {\n            const itemPercent = percentageOfTotal(value, author, accPercent)\n            const newAccPercent = accPercent + itemPercent\n\n            return {\n                accPercent: newAccPercent,\n                showNames: value > 0 && itemPercent > 5\n                    ? [\n                        ...showNames,\n                        author,\n                    ]\n                    : showNames,\n            }\n        }, {})\n\n    // We do not want only one user going into the \"Other\" group\n    return showNames.length === data.length - 1\n        ? sortedValues.map(([x]) => x)\n        : showNames\n}\n\nconst getMatrix = (data, key, showNames, otherAppened) => {\n    const otherTotal = (ignoreNames, data = {}) => Object.entries(data)\n        .reduce((acc, [name, value]) => ignoreNames.some(x => x === name)\n            ? acc\n            : acc + value, 0)\n\n    const martixRow = (item) => [\n        ...showNames.map(x => path([key, x], item) || 0),\n        ...(\n            otherAppened\n                ? [otherTotal(showNames, prop(key, item))]\n                : []\n        ),\n    ]\n\n    const matrixRowsForNamed = showNames\n        .map((name) => {\n            const nameData = data.find(x => x.author === name)\n            return martixRow(nameData)\n        })\n\n    const matrixRowForOther = data\n        .filter(({ author }) => !showNames.some(x => x === author))\n        .reduce((acc, item) => {\n            const currentMatrix = martixRow(item)\n\n            const mergedMatrix = currentMatrix\n                .map((value, i) => value + (acc[i] || 0))\n\n            // Matrix other row can not have data to self logged, must be 0\n            return [\n                ...mergedMatrix.slice(0, mergedMatrix.length - 1),\n                0,\n            ]\n        }, [])\n\n    return [\n        ...matrixRowsForNamed,\n        ...(\n            matrixRowForOther.length\n                ? [matrixRowForOther]\n                : []\n        ),\n    ]\n}\n\nconst formatChordData = (data, key) => {\n    const showNames = getNameList(data, key)\n    const otherAppened = showNames.length < data.length\n\n    const matrix = getMatrix(data, key, showNames, otherAppened)\n\n    const names = [\n        ...showNames,\n        ...(\n            otherAppened\n                ? ['Others']\n                : []\n        ),\n    ]\n\n    return {\n        names,\n        matrix,\n    }\n}\n\nexport default formatChordData\n","import React from 'react'\nimport { ResponsiveChord as NivoChord } from '@nivo/chord'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport formatChordData from '../../format/chordData'\nimport styledCharts from './styledCharts'\n\n\nconst Chord = styledCharts(({\n    title,\n    data = [],\n    dataKey = '',\n    classes,\n} = {}) => {\n    const theme = useTheme();\n    const {\n        names,\n        matrix,\n    } = formatChordData(data, dataKey)\n\n    const colors = ['#E82573', '#8b4ff0', '#1F77B4', '#4ECC7A', '#DBD523', '#EB9830', '#D14B41']\n\n    const hasMatrixData = (matrix) => matrix\n        .some(row => row\n            .some(Boolean)\n        )\n\n    return hasMatrixData(matrix) && (\n        <div>\n            <ChartHeading text={title} className={classes.centerHeading} />\n            <div className={classes.chordWrap}>\n                <NivoChord\n                    label=\"id\"\n                    matrix={matrix}\n                    keys={names}\n                    margin={{ top: 0, right: 10, bottom: 10, left: 10 }}\n                    arcBorderColor={{ from: 'color', modifiers: [['darker', 0.4]] }}\n                    ribbonOpacity={0.5}\n                    ribbonBorderWidth={0.5}\n                    ribbonBorderColor={{ from: 'color', modifiers: [['darker', 0.4]] }}\n                    innerRadiusRatio={0.85}\n                    labelRotation={0}\n                    padAngle={0.06}\n                    innerRadiusOffset={0.03}\n                    labelOffset={-23}\n                    labelTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\n                    colors={colors}\n                    isInteractive={true}\n                    arcHoverOpacity={1}\n                    arcHoverOthersOpacity={0.25}\n                    ribbonHoverOpacity={0.75}\n                    ribbonHoverOthersOpacity={0.25}\n                    animate={false}\n                    motionStiffness={90}\n                    motionDamping={7}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Chord","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { P, UL, LI } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport Bar from '../charts/Bar'\nimport Chord from '../charts/Chord'\n\nconst TeamTrends = ({\n    usersData = [],\n    classes,\n} = {}) => {\n    return (\n        <Paper>\n            <ChartDescription\n                title=\"Contribution distribution\"\n                intro=\"This section shows the team's contribution dynamics\"\n            >\n                <div>\n                    <P>Again, these are general questions meant to help teams look for useful data and promote healthy discussions around team contributions. Team context is needed to have a clear understanding of the data.</P>\n                    <UL>\n                        <LI>Is there a healthy distribution of contributions across the team? Does not need to be even but should not be dependent on just a few people.</LI>\n                        <LI>What would happen if the top one or two contributors left or went on holiday?</LI>\n                        <LI>Are there enough people in team approving PRs? Only one or two people are doing this it can be a bottleneck.</LI>\n                        <LI>What are the outliers and why?</LI>\n                    </UL>\n                    <P>Note: The Users in the graphs are people who have opened PRs to the repo. This can mean that the received metrics can be higher than given as people who have not opened PRs could have contributed.</P>\n                </div>\n            </ChartDescription>\n\n            {\n                usersData.length > 0\n                    && (\n                        <>\n                            <Bar\n                                data={usersData}\n                                indexBy=\"author\"\n                                bars={[\n                                    {\n                                        dataKey: 'commentsGiven',\n                                        color: '#1f77b4',\n                                        label: 'Comments given',\n                                    },\n                                    {\n                                        dataKey: 'commentsReceived',\n                                        color: '#e82573',\n                                        label: 'Comments received',\n                                    },\n                                ]}\n                            />\n                            <Bar\n                                data={usersData}\n                                indexBy=\"author\"\n                                bars={[\n                                    {\n                                        dataKey: 'uniquePRsApproved',\n                                        color: '#1f77b4',\n                                        label: 'Approved PRs',\n                                    },\n                                    {\n                                        dataKey: 'totalPRs',\n                                        color: '#e82573',\n                                        label: 'Opened PRs',\n                                    },\n                                ]}\n                            />\n                        <Bar\n                            data={usersData}\n                            indexBy=\"author\"\n                            bars={[\n                                {\n                                    dataKey: 'prSize',\n                                    color: '#e82573',\n                                    label: 'Average PR size (additions + deletions)',\n                                },\n                            ]}\n                        />\n                            <div className={classes.groupedCharts}>\n                                <Chord data={usersData} dataKey=\"commentsByUser\" title=\"Comments given\" />\n                                <Chord data={usersData} dataKey=\"approvalsByUser\" title=\"Approvals given\" />\n                            </div>\n                        </>\n                    )\n            }\n        </Paper>\n    )\n}\n\n\nconst styles = theme => ({\n    groupedCharts: theme.palette.groupedCharts,\n})\n\nexport default withStyles(styles)(TeamTrends)","import React from 'react'\nimport { Radar as NivoRadar } from '@nivo/radar'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\nimport hasChartData from './hasChartData'\n\n\nconst Radar = styledCharts(({\n    title = '',\n    titleItems = [],\n    data = [],\n    keys = [],\n    width = 410,\n    height = 300,\n    classes,\n} = {}) => {\n    const theme = useTheme();\n    const toolTipValues = data\n        .reduce((acc, item) => acc.concat(\n            keys\n                .map(key => item[`${key}Original`])\n        ), [])\n\n    return hasChartData(data)(keys) && (\n        <div>\n            <ChartHeading className={classes.centerHeading} items={\n                titleItems.length\n                    ? titleItems\n                    : [{ label: title }]\n            } />\n            <NivoRadar\n                width={width}\n                height={height}\n                margin={{ top: 0, bottom: 0, right: 100, left: 100 }}\n                dotSize={8}\n                dotBorderColor={theme.charts.dotColor}\n                dotBorderWidth={2}\n                colors={['#1f77b4', '#e82573']}\n                gridShape=\"linear\"\n                enableDotLabel={false}\n                gridLabelOffset={10}\n                gridLevels={3}\n                animate={false}\n                indexBy='area'\n                keys={keys}\n                data={data}\n                maxValue={100}\n                theme={theme.charts}\n                gridAngleStep={200}\n                angleStep={200}\n                tooltipFormat={() => toolTipValues.shift()}\n            />\n        </div>\n    )\n})\n\nexport default Radar","const formatRadarData = (userData, filterAuthor) => {\n\n    const defaultValues = {\n        age: 0,\n        approvalsGiven: 0,\n        approvalsReceived: 0,\n        codeCommentsGiven: 0,\n        codeCommentsReceived: 0,\n        commentsGiven: 0,\n        commentsReceived: 0,\n        generalCommentsGiven: 0,\n        generalCommentsReceived: 0,\n        prSize: 0,\n        totalPRs: 0,\n        uniquePRsApproved: 0,\n        uniquePRsContributedTo: 0,\n    }\n\n    const filteredContributors = userData\n        .filter(x => filterAuthor\n            ? x.author !== filterAuthor\n            : true)\n        .filter(({\n            commentsGiven,\n            commentsReceived,\n            approvalsGiven,\n            approvalsReceived,\n        }) => [\n            commentsGiven,\n            commentsReceived,\n            approvalsGiven,\n            approvalsReceived,\n        ].some(x => x > 1))\n\n    const keys = [\n        'commentsGiven',\n        'commentsReceived',\n        'approvalsGiven',\n        'approvalsReceived',\n    ]\n\n    const sortedUsers = filteredContributors\n        .sort((a, b) => {\n            const aTotal = keys\n                .reduce((acc, key) => acc + (a[key] || 0), 0)\n\n            const bTotal = keys\n                .reduce((acc, key) => acc + (b[key] || 0), 0)\n            return bTotal - aTotal\n        })\n\n    const p10 = Math.ceil(sortedUsers.length / 100 * 10)\n    const topUsers = p10 > 10\n        ? sortedUsers.slice(0, p10)\n        : sortedUsers\n\n    const totalled = topUsers\n        .filter(x => !filterAuthor || x.author !== filterAuthor)\n        .reduce((total, user) => {\n            const addedUser = Object.entries(user)\n                .filter(([, value]) => !Array.isArray(value) && /^\\d+$/.test(value) && value > 0)\n                .reduce((combinedData, [key, value]) => Object.assign(combinedData, { [key]: value + (total[key] || 0) }), {})\n\n            return Object.assign(total, addedUser)\n        }, {})\n\n    const userCount = topUsers.length\n    const averagedData = Object.entries(totalled)\n        .reduce((acc, [key, value], i) =>\n            Object.assign(\n                acc, { [key]: Math.round(value / userCount) }\n            ), { ...defaultValues, user: 'Peers', userCount }\n        )\n\n    const usersData = userData\n        .find(x => x.author === filterAuthor) || { approvalsGivenByTeam: {} }\n\n    const maxValues = userData\n        .reduce((parentAcc, user) => {\n            const withNumberValue = Object.entries(user)\n                .filter(([, value]) => !Array.isArray(value) && /^\\d+$/.test(value))\n\n            const upDateMaxValues = withNumberValue\n                .reduce((acc, [key, value]) => {\n                    const accVaue = parentAcc[key] || 0\n\n                    return Object.assign(acc, { [key]: accVaue > value ? accVaue : value })\n                }, {})\n\n            return Object.assign(parentAcc, upDateMaxValues)\n        }, defaultValues)\n\n    return {\n        averagedData,\n        maxValues,\n        users: userData,\n        user: filterAuthor\n            ? usersData\n            : {},\n    }\n}\n\nexport default formatRadarData","import React from 'react'\n\nimport { H, P, UL, LI } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport Radar from '../charts/Radar'\nimport formatRadarData from '../../format/radarData'\n\nconst radialChartsContributions = ({ maxValues = {}, users = [] }) => {\n    const keys = [\n        'commentsGiven',\n        'commentsReceived',\n        'approvalsGiven',\n        'approvalsReceived',\n    ]\n\n    const topXUsers = users\n        .sort((a, b) => {\n            const aTotal = keys\n                .reduce((acc, key) => acc + (a[key] || 0), 0)\n\n            const bTotal = keys\n                .reduce((acc, key) => acc + (b[key] || 0), 0)\n            return bTotal - aTotal\n        })\n        .slice(0, 6)\n\n    const items = [\n        {\n            area: 'Code comments',\n            given: 'codeCommentsGiven',\n            received: 'codeCommentsReceived',\n        },\n        {\n            area: 'PR comments',\n            given: 'generalCommentsGiven',\n            received: 'generalCommentsReceived',\n        },\n        {\n            area: 'Approvals',\n            given: 'approvalsGiven',\n            received: 'approvalsReceived',\n        },\n    ]\n\n    const radarData = topXUsers\n        .map(user => {\n            const data = items\n                .map(({ area, given, received}) => {\n                    const givenOriginal = user[given] || 0\n                    const receivedOriginal = user[received] || 0\n\n                    return {\n                        area,\n                        given: givenOriginal\n                            ? (givenOriginal / (maxValues[given] || 0)) * 100\n                            : 0,\n                        received: receivedOriginal\n                            ? (receivedOriginal / (maxValues[received] || 0)) * 100\n                            : 0,\n                        givenOriginal,\n                        receivedOriginal,\n                    }\n                })\n\n            return {\n                title: user.author,\n                data,\n                keys: ['given', 'received'],\n            }\n        })\n\n    return radarData\n}\n\nconst UserTrends = ({\n    usersData = [],\n} = {}) => {\n    const radarData = formatRadarData(usersData)\n    // const prRadars = radialChartsPRs(radarData)\n    const contributionsRadar = radialChartsContributions(radarData)\n\n    return (\n        <Paper>\n            <ChartDescription\n                title={(\n                    <>\n                        <H level={2}>User's contributions</H>\n                        <H level={3}>Comments and approvals, <span style={{ color: '#1f77b4' }}>given</span> and <span style={{ color:'#e82573'}}>received</span></H>\n                    </>\n                )}\n                intro=\"This section shows how given and received metrics compare for the top contributors.\"\n            >\n                <div>\n                    <P>Again, these are general questions meant to help teams look for useful data and promote healthy discussions around team contributions. Team context is needed to have a clear understanding of the data.</P>\n                    <UL>\n                        <LI>What is more discussed the \"What\"(PR comments) or the \"How\"(code comments)?</LI>\n                        <LI>Is there a healthy level of giving and receiving of comments and approvals?</LI>\n                        <LI>What are the outliers and why?</LI>\n                    </UL>\n                </div>\n            </ChartDescription>\n            {\n                contributionsRadar.length > 0\n                    && contributionsRadar\n                        .map((info, i) => <Radar key={i} {...info} />)\n            }\n        </Paper>\n    )\n}\n\nexport default UserTrends","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Paper from '../shared/Paper'\nimport Button from '../shared/Button'\nimport { H } from '../shared/StyledTags'\n\n\nimport { setUser as setUserAction } from '../../state/actions'\n\nconst UserList = ({\n    usersData = [],\n    setUser,\n} = {}) => <>\n    <Paper className=\"justify\">\n        <H level={2} >\n            User pages\n        </H>\n        <div>\n            {\n                usersData\n                    .map(({ author }, i) => (\n                        <Button\n                            value={author}\n                            key={i}\n                            color=\"secondary\"\n                            onClick={(e) => {\n                                e.preventDefault()\n                                setUser(e.currentTarget.value)\n                                window && window.scrollTo(0, 0)\n                            }}\n                        />\n                    ))\n            }\n        </div>\n    </Paper>\n</>\n\nconst mapDispatchToProps = dispatch => ({\n    setUser: (x) => dispatch(setUserAction(x)),\n})\n\nexport default connect(() => ({}), mapDispatchToProps)(UserList)","import React from 'react'\n\nimport { H, P } from '../shared/StyledTags'\nimport ChartDescription from '../shared/ChartDescription'\nimport Paper from '../shared/Paper'\n\nconst Sdlc = ({ sdlc }) => (\n    <>\n        <H level={4}>Software Delivery Life Cycle (SDLC):</H>\n        <P>{sdlc}</P>\n    </>\n)\n\nconst RepoDescription = ({ repoInfo } = {}) => {\n    const {\n        org,\n        repo,\n        description = 'Unknown',\n        sdlc,\n    } = repoInfo\n\n    return repo && org\n        ? (\n            <Paper>\n                <ChartDescription\n                    title={(\n                        <H level={2}>\n                            {\n                                org === repo\n                                    ? (\n                                        <span style={{ color: '#e82573' }}>{repo}</span>\n                                    )\n                                    : (\n                                        <>\n                                            <span style={{ color: '#1f77b4' }}>{org}</span>/<span style={{ color: '#e82573' }}>{repo}</span>\n                                        </>\n                                    )\n                            }\n                        </H>\n                    )}\n                    intro={description}\n                >\n                    {\n                        sdlc && sdlc !== 'Unkown'\n                            && <Sdlc sdlc={sdlc} />\n                    }\n                </ChartDescription>\n            </Paper>\n        )\n        : null\n}\n\nexport default RepoDescription\n\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport PullRequestTrends from './PullRequestTrends'\nimport IssuesTrends from './IssuesTrends'\nimport TeamTrends from './TeamTrends'\nimport UserTrends from './UserTrends'\nimport UserList from './UserList'\nimport RepoDescription from './RepoDescription'\n\nconst RepoView = ({\n    pullRequests = [],\n    usersData = [],\n    issues = [],\n    releases = [],\n    repoInfo = {},\n} = {}) => <>\n    <RepoDescription repoInfo={repoInfo} />\n    <PullRequestTrends pullRequests={pullRequests} releases={releases}/>\n    <IssuesTrends issues={issues} releases={releases}/>\n    <TeamTrends usersData={usersData} />\n    <UserTrends usersData={usersData} />\n    <UserList usersData={usersData} />\n</>\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    usersData: state.usersData,\n    issues: state.issues,\n    releases: state.releases,\n    repoInfo: state.repoInfo,\n})\n\nexport default connect(mapStateToProps)(RepoView)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { H, P, UL, LI } from '../shared/StyledTags'\nimport ChartDescription from '../shared/ChartDescription'\nimport Button from '../shared/Button'\nimport Paper from '../shared/Paper'\nimport { clearUser } from '../../state/actions'\nimport formatRadarData from '../../format/radarData'\nimport Radar from '../charts/Radar'\nimport Bar from '../charts/Bar'\nimport Line from '../charts/Line'\n\nconst colourA = '#1f77b4'\nconst colourB = '#e82573'\n\nconst userRadars = (\n    {\n        averagedData,\n        maxValues,\n        user,\n    },\n    userName\n) => {\n    const items = [\n        {\n            area: 'Code comments',\n            dataKey: 'codeCommentsGiven',\n        },\n        {\n            area: 'PR comments',\n            dataKey: 'generalCommentsGiven',\n        },\n        {\n            area: 'Approvals',\n            dataKey: 'approvalsGiven',\n        },\n        {\n            area: 'Merged PRs',\n            dataKey: 'totalPRs',\n        },\n        {\n            area: 'PR size',\n            dataKey: 'prSize',\n        },\n    ]\n\n    const getRadarData = items => items\n        .map(({ area, dataKey }) => {\n            const originalUser = user[dataKey] || 0\n            const peersOriginal = averagedData[dataKey] || 0\n            const maxValue = maxValues[dataKey] || 0\n\n            return {\n                area,\n                [userName]: (originalUser / maxValue) * 100,\n                peers: (peersOriginal / maxValue) * 100,\n                [`${userName}Original`]: originalUser,\n                peersOriginal,\n            }\n        })\n\n    const radars = [\n        {\n            data: getRadarData(items),\n            titleItems: [\n                { label: userName, color: colourA },\n                { label: 'Peers', color: colourB },\n            ],\n            keys: [userName, 'peers'],\n            width: 400,\n            height: 235,\n        },\n    ]\n\n    return radars\n}\n\nconst userBars = ({\n    averagedData,\n    user,\n}) => {\n    const averageAndUserData = [user, averagedData]\n\n    return [\n        {\n            bars:[\n                {\n                    dataKey: 'commentsGiven',\n                    color: colourA,\n                    label: 'Comments given',\n                },\n                {\n                    dataKey: 'commentsReceived',\n                    color: colourB,\n                    label: 'Comments received',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'approvalsGiven',\n                    color: colourA,\n                    label: 'Approvals given',\n                },\n                {\n                    dataKey: 'approvalsReceived',\n                    color: colourB,\n                    label: 'Approvals received',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'totalPRs',\n                    color: colourA,\n                    label: 'Opened PRs',\n                },\n                {\n                    dataKey: 'uniquePRsApproved',\n                    color: colourB,\n                    label: 'PRs approved',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'prSize',\n                    color: colourA,\n                    label: 'PR size',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'age',\n                    color: colourB,\n                    label: 'PR age',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n    ]\n}\n\nconst userGraphs = (data = [], releases = [], userName) => {\n    const mergedPrData = data\n        .filter(({ mergedAt } = {}) => mergedAt)\n\n    const peerPrData = mergedPrData\n        .filter(({ author }) => author !== userName)\n\n    const userPrData = mergedPrData\n        .filter(({ author }) => author === userName)\n\n    return [\n        {\n            markers: releases,\n            data: [{\n                lines: [\n                    {\n                        label: 'User comments',\n                        color: colourA,\n                        dataKey: 'commentsGiven',\n                        data: userPrData,\n                    },\n                    {\n                        label: 'Peer Comments',\n                        color: colourB,\n                        dataKey: 'commentsGiven',\n                        data: peerPrData,\n                    },\n                ],\n                xAxis: 'left',\n            }],\n        },\n        {\n            markers: releases,\n            data: [{\n                lines: [\n                    {\n                        label: 'User PR size',\n                        color: colourA,\n                        dataKey: 'prSize',\n                        data: userPrData,\n                    },\n                    {\n                        label: 'Peer PR size',\n                        color: colourB,\n                        dataKey: 'prSize',\n                        data: peerPrData,\n                    },\n                ],\n                xAxis: 'left',\n            }],\n        },\n        {\n            markers: releases,\n            data: [{\n                lines: [\n                    {\n                        label: 'User PR age',\n                        color: colourA,\n                        dataKey: 'age',\n                        data: userPrData,\n                    },\n                    {\n                        label: 'Peer PR age',\n                        color: colourB,\n                        dataKey: 'age',\n                        data: peerPrData,\n                    },\n                ],\n                xAxis: 'left',\n            }],\n        },\n    ]\n}\n\nconst UserView = ({\n    pullRequests = [],\n    releases = [],\n    usersData = [],\n    user,\n    removeUser,\n    classes,\n} = {}) => {\n    const radarData = formatRadarData(usersData, user)\n    const radars = userRadars(radarData, user)\n    const bars = userBars(radarData)\n    const graphs = userGraphs(pullRequests, releases, user)\n\n    return (\n        <>\n            <Paper>\n                <ChartDescription\n                    title={\n                        <H level={2}>\n                            <span style={{ color: colourA }}>{user}</span>\n                            <Button\n                                className={classes.topButton}\n                                variant=\"outlined\"\n                                size=\"small\"\n                                value=\"Back to main view\"\n                                color=\"secondary\"\n                                onClick={(e) => {\n                                    e.preventDefault()\n                                    removeUser()\n                                }} />\n                        </H>\n                    }\n                    intro={`A collection of charts showing ${user} and average data from the top ${radarData.averagedData.userCount} peers`}\n                >\n                    <div>\n                        <P>Reminder that context is needed, without it what looks good can be bad and what looks good can be bad</P>\n                        <UL>\n                            <LI>How do the given and received metrics compare?</LI>\n                            <LI>How do Code comments(the how) and PR comments(the what) comaire?</LI>\n                            <LI>How do PR approvals comaire?</LI>\n                            <LI>How do size of PRs comaire?</LI>\n                        </UL>\n                    </div>\n                </ChartDescription>\n\n                {\n                    radars.length\n                        && (\n                            <div className={classes.groupedCharts}>\n                                {\n                                    radars\n                                        .map((info, i) => <Radar key={i} {...info} />)\n                                }\n                            </div>\n                        )\n                }\n                {\n                    bars.length\n                        && bars\n                            .map((info, i) => <Bar key={i} {...info} />)\n                }\n                {\n                    graphs.length\n                        && graphs\n                            .map((info, i) => <Line key={i} {...info} />)\n                }\n\n                <Button\n                    className={classes.fill}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value=\"Back to main view\"\n                    color=\"secondary\"\n                    onClick={(e) => {\n                        e.preventDefault()\n                        removeUser()\n                        window && window.scrollTo(0, 0)\n                    }} />\n            </Paper>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    releases: state.releases,\n    usersData: state.usersData,\n    user: state.user,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    removeUser: (x) => dispatch(clearUser(x)),\n})\n\nconst styles = theme => ({\n    'groupedCharts': {\n        width: '100%',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n    },\n    fill: {\n        flexBasis: '100%',\n    },\n    topButton: {\n        marginLeft: theme.mySpacing.y.large,\n    },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UserView))","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport RepoView from '../repo/Repo'\nimport UserView from '../user/User'\n\nconst styles = () => ({\n    'root': {\n        position: 'relative',\n    },\n    'fetching': {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#b10e4f',\n        animation: 'pulse 1s infinite alternate',\n        opacity: 0.4,\n    },\n    '@keyframes pulse': {\n        '100%': {\n            opacity: 0.6,\n        },\n    },\n})\n\nconst Visualisation = ({\n    user,\n    fetching,\n    classes,\n} = {}) => (\n    <div className={classes.root}>\n        {\n            user\n                ? <UserView />\n                : <RepoView />\n        }\n        {\n            fetching\n                && <div className={classes.fetching}></div>\n        }\n    </div>\n)\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    fetching: state.fetching,\n\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(Visualisation))","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst CoreWrapper = ({ classes, children }) => <div className={classes.wrapper}>{children}</div>\n\nconst styles = theme => ({\n    '@global': {\n        'body': {\n            margin: 0,\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    wrapper: {\n        padding: 0,\n        backgroundColor: theme.palette.background.default,\n        overflow: 'auto',\n    },\n})\n\nexport default withStyles(styles)(CoreWrapper)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Brightness3 from '@material-ui/icons/Brightness3';\nimport WbSunny from '@material-ui/icons/WbSunny';\n\nimport { toggleTheme } from '../../state/actions'\n\nconst Links = ({ classes, themeType, themeToggle }) => {\n    return (\n        <div className={classes.wrapper} >\n            <a alt=\"My Twitter page\" className={classes.link} href=\"https://twitter.com/chris_07734\">\n                <TwitterIcon className={classes.icon} />\n            </a>\n            <a alt=\"Github repo page\" className={classes.link} href=\"https://github.com/n07734/community-health\">\n                <GitHubIcon className={classes.icon} />\n            </a>\n            <a\n                href=\"#theme\"\n                alt=\"Change theme\"\n                onClick={(e) => {\n                    e.preventDefault()\n                    themeToggle()\n                }}\n                className={themeType}\n            >\n                <WbSunny className={`${classes.icon} sun`} />\n                <Brightness3 className={`${classes.icon} moon`} />\n            </a>\n        </div>\n    );\n};\n\nconst styles = theme => ({\n    wrapper: {\n        position: 'absolute',\n        top: theme.mySpacing.x.small,\n        right: theme.mySpacing.x.small,\n        '& > a': {\n            marginLeft: theme.mySpacing.x.small\n        },\n        '& a:hover $icon': {\n            color: theme.palette.iconHover\n        },\n        '& .dark .moon': {\n            display: 'none'\n        },\n        '& .dark:hover .moon': {\n            display: 'inline'\n        },\n        '& .dark:hover .sun': {\n            display: 'none'\n        },\n        '& .light .sun': {\n            display: 'none'\n        },\n        '& .light:hover .sun': {\n            display: 'inline'\n        },\n        '& .light:hover .moon': {\n            display: 'none'\n        },\n    },\n    icon: {\n        color: theme.palette.text.primary,\n    }\n})\n\nconst mapStateToProps = (state) => ({\n    themeType: state.themeType,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    themeToggle: (x) => dispatch(toggleTheme(x)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Links))\n","import React from 'react'\n\nimport { H, P } from '../shared/StyledTags'\nimport ChartDescription from '../shared/ChartDescription'\nimport Paper from '../shared/Paper'\nimport DataOptions from './DataOptions'\nimport Visualisation from './Visualisation'\nimport PageWrapper from './PageWrapper'\nimport Links from './Links'\n\nconst Page = () => (\n    <PageWrapper>\n        <Paper className=\"bg-none\">\n            <Links />\n            <ChartDescription\n                title={(\n                    <H level={1}>Code Contribution Health</H>\n                )}\n                intro=\"The aim of this tool is to help teams learn from their contribution trends. Also to see the contribution trends of popular repositories*\"\n            >\n                <div>\n                    <P>This tool is not a 'lines of code' like metric, it contains in depth contribution based metrics meant to help teams find good and bad trends. Also helps show if changes to ways of working have an impact on important metrics over time. Understanding of the team's way of working is needed to get the full value from this data.</P>\n                    <P>Context is king, data that looks 'good' might be 'bad' and data that looks 'bad' might be 'good'. For example little feedback in PRs may be expected if the team is doing small changes in an established code base or not getting enough feedback working on a greenfield project.</P>\n                    <P>The sections below have some pointers to look out for, these are meant as guides as team context is needed to know what the data is truly showing.</P>\n                    <P>* If you contribute to any of the open source repositories it would be great if you could open a pull request to describe what software delivery life cycle is and maybe what learnings that were made to get there. This could help others see how it impacts contributions and maybe adopt some of the practices.</P>\n                </div>\n            </ChartDescription>\n        </Paper>\n        <>\n            <DataOptions />\n            <Visualisation />\n        </>\n    </PageWrapper>\n)\n\nexport default Page\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport { pathOr } from 'ramda'\n\nimport theme from './theme'\nimport Page from './components/home/Page'\n\nimport * as actions from './state/actions'\n\nconst App = ({ getPreFetchedData, themeType, setUser } = {}) => {\n    useEffect(() => {\n        const quertString = pathOr('', ['location', 'search'],window)\n        const urlParams = new URLSearchParams(quertString);\n        const repo = urlParams.get('repo') || 'react';\n        const user = urlParams.get('user') || '';\n\n        getPreFetchedData(repo)\n        setUser(user)\n    }, [getPreFetchedData, setUser])\n\n    return (\n        <MuiThemeProvider theme={theme(themeType)}>\n            <Page />\n        </MuiThemeProvider>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    themeType: state.themeType,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getPreFetchedData: (x) => dispatch(actions.getPreFetchedData(x)),\n    setUser: (x) => dispatch(actions.setUser(x)),\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App)\n","import { combineReducers } from 'redux'\nimport types from './types'\n\nconst reducers = combineReducers({\n    user: (user = '', action) => {\n        const newValue = ({\n            [types.SET_USER]: () => action.payload,\n            [types.CLEAR_USER]: () => '',\n        })[action.type]\n\n        return newValue\n            ? newValue()\n            : user\n    },\n    fetches: combineReducers({\n        token: (token = '', action) => (action.type === types.STORE_TOKEN)\n            ? action.payload\n            : token,\n        org: (org = '', action) => (action.type === types.STORE_ORG)\n            ? action.payload\n            : org,\n        repo: (repo = '', action) => (action.type === types.STORE_REPO)\n            ? action.payload\n            : repo,\n        prPagination: (prPagination = { hasNextPage: true }, action) =>\n            (action.type === types.SET_PR_PAGINATION)\n                ? action.payload\n                : prPagination,\n        releasesPagination: (releasesPagination = { hasNextPage: true }, action) =>\n            (action.type === types.SET_RELEASES_PAGINATION)\n                ? action.payload\n                : releasesPagination,\n        issuesPagination: (issuesPagination = { hasNextPage: true }, action) =>\n            (action.type === types.SET_ISSUES_PAGINATION)\n                ? action.payload\n                : issuesPagination,\n    }),\n    fetching: (fetching = false, action) => [\n        action.type === types.FETCH_START\n            && (() => true),\n        action.type === types.FETCH_END\n            && (() => false),\n        () => fetching,\n    ]\n        .find(Boolean)(),\n    error: (error = '', action) => {\n        const newValue = ({\n            [types.FETCH_ERROR]: () => action.payload,\n            [types.CLEAR_FETCH_ERROR]: () => '',\n        })[action.type]\n\n        return newValue\n            ? newValue()\n            : error\n    },\n    preFetchedRepo: (repo = '', action) => {\n        const newValue = ({\n            [types.PREFETCHED_REPO]: () => action.payload,\n            [types.CLEAR_PRS]: () => '',\n        })[action.type]\n\n        return newValue\n            ? newValue()\n            : repo\n    },\n    repoInfo: (repoInfo = {}, action) => [\n        action.type === types.ADD_REPO_INFO\n            && action.payload,\n        action.type === types.CLEAR_REPO_INFO\n            && {},\n        repoInfo,\n    ].find(Boolean),\n    pullRequests: (prs = [], action) => [\n        action.type === types.ADD_PRS\n            && prs.concat(action.payload),\n        action.type === types.CLEAR_PRS && [],\n        prs,\n    ].find(Boolean),\n    usersData: (users = [], action) => [\n        action.type === types.ADD_USERS_DATA\n            && action.payload,\n        action.type === types.CLEAR_USERS_DATA && [],\n        users,\n    ].find(Boolean),\n    issues: (issues = [], action) => [\n        action.type === types.ADD_ISSUES\n            && issues.concat(action.payload),\n        action.type === types.CLEAR_ISSUES && [],\n        issues,\n    ].find(Boolean),\n    releases: (releases = [], action) => [\n        action.type === types.ADD_RELEASES\n            && releases.concat(action.payload),\n        action.type === types.CLEAR_RELEASES && [],\n        releases,\n    ].find(Boolean),\n    themeType: (themeType = 'dark', action) =>\n        action.type === types.TOGGLE_THEME\n            ? (themeType === 'dark' ? 'light' : 'dark')\n            : themeType,\n})\n\nexport default reducers\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createStore, applyMiddleware, compose } from 'redux'\n\nimport App from './App'\nimport reducers from './state/reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunk)\n))\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}