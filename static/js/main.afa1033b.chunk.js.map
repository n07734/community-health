{"version":3,"sources":["../node_modules/sentiment/languages sync /^/.//.*//index$","format/rawData.js","theme.js","components/shared/StyledTags.js","components/shared/ChartDescription.js","components/shared/Paper.js","api/batch.js","format/filterByUntilDate.js","api/queries.js","api/fillers.js","state/types.js","api/api.js","api/getUsersData.js","api/getUntilDate.js","format/lightenData.js","format/userData.js","state/actions.js","components/shared/Button.js","components/home/Message.js","components/home/DataOptions/styles.js","preFetchedInfo.js","components/home/DataOptions/PrefetchedOptions.js","components/home/DataOptions/SelectAmountData.js","components/home/DataOptions/utils.js","components/home/DataOptions/ButtonWithMessage.js","components/home/DataOptions/TextInput.js","components/home/DataOptions/Download.js","components/home/DataOptions/FormSection.js","components/home/DataOptions/index.js","components/colors.js","components/charts/ChartHeading.js","components/charts/styledCharts.js","components/charts/batchBy.js","components/charts/lineHelpers.js","components/charts/Line.js","components/sections/PullRequestTrends.js","components/sections/IssuesTrends.js","components/charts/hasChartData.js","components/charts/Bar.js","format/chordData.js","components/charts/Chord.js","components/sections/TeamTrends.js","components/charts/Radar.js","format/radarData.js","components/sections/UserTrends.js","components/sections/UserList.js","components/home/DataOptions/PretetchedForm.js","components/sections/ReportDescription.js","components/Repo.js","components/User.js","components/charts/Pie.js","components/sections/RepoSplit.js","components/sections/Sentiment.js","components/Team.js","components/home/Visualisation.js","components/home/PageWrapper.js","components/home/Links.js","components/home/Page.js","components/Loader.js","App.js","state/reducers.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","paths","themeColor","type","light","dark","themeColorBg","fontFamily","fontSize","defaultCopy","color","marginTop","marginBottom","fontWeight","markerSettings","legendOrientation","legendPosition","height","legendOffsetX","legendOffsetY","spacing","x","tiny","small","medium","large","y","theme","createTheme","palette","secondary","contrastText","main","primary","mainCopy","groupedCharts","width","display","flexWrap","justifyContent","iconHover","text","link","background","default","paper","shadow","switch","typography","useNextVariants","mySpacing","copy","body","lineHeight","list","listItem","h4","h3","h2","h1","charts","textColor","crosshair","line","stroke","axis","legend","fill","ticks","legends","hidden","symbol","opacity","legendsTextFill","dotColor","tooltip","container","boxShadow","grid","markers","lineStyle","strokeWidth","textStyle","tertiary","strokeDasharray","styles","p","P","withStyles","className","classes","children","H","level","styleAs","props","hClassName","Tag","root","flexGrow","alignExpander","alignItems","rootRows","flexBasis","linkMargin","marginLeft","wrapperFlex","title","intro","expandText","useState","toggle","setCount","alignClass","href","onClick","preventDefault","Collapse","in","padding","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","position","flexDirection","classNames","runBatchQueue","batches","job","resolved","Promise","reject","currentBatch","remainingBatches","all","j","then","results","length","more","concat","catch","batch","argsList","batchSize","splitEvery","filterByUntilDate","datePath","order","untilDate","item","itemsDateValue","pathOr","itemsDate","Date","until","isAfter","isBefore","cursorQ","cursor","key","getCursor","oldest","newest","pageInfo","comments","pullRequests","pagination","reviews","issues","getPaginationByType","oldFetchInfo","data","hasNextPage","startCursor","endCursor","items","dateKey","filteredItems","isDate","filter","typeStateMap","releases","oldestDefault","oldestCurrent","newestDefault","newestCurrent","dateFilteredLength","tryNextPage","cond","always","alwaysFalse","alwaysTrue","hasNextPageForDate","getRemainingPageCount","sort","a","b","maxItems","Math","ceil","userQuery","user","sortDirection","amountOfData","issuesPagination","prPagination","query","resultInfo","byType","updatedAmountOfData","Number","isInteger","nextPageInfo","hasNextPageKey","values","some","fillerType","hasMoreResults","batchedQuery","org","repo","releasesPagination","commentsQuery","nodeId","rawData","nextArgs","reviewsQuery","reviewCommentsQuery","fillData","apiCall","fillByType","fillers","pullRequestsComments","pullRequestsReviews","allPullRequestReviewsComments","filler","resolvedFillers","reduce","currentItem","applyFillerResult","recursiveFiller","makeQuery","queryInfo","currentResults","currentHasNextPage","newResult","newHasNextPage","updatedData","updateRawData","newData","updatedNode","assign","node","getQueryInfo","getAllReviewComments","review","currentReviewComments","reviewCommentsQueryInfo","allReviewComments","edges","updatedReviewComments","getAllPullRequestReviews","pullRequest","currentReviews","reviewsQueryInfo","allReviews","allPullRequestsReviews","updatedpullRequestsData","updatePullRequests","propOr","result","pullRequestsItems","pullRequestsData","mergedPullRequests","currentPullRequest","find","getAllPullRequestComments","currentComments","commentsQueryInfo","allComments","allPullRequestsComments","types","SET_USER","CLEAR_USER","SET_TEAM_NAME","CLEAR_TEAM_NAME","STORE_ORG","CLEAR_ORG","STORE_TOKEN","STORE_FORM_UNTIL_DATE","CLEAR_FORM_UNTIL_DATE","STORE_UNTIL_DATE","CLEAR_UNTIL_DATE","SET_PR_PAGINATION","CLEAR_PR_PAGINATION","SET_RELEASES_PAGINATION","CLEAR_RELEASES_PAGINATION","SET_ISSUES_PAGINATION","CLEAR_ISSUES_PAGINATION","FETCH_STATUS","FETCH_START","PRE_FETCH_ERROR","CLEAR_PRE_FETCH_ERROR","FETCH_ERROR","CLEAR_FETCH_ERROR","FETCH_END","STORE_REPOS","STORE_REPO","CLEAR_REPO","STORE_AMOUNT","STORE_SORT","STORE_ENT_URL","STORE_EX_IDS","CLEAR_EX_IDS","STORE_USER_IDS","CLEAR_USER_IDS","ADD_PRS","ADD_FILTERED_PRS","CLEAR_PRS","CLEAR_FILTERED_PRS","ADD_ISSUES","ADD_FILTERED_ISSUES","CLEAR_FILTERED_ISSUES","CLEAR_ISSUES","ADD_RELEASES","CLEAR_RELEASES","TOGGLE_THEME","PREFETCHED_NAME","CLEAR_PREFETCHED_NAME","ADD_USERS_DATA","CLEAR_USERS_DATA","parseJSON","response","json","status","error","console","log","triggeredAbuseRate","message","test","triggeredJsonError","fetchInfo","fetch","enterpriseAPI","method","headers","token","JSON","stringify","shouldGetNextPage","pause","ms","setTimeout","numRateTriggers","pauseThenRetry","apiInfo","now","api","errorMessage","getCurrentItemsByType","total","acc","getLatestDate","latestResult","at","latestResultItems","targetItem","dateSort","getTime","dispatch","Boolean","oldestItemWithNextPage","payload","prCount","latestItemDate","issueCount","releaseCount","apiCallWithToken","fullData","updatedResults","updatedFetchInfo","mergeDeepRight","hasTriggeredAbuse","propEq","compose","getErrorMessage","undefined","getUsersData","userIds","allUsersData","finalFetchInfo","allResults","forEach","push","prop","usersData","flat","getPrDate","allPrs","prIndex","pr","currentEndDate","path","getUntilDate","fetches","changeBy","months","amountOfDataIsString","is","String","isDesc","isAsc","noDateUntil","isEmpty","subtractDate","sub","dateFromPRs","prDate","add","newUntilDate","allPass","formatCommenters","userCount","formatSentimentsCommenters","author","score","totalScore","formatSentiments","sentiment","Sentiment","sentimental","comment","analyze","sentimentScore","sentiments","getAllCodeComments","allCodeComments","filterForUsers","users","includes","filterOutUsers","formatComments","exclude","generalComments","codeComments","commentsMap","general","commentsAuthor","authorSentimentScore","prefix","formatAllComments","generalCommentsInfo","codeCommentsInfo","collatedCommentsInfo","formatApprovals","ghApprovals","ghApprovers","approvals","approvers","mergedAt","filterSortPullRequests","excludeIds","allPullRequests","filteredPRs","remainingPRs","hasExcludedAuthor","any","keepItem","formatPullRequests","url","additions","deletions","createdAt","allCommentsInfo","prSize","age","differenceInDays","prData","flatten","filterSortIssues","allIssues","filteredIssues","remainingIssues","formatIssues","labels","isBug","formatReleases","tag","releaseType","majorV","major","minorV","minor","patchV","patch","prereleaseV","prerelease","getReleaseType","date","description","slimValue","value","Array","isArray","slimArray","slimObject","arr","newArray","obj","newObject","entries","newValue","baseUserData","approvalsGiven","approvalsByUser","commentsGiven","commentsReceived","codeCommentsGiven","codeCommentsReceived","generalCommentsGiven","generalCommentsReceived","totalPRs","uniquePRsContributedTo","commentsByUser","updateContributorCount","currentData","objKey","addition","prevData","updated","formatUserData","updateByUsersCount","currentUserData","currentKeyData","updatedKeyData","userData","commenters","codeCommenters","generalCommenters","updatedCommentsByUser","updatedApprovalsByUser","updatedCommentsGiven","updatedCodeCommentsGiven","updatedGeneralCommentsGiven","updatedApprovalsGiven","updatedUniquePRsApproved","Set","prSizes","averagePrSize","round","prAges","averagePrAge","approvalsReceived","uniqueAuthors","newUsersData","sortedUsers","aTotal","setUser","storeToken","userIdsFromString","pipe","split","trim","storeAmountOfData","storeFormUntilDate","getState","formUntilDate","storeSortDirection","clearPastSearch","notSameValues","formValues","notSameStringValues","notSameIds","idsString","formIds","currentIds","not","equals","notSameArrayValues","anyPass","clearData","clearAllData","updateUsersData","state","noUserIds","missing","current","i","prepend","validateRequest","validStringArgs","every","validArraygArgs","isValid","getAPIData","appendData","isValidRequest","newPullrequests","allPullrequests","newRemainingPRs","newFilteredPRs","newIssues","newRemainingIssues","newFilteredIssues","pick","setPreFetchedData","repoData","preFetchedName","teamName","fetchesInfo","fallback","getDownloadProps","fileName","reportData","pickAll","dissocPath","assoc","getReportData","blob","Blob","URL","createObjectURL","download","marginRight","join","variant","size","borderRadius","margin","backgroundColor","warn","inputGrid","gridTemplateColumns","columnGap","rowGap","minHeight","gridColumn","typeOptions","textTransform","fullRow","formDescription","dataPaper","child","preFetched","preFetchedRepos","name","file","preFetchedTeams","connect","preFetchedError","getPreFetchedReport","savedReportName","getPreFetched","useEffect","quertString","window","URLSearchParams","get","repoInfo","preFetchButton","setValue","hasTeamData","itemText","amount","Select","onChange","target","inputProps","MenuItem","inputLabels","validate","validateForm","formInfo","getErrorValue","errorValue","validationErrors","buttonText","fetching","formValue","inputError","setInputError","label","helperText","onBlur","event","onFocus","TextField","getDownloadInfo","setValues","storeOrg","storeRepo","userIdsArray","storeUserIds","storeTeamName","storeEnterpriseAPI","excludeArray","storeExcludeIds","getData","reportType","primaryInputs","defaultInputs","setFormInfo","inputStates","onSubmit","inputKey","clearReport","selectedOption","setLocalOption","Paper","option","setOption","colors","ChartHeading","useStyles","makeStyles","borderBottom","content","bottom","left","right","LineItem","Item","style","mathTypeMap","average","sum","count","multiple","uniqueLinesMaths","groupMath","singleMathType","centerHeading","textAlign","headingWrap","barChartComponentWrap","maxWidth","lineChartComponentWrap","chordWrap","pieWrap","chartWrap","styledCharts","Chart","require","getMonth","getWeek","getDay","differenceInMonths","isNewNthWeek","mod","prev","prevItemsWeek","currentItemsWeek","isNew","prevItemsDay","currentItemsDay","batchByType","batchType","prevWeeks","slice","currentWeek","prevItem","batchByData","startDate","endDate","totalMonths","T","batchBy","getAllYValues","getMaxYValue","allValues","apply","max","getMinYValue","minValue","min","dateA","dateB","formatDate","info","month","dayM","getDate","getFullYear","formatLineData","dataKey","sortedData","batchedData","formattedData","formatBatches","formatLinesData","axix","lines","formatGraphMarkers","lineData","start","end","currentStart","currentEnd","dateStart","dateEnd","formattedMarkers","currentDate","MAJOR","MINOR","smoothNumber","ruffledNumber","stringNumber","roundTo","reduceRight","index","increment","number","parseInt","updatedItem","reverse","ToolTip","convertedRightLines","getYValue","point","yCurrentValue","yFormatted","originalY","Chip","points","rows","serieColor","serieId","Line","showLegends","useTheme","leftAxis","xAxis","leftLinesData","maxLeftValue","minLeftValue","rightAxis","rightLinesData","maxRightValue","dataItem","leftHeadingItems","rightHeadingItems","legendsArray","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","toggleSerie","itemTextColor","hasData","top","lineWidth","curve","animate","xScale","format","xFormat","yScale","axisBottom","tickSize","tickPadding","tickRotation","axisLeft","tickValues","pointLabelYOffset","axisRight","rawLeftValue","realRightValue","enableGridX","enableSlices","sliceTooltip","getByAuthorData","authorsPrs","theirPrs","byAuthorLines","byAuthor","isTeamPage","byAuthorData","formatIssueData","bug","issue","fullP","hasChartData","dataArray","Bar","bars","sortBy","indexBy","layout","titlePrefix","trimmedData","byPropDesc","finalData","groupMode","valueFormat","abs","enableLabel","getNameList","scoredData","keyData","given","sortedValues","accPercent","showNames","itemPercent","percentageOfTotal","formatChordData","otherAppened","matrix","otherTotal","ignoreNames","martixRow","matrixRowsForNamed","nameData","matrixRowForOther","mergedMatrix","getMatrix","names","Chord","hasMatrixData","row","arcBorderColor","from","modifiers","ribbonOpacity","ribbonBorderWidth","ribbonBorderColor","innerRadiusRatio","labelRotation","padAngle","innerRadiusOffset","labelOffset","labelTextColor","isInteractive","arcHoverOpacity","arcHoverOthersOpacity","ribbonHoverOpacity","ribbonHoverOthersOpacity","motionStiffness","motionDamping","maxAuthors","radarSliceTooltip","matched","area","Radar","titleItems","dotSize","dotBorderColor","dotBorderWidth","gridShape","enableDotLabel","gridLabelOffset","gridLevels","maxValue","gridAngleStep","angleStep","formatRadarData","filterAuthor","defaultValues","uniquePRsApproved","filteredContributors","p10","topUsers","totalled","addedUser","combinedData","averagedData","approvalsGivenByTeam","maxValues","parentAcc","upDateMaxValues","accVaue","radialChartsContributions","topXUsers","received","givenOriginal","receivedOriginal","radarData","contributionsRadar","setUserAction","fullW","allButons","currentTarget","scrollTo","newSortDirection","checkUntilDate","inputs","hardCodedKeys","titleCopy","where","propSatisfies","heading","hasReportData","PretetchedForm","RepoView","colourA","colourB","userRadars","userName","radars","originalUser","peersOriginal","getRadarData","userBars","averageAndUserData","userGraphs","mergedPrData","peerPrData","userPrData","removeUser","topButton","graphs","Pie","datum","innerRadius","cornerRadius","activeOuterRadiusOffset","borderWidth","startAngle","endAngle","enableArcLabels","arcLinkLabelsSkipAngle","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsTextColor","allRepos","allPRdata","sortedRepoData","topRepos","uniqueRepos","pieData","filteredPRData","sectionTitle","splitAt","leftData","rightData","sentPRData","commentSentimentScore","commentAuthorSentimentScore","userId","leftLines","rightLines","alt","Team","User","Repo","wrapper","overflow","themeType","themeToggle","icon","Page","PageWrapper","DataOptions","daysRemainingText","fetchStatus","transform","zIndex","animation","pastPRs","isTeamSearch","dayDiff","uptoDate","daysTotal","daysLoaded","daysRemaining","oneDayPercent","loadedPercent","usersPosition","findIndex","loadedUsers","oneUserPercent","loadedUserPercent","overlay","modal","LinearProgress","dashed","valueBuffer","setReposUserId","actions","setClear","startValue","storKey","clearKey","action","setClearString","setClearArray","setClearPagination","reducers","combineReducers","prs","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.afa1033b.chunk.js","sourcesContent":["var map = {\n\t\"./en/index\": 314\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 451;","import {\n    compose,\n    map,\n    any,\n    flatten,\n    filter,\n    path,\n    pathOr,\n    propOr,\n    sort,\n} from 'ramda'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport {\n    major,\n    minor,\n    patch,\n    prerelease,\n} from 'semver'\nimport Sentiment from 'sentiment'\nimport filterByUntilDate from './filterByUntilDate'\n\n\nconst formatCommentersObject = paths => items => items\n    .reduce((acc, item) => {\n        const user = path(paths, item)\n        const userCount = (acc[user] || 0) + 1\n\n        return Object.assign(acc, { [user]: userCount })\n    }, {})\n\nconst formatCommenters = formatCommentersObject(['node', 'author', 'login'])\n\nconst formatSentimentsCommenters = items => items\n    .reduce((acc, {author = '', score = 0}) => {\n        const totalScore = (acc[author] || 0) + score\n\n        return Object.assign(acc, { [author]: totalScore })\n    }, {})\n\nconst formatSentiments = (comments = []) => {\n    const sentiment = new Sentiment();\n\n    const sentimental = comments\n        .map(comment => {\n            const body = pathOr('',['node', 'body'], comment)\n            const commentAuthor = pathOr('', ['node', 'author', 'login'], comment)\n\n            return {\n                author: commentAuthor,\n                score: sentiment.analyze(body).score,\n            }\n        })\n\n    return {\n        sentimentScore: sentimental.reduce((acc, { score = 0 } = {}) => score + acc,0),\n        sentiments: formatSentimentsCommenters(sentimental),\n    }\n}\n\nconst getAllCodeComments = (data) => {\n    const allReviews = pathOr([], ['node', 'reviews', 'edges'], data)\n\n    const allCodeComments = []\n    allReviews\n        .forEach((review) => {\n            const comments = pathOr([], ['node', 'comments', 'edges'], review)\n            allCodeComments.push(...comments)\n        })\n\n    return allCodeComments\n}\n\nconst filterForUsers = users => item => users.includes(path(['node', 'author', 'login'], item))\nconst filterOutUsers = users => item => !filterForUsers(users)(item)\n\nconst formatComments = (type = '', exclude, data) => {\n    const author = pathOr('', ['node', 'author', 'login'], data)\n\n    const generalComments = pathOr([], ['node', 'comments', 'edges'], data)\n    const codeComments = getAllCodeComments(data)\n    const commentsMap = {\n        general: generalComments,\n        code: codeComments,\n        all: [\n            ...codeComments,\n            ...generalComments\n        ]\n    }\n    const allComments = commentsMap[type]\n\n    const comments = allComments\n        .filter(filterOutUsers([...exclude, author]))\n\n    const {\n        sentimentScore = 0,\n        sentiments = {},\n    } = formatSentiments(comments)\n\n    const commentsAuthor = allComments\n        .filter(filterForUsers([author]))\n    const {\n        sentimentScore: authorSentimentScore = 0,\n    } = formatSentiments(commentsAuthor)\n\n    const prefix = type === 'all'\n        ? 'c'\n        : `${type}C`\n\n    return {\n        [`${prefix}omments`]: comments.length,\n        [`${prefix}ommenters`]: formatCommenters(comments),\n        [`${prefix}ommentSentimentScore`]: sentimentScore,\n        [`${prefix}ommentSentiments`]: sentiments,\n        [`${prefix}ommentsAuthor`]: commentsAuthor.length,\n        [`${prefix}ommentAuthorSentimentScore`]: authorSentimentScore,\n    }\n}\n\nconst formatAllComments = (exclude, data) => {\n    const generalCommentsInfo = formatComments('general',exclude, data)\n    const codeCommentsInfo = formatComments('code', exclude, data)\n    const collatedCommentsInfo = formatComments('all', exclude, data)\n\n    return {\n        ...generalCommentsInfo,\n        ...codeCommentsInfo,\n        ...collatedCommentsInfo,\n    }\n}\n\nconst formatApprovals = (data) => {\n    const reviews = pathOr([], ['node', 'reviews', 'edges'], data)\n    const ghApprovals = reviews\n        .filter(x => path(['node', 'state'], x) === 'APPROVED')\n\n    const ghApprovers = formatCommenters(ghApprovals)\n\n    return {\n        approvals: ghApprovals.length,\n        approvers: ghApprovers,\n    }\n}\n\nconst prData = (exclude = []) => (data = {}) => {\n    const org = pathOr('', ['node', 'repository', 'owner', 'login'], data)\n    const repo = pathOr('', ['node', 'repository', 'name'], data)\n    const author = pathOr('', ['node', 'author', 'login'], data)\n    const url = pathOr('', ['node', 'url'], data)\n    const additions = pathOr(0, ['node', 'additions'], data)\n    const deletions = pathOr(0, ['node', 'deletions'], data)\n    const createdAt = pathOr('', ['node', 'createdAt'], data)\n    const mergedAt = pathOr('', ['node', 'mergedAt'], data)\n\n    const allCommentsInfo = formatAllComments(exclude, data)\n\n    const {\n        approvals,\n        approvers,\n    } = formatApprovals(data)\n\n    const prInfo = {\n        repo,\n        org,\n        author,\n        url,\n\n        additions,\n        deletions,\n        prSize: additions + deletions,\n\n        mergedAt,\n        age: differenceInDays(new Date(mergedAt), new Date(createdAt)) || 1,\n\n        approvals,\n        approvers,\n\n        ...allCommentsInfo\n    }\n\n    return prInfo\n}\n\nconst dateSort = (sortDirection) => ({ mergedAt: a }, { mergedAt: b }) => sortDirection === 'DESC'\n    ? new Date(a).getTime() > new Date(b).getTime()\n    : new Date(a).getTime() - new Date(b).getTime()\n\nconst filterSortPullRequests = ({ excludeIds = [], sortDirection }, untilDate, allPullRequests = []) => {\n    const filteredPRs = []\n    const remainingPRs = compose(\n        sort(dateSort('ASC')),\n        filter(item => {\n            const author = propOr('', 'author', item)\n            const hasExcludedAuthor = any(y => y === author, excludeIds)\n            const shouldFilterIn = filterByUntilDate(['mergedAt'], sortDirection, untilDate)(item)\n            const keepItem = shouldFilterIn && !hasExcludedAuthor\n\n            !keepItem && filteredPRs.push(item)\n            return keepItem\n        }),\n    )(allPullRequests)\n\n    return [remainingPRs, filteredPRs]\n}\n\nconst formatPullRequests = ({ excludeIds = [] }, results) => {\n    const pullRequests = compose(\n        map(prData(excludeIds)),\n        flatten,\n        map(pathOr([], ['data', 'result', 'pullRequests', 'edges'])),\n    )(results)\n\n    return pullRequests\n}\n\nconst filterSortIssues = ({ sortDirection }, untilDate, allIssues = []) => {\n    const filteredIssues = []\n    const remainingIssues = compose(\n        sort(dateSort('ASC')),\n        filter(item => {\n            const keepItem = filterByUntilDate(['mergedAt'], sortDirection, untilDate)(item)\n\n            !keepItem && filteredIssues.push(item)\n            return keepItem\n        }),\n    )(allIssues)\n\n    return [remainingIssues, filteredIssues]\n}\n\nconst formatIssue = (data) => {\n    const createdAt = pathOr('', ['node', 'createdAt'], data)\n    const title = pathOr('', ['node', 'title'], data)\n    const url = pathOr('', ['node', 'url'], data)\n    const labels = pathOr([], ['node', 'labels', 'edges'], data)\n\n    return {\n        // TODO: update key\n        mergedAt: createdAt,\n        url,\n        isBug: /bug/i.test(title) || labels.some(x => /bug/i.test(path(['node', 'name'], x))),\n    }\n}\n\nconst formatIssues = compose(\n    map(formatIssue),\n    flatten,\n    map(pathOr([], ['data', 'result', 'issues', 'edges'])),\n)\n\nconst getReleaseType = (tag) => {\n    try {\n        const majorV = major(tag)\n        const minorV = minor(tag)\n        const patchV = patch(tag)\n        const prereleaseV = prerelease(tag)\n\n        const releaseType = [\n            !prereleaseV && majorV && minorV === 0 && patchV === 0 && 'MAJOR',\n            !prereleaseV && minorV && patchV === 0 && 'MINOR',\n            'PATCH',\n        ].find(Boolean)\n\n        return releaseType\n    } catch(error) {\n        return 'PATCH'\n    }\n}\n\nconst formatRelease = (data) => {\n    const createdAt = pathOr('', ['node', 'createdAt'], data)\n    const tag = pathOr('', ['node', 'tag', 'name'], data)\n\n    const releaseType = getReleaseType(tag)\n\n    return {\n        date: createdAt,\n        description: tag,\n        releaseType,\n    }\n}\n\nconst formatReleases = compose(\n    map(formatRelease),\n    flatten,\n    map(pathOr([], ['data', 'result', 'releases', 'edges'])),\n)\nexport {\n    formatPullRequests,\n    filterSortPullRequests,\n    formatIssues,\n    filterSortIssues,\n    formatReleases,\n}\n","import { createTheme } from '@material-ui/core/styles'\n\nconst themeColor = type => ({\n    light: '#232023',\n    dark: '#eee',\n})[type]\n\nconst themeColorBg = type => ({\n    light: '#fff',\n    dark: '#232023',\n})[type]\n\nconst fontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\nconst fontSize = 12\n\nconst defaultCopy = (type) => ({\n    color: themeColor(type),\n    marginTop: 0,\n    marginBottom: '0.8rem',\n    fontSize: '1rem',\n    fontWeight: '400',\n    fontFamily,\n})\n\nconst markerSettings = {\n    legendOrientation: 'horizontal',\n    legendPosition: 'top-right',\n    height: 10,\n    legendOffsetX: 0,\n    legendOffsetY: -4,\n}\n\nconst spacing = {\n    x: {\n        tiny: '0.2rem',\n        small: '0.5rem',\n        medium: '0.8rem',\n        large: '1.2rem',\n    },\n    y: {\n        tiny: '0.5rem',\n        small: '0.8rem',\n        medium: '1rem',\n        large: '1.4rem',\n    },\n}\n\nconst theme =  (type = 'light') => createTheme({\n    type,\n    palette: {\n        type,\n        secondary: {\n            contrastText: '#ccc',\n            dark: '#1e6392',\n            light: '#7986cb',\n            main: '#1f77b4',\n        },\n        primary: {\n            contrastText: '#ccc',\n            dark: '#b10e4f',\n            light: '#d65287',\n            main: '#e82573',\n        },\n        mainCopy: {\n            color: themeColor(type),\n            fontSize: '1rem',\n            fontWeight: '400',\n            fontFamily,\n        },\n        groupedCharts: {\n            width: '100%',\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-evenly',\n        },\n        iconHover: ({\n            light: '#d65287',\n            dark: '#e82573',\n        })[type],\n        text: {\n            primary: themeColor(type),\n        },\n        link: ({\n            light: '#1f77b4',\n            dark: '#e82573',\n        })[type],\n        background: {\n            default: themeColorBg(type),\n            paper: themeColorBg(type),\n        },\n        shadow:({\n            light: '#ccc',\n            dark: '#666',\n        })[type],\n        switch: themeColor(type),\n    },\n    typography: { useNextVariants: true },\n    mySpacing: spacing,\n    copy: {\n        body: {\n            ...defaultCopy(type),\n            lineHeight: '1.3rem',\n        },\n        list: {\n            ...defaultCopy(type),\n            color: themeColor(type),\n        },\n        listItem: {\n            color: themeColor(type),\n            marginBottom: '0.2rem',\n        },\n        h4: {\n            ...defaultCopy(type),\n            marginBottom: '0.5rem',\n            fontSize: '1.3rem',\n            fontWeight: '500',\n        },\n        h3: {\n            ...defaultCopy(type),\n            fontSize: '2rem',\n            fontWeight: '500',\n            '@media (max-width: 768px)': {\n                fontSize: '1.5rem'\n            },\n            '@media (max-width: 668px)': {\n                fontSize: '1.3rem'\n            },\n        },\n        h2: {\n            ...defaultCopy(type),\n            fontSize: '3rem',\n            fontWeight: '200',\n            '@media (max-width: 768px)': {\n                fontSize: '2.5rem'\n            },\n            '@media (max-width: 668px)': {\n                fontSize: '2rem'\n            },\n        },\n        h1: {\n            ...defaultCopy(type),\n            fontSize: '4rem',\n            fontWeight: '300',\n            '@media (max-width: 768px)': {\n                fontSize: '3rem'\n            },\n            '@media (max-width: 668px)': {\n                fontSize: '2.5rem'\n            },\n        },\n    },\n    charts: {\n        fontFamily,\n        fontSize,\n        textColor: themeColor(type),\n        crosshair: {\n            line: {\n                stroke: themeColor(type),\n            },\n        },\n        axis: {\n            legend: {\n                text: { fill: themeColor(type) },\n            },\n            ticks: {\n                text: { fill: themeColor(type) },\n            },\n        },\n        legends: {\n            hidden: {\n                symbol: {\n                    fill: '#eee',\n                    opacity: 1,\n                },\n                text: {\n                    fill: '#eee',\n                    fontWeight: '400',\n                    opacity: 1,\n                },\n            },\n            text: {\n                fontWeight: '800',\n            },\n        },\n        legendsTextFill: themeColor(type),\n        dotColor: themeColor(type),\n        tooltip: {\n            fontFamily,\n            fontSize,\n            container: {\n                background: themeColorBg(type),\n                color: themeColor(type),\n                boxShadow: `0 1px 2px ${themeColor(type)}`,\n            },\n        },\n        grid: {\n            line: {\n                stroke: '#999',\n            },\n        },\n        markers: {\n            primary: {\n                lineStyle: {\n                    stroke:({\n                        light: '#077314',\n                        dark: '#077314',\n                    })[type],\n                    strokeWidth: 1,\n                },\n                textStyle: {\n                    fontFamily,\n                    fontSize,\n                    fill: ({\n                        light: '#077314',\n                        dark: '#077314',\n                    })[type],\n                },\n                ...markerSettings,\n            },\n            secondary: {\n                lineStyle: {\n                    stroke:({\n                        light: '#8b4ff0',\n                        dark: '#6b3dba',\n                    })[type],\n                    strokeWidth: 1,\n                },\n                textStyle: {\n                    fontFamily,\n                    fontSize,\n                    fill: ({\n                        light: '#8b4ff0',\n                        dark: '#6b3dba',\n                    })[type],\n                },\n                ...markerSettings,\n            },\n            tertiary: {\n                lineStyle: {\n                    stroke:({\n                        light: '#87cac6',\n                        dark: '#6b3dba',\n                    })[type],\n                    strokeWidth: 1,\n                    strokeDasharray:'2 6',\n                },\n                textStyle: {\n                    fontFamily,\n                    fontSize,\n                    fill: ({\n                        light: '#87cac6',\n                        dark: '#6b3dba',\n                    })[type],\n                },\n                ...markerSettings,\n            },\n\n        },\n    },\n})\n\nexport default theme\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n    p: theme.copy.body,\n    h1: theme.copy.h1,\n    h2: theme.copy.h2,\n    h3: theme.copy.h3,\n    h4: theme.copy.h4,\n    list: theme.copy.list,\n    listItem: theme.copy.listItem,\n})\n\nconst P = withStyles(styles)(({\n    className = '',\n    classes,\n    children,\n} = {}) => <p className={`${classes.p} ${className}`}>\n    {children}\n</p>)\n\nconst UL = withStyles(styles)(({\n    classes,\n    children,\n} = {}) => <ul className={classes.list}>\n    {children}\n</ul>)\n\nconst OL = withStyles(styles)(({\n    classes,\n    children,\n} = {}) => <ol className={classes.list}>\n    {children}\n</ol>)\n\nconst LI = withStyles(styles)(({\n    classes,\n    children,\n} = {}) => <li className={classes.listItem}>\n    {children}\n</li>)\n\nconst H = withStyles(styles)(({\n    level = 1,\n    styleAs,\n    className = '',\n    classes,\n    ...props\n} = {}) => {\n    const hClassName = `h${styleAs || level}`\n    const Tag = `h${level}`\n\n    return (\n        <Tag\n            className={`${classes[hClassName]} ${className}`}\n            {...props}\n\n        />\n    )\n})\n\n\nexport {\n    P,\n    UL,\n    OL,\n    LI,\n    H,\n}\n\n","import React, { useState } from 'react'\nimport Collapse from '@material-ui/core/Collapse'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { H, P } from './StyledTags'\n\nconst ChartDescription = ({\n    title,\n    intro,\n    children,\n    expandText = 'info',\n    className = '',\n    classes,\n} = {}) => {\n    const [toggle, setCount] = useState(false)\n\n    const alignClass = title && !intro\n        ? classes.alignExpander\n        : ''\n\n    return (\n        <div className={`${classes.root} ${alignClass} ${className} ${!intro ? '' : classes.rootRows}`}>\n            {\n               title && typeof title === 'string'\n                    ? <H level={2} >{title}</H>\n                    : title\n            }\n            <P>\n                {intro} {\n                    children && <a\n                        className={intro ? classes.link : classes.linkMargin}\n                        href=\"#desc\"\n                        onClick={(e) => {\n                            e.preventDefault()\n                            setCount(!toggle)\n                        }}>\n                        {\n                            toggle\n                                ? 'hide'\n                                : expandText\n                        }\n                    </a>\n                }\n            </P>\n            <Collapse className={`wrapper ${classes.wrapperFlex}`} in={toggle}>\n                {children}\n            </Collapse>\n        </div>\n    )\n}\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        flexGrow: 1,\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    alignExpander: {\n        alignItems: 'baseline',\n    },\n    rootRows: {\n        '& > *': {\n            flexBasis: '100%'\n        }\n    },\n    link: {\n        color: theme.palette.link,\n    },\n    linkMargin: {\n        color: theme.palette.link,\n        marginLeft: '0.5rem',\n    },\n    wrapperFlex: {\n        flexBasis: '100%'\n    }\n})\n\nexport default withStyles(styles)(ChartDescription)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\n\nconst styles = theme => ({\n    root: {\n        padding: `${theme.mySpacing.y.large} ${theme.mySpacing.y.large} 0 ${theme.mySpacing.y.large}`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'top left',\n        backgroundSize: '100% 20px',\n        backgroundImage: `linear-gradient(${theme.palette.shadow}, rgba(0,0,0,0))`,\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    },\n    'bg-none': {\n        background: 'none'\n    },\n    'justify': {\n        justifyContent: 'space-between',\n    },\n})\n\nconst PaperWapper = ({ classes = {}, className = '', children } = {}) => (\n    <div\n        className={classNames(classes.root, classes[className] || className)}\n    >\n        {children}\n    </div>\n)\n\nexport default withStyles(styles)(PaperWapper)","import { splitEvery } from 'ramda'\n\n// Runs each batch synchronously and the items in a batch asynchronously\nconst runBatchQueue = (batches, job, resolved = []) => new Promise((resolve, reject) => {\n    const [currentBatch, ...remainingBatches] = batches\n\n    Promise.all(currentBatch.map((j) => job(j)))\n        .then((results) => (\n            remainingBatches && remainingBatches.length\n                ? runBatchQueue(remainingBatches, job, results)\n                    .then((more) => resolve(resolved.concat(more)))\n                    .catch(reject)\n                : resolve(resolved.concat(results))\n        ))\n        .catch(reject)\n})\n\n// Takes an array of arguments for the job and runs them in batches\nconst batch = (argsList = [], job, batchSize = 2) => {\n    const batches = splitEvery(batchSize, argsList)\n\n    return argsList.length\n        ? runBatchQueue(batches, job)\n        : []\n}\n\nexport default batch\n","import { pathOr } from 'ramda'\nimport { isAfter, isBefore } from 'date-fns'\n\nconst filterByUntilDate = (datePath = [], order = 'DESC', untilDate = '') => (item) => {\n    const itemsDateValue = pathOr('', datePath, item)\n    const itemsDate = itemsDateValue && new Date(itemsDateValue)\n    const until = new Date(untilDate)\n    const shouldFilterIn = order === 'DESC'\n        ? isAfter(itemsDate, until)\n        : isBefore(itemsDate, until)\n\n    return shouldFilterIn\n}\n\nexport default filterByUntilDate\n","import { pathOr } from 'ramda'\nimport { isDate } from 'date-fns'\nimport {\n  always,\n  T as alwaysTrue,\n  F as alwaysFalse,\n  cond,\n} from 'ramda'\nimport filterByUntilDate from '../format/filterByUntilDate'\n\nconst cursorQ = (cursor, key = 'after') => cursor\n    ? ` ${key}:\"${cursor}\" `\n    : ''\n\nconst getCursor = order => ({oldest, newest}) => {\n    const cursor = order === 'DESC' ? oldest : newest\n    return cursorQ(cursor)\n}\n\nconst pageInfo = 'pageInfo { endCursor hasNextPage hasPreviousPage startCursor }'\n\nconst comments = (cursor) => `\n    comments(first: ${cursor ? 100: 10} ${cursorQ(cursor)}) {\n      edges {\n        node {\n          author {\n            login\n          }\n          body\n        }\n      }\n      ${pageInfo}\n    }\n`\n\nconst pullRequests = order => pagination => `\npullRequests(\n  first: 50\n  ${getCursor(order)(pagination)}\n  states: [MERGED]\n  orderBy: {field: CREATED_AT direction: ${order}}\n) {\n  totalCount\n  edges {\n    node {\n      id\n      url\n      author {\n        login\n      }\n      repository {\n        name\n        owner {\n          login\n        }\n      }\n      additions\n      deletions\n      mergedAt\n      createdAt\n      ${reviews()}\n      ${comments()}\n    }\n  }\n  ${pageInfo}\n}`\n\nconst issues = order => pagination => `\nissues(\n  ${getCursor(order)(pagination)}\n  first: 50\n  orderBy: { field:CREATED_AT direction: ${order} }\n) {\n  totalCount\n  edges {\n    node {\n      title\n      url\n      createdAt\n      closedAt\n      state\n      labels(first:5) {\n        edges {\n          node {\n            name\n          }\n        }\n      }\n    }\n  }\n  ${pageInfo}\n}`\n\nconst releases = order => pagination => `\nreleases(\n  ${getCursor(order)(pagination)}\n  first: 50\n  orderBy:{ field:CREATED_AT direction: ${order} }\n) {\n  totalCount\n  edges {\n    node {\n      id\n      name\n      createdAt\n      tag {\n        name\n      }\n    }\n  }\n  ${pageInfo}\n}`\n\nconst reviews = (cursor) => `\n    reviews(first: ${cursor ? 100 : 10} ${cursorQ(cursor)}) {\n      edges {\n        node {\n          id\n          state\n          author {\n            login\n          }\n          ${comments()}\n        }\n      }\n      ${pageInfo}\n    }\n`\n\nconst getPaginationByType = (oldFetchInfo = {}, untilDate ='', data = {}, order) => type => {\n    const {\n        hasNextPage = false,\n        startCursor,\n        endCursor,\n    } = pathOr({}, ['data', 'result', type, 'pageInfo'], data)\n\n    const items = pathOr([], ['data', 'result', type, 'edges'], data)\n\n    const dateKey = type === 'pullRequests'\n      ? 'mergedAt'\n      : 'createdAt'\n\n    const filteredItems = isDate(untilDate)\n      ? items.filter(filterByUntilDate(['node', dateKey], order, untilDate))\n      : []\n\n    const typeStateMap = {\n        pullRequests: 'prPagination',\n        issues: 'issuesPagination',\n        releases: 'releasesPagination',\n    }\n\n    const oldestDefault = order === 'DESC' ? endCursor : startCursor\n    const oldestCurrent = pathOr(oldestDefault, [typeStateMap[type], 'oldest'], oldFetchInfo)\n\n    const newestDefault = order === 'ASC' ? endCursor : startCursor\n    const newestCurrent = pathOr(newestDefault, [typeStateMap[type], 'newest'], oldFetchInfo)\n\n    // TODO: Don't clear if undefined cursor\n    // TODO: add hasPrevPage\n    const dateFilteredLength = filteredItems.length\n    const tryNextPage = cond([\n      [always(hasNextPage === false), alwaysFalse],\n      [always(!isDate(untilDate)), always(hasNextPage)],\n      [always(dateFilteredLength === 0), alwaysFalse],\n      [always(dateFilteredLength > 0 && items.length > dateFilteredLength), alwaysFalse],\n      [alwaysTrue, always(hasNextPage)],\n    ])()\n\n    return {\n        newest: order === 'ASC' &&  endCursor ? endCursor : newestCurrent,\n        oldest: order === 'DESC' && endCursor ? endCursor : oldestCurrent,\n        hasNextPage,\n        hasNextPageForDate: tryNextPage,\n    }\n}\n\nconst getRemainingPageCount = (data) => {\n  const [ maxItems ] = ['issues', 'pullRequests', 'releases']\n    .map(type => pathOr(0, ['data', 'result', type, 'totalCount'], data))\n    .sort((a,b) => a > b)\n\n    return Math.ceil(maxItems/50) -1\n}\n\nconst userQuery = (untilDate) => ({\n  user,\n  sortDirection = 'DESC',\n  amountOfData,\n  issuesPagination = {},\n  prPagination = {},\n}) => ({\n  query: `{\n    result: user(login: \"${user}\") {\n      login\n      ${prPagination[untilDate ? 'hasNextPageForDate' : 'hasNextPage'] !== false ? pullRequests(sortDirection)(prPagination) : ''}\n      ${issuesPagination[untilDate ? 'hasNextPageForDate' : 'hasNextPage'] !== false ? issues(sortDirection)(issuesPagination) : ''}\n    }\n  }`,\n  sortDirection,\n  user,\n  resultInfo: (data) => {\n      const byType = getPaginationByType(\n          {\n              issuesPagination,\n              prPagination,\n              amountOfData,\n          },\n          untilDate,\n          data,\n          sortDirection\n      )\n\n      const updatedAmountOfData = cond([\n        [always(isDate(untilDate)), always(amountOfData)],\n        [always(Number.isInteger(amountOfData)), always(amountOfData - 1)],\n        [alwaysTrue, getRemainingPageCount]\n      ])(data)\n\n      const nextPageInfo = {\n        prPagination: {\n          hasNextPage: false,\n          ...byType('pullRequests'),\n        },\n        issuesPagination: {\n          hasNextPage: false,\n          ...byType('issues'),\n        },\n      }\n\n      const hasNextPageKey = isDate(untilDate) ? 'hasNextPageForDate' : 'hasNextPage'\n      return  {\n          hasNextPage: Object.values(nextPageInfo).some(x => x[hasNextPageKey] === true),\n          nextPageInfo: {\n            ...nextPageInfo,\n            amountOfData: updatedAmountOfData,\n          },\n      }\n  },\n  fillerType: 'batchedQuery',\n  hasMoreResults: [\n      prPagination.hasNextPage,\n      issuesPagination.hasNextPage,\n  ]\n      .some(x => x !== false),\n})\n\nconst batchedQuery = (untilDate) => ({\n    org,\n    repo,\n    sortDirection = 'DESC',\n    amountOfData,\n    issuesPagination = {},\n    releasesPagination = {},\n    prPagination = {},\n}) => ({\n    query: `{\n      result: repository(name: \"${repo}\" owner: \"${org}\") {\n        id\n        description\n        name\n        owner {\n          org: login\n        }${prPagination[untilDate ? 'hasNextPageForDate' : 'hasNextPage'] !== false ? pullRequests(sortDirection)(prPagination) : ''}\n        ${issuesPagination[untilDate ? 'hasNextPageForDate' : 'hasNextPage'] !== false ? issues(sortDirection)(issuesPagination) : ''}\n        ${releasesPagination[untilDate ? 'hasNextPageForDate' : 'hasNextPage'] !== false ? releases(sortDirection)(releasesPagination) : ''}\n      }\n    }`,\n    sortDirection,\n    resultInfo: (data) => {\n        const byType = getPaginationByType(\n            {\n                issuesPagination,\n                releasesPagination,\n                prPagination,\n            },\n            untilDate,\n            data,\n            sortDirection\n        )\n\n        const updatedAmountOfData = cond([\n          [always(isDate(untilDate)), always(amountOfData)],\n          [always(Number.isInteger(amountOfData)), always(amountOfData - 1)],\n          [alwaysTrue, getRemainingPageCount]\n        ])(data)\n\n        const nextPageInfo = {\n          prPagination: {\n            hasNextPage: false,\n            ...byType('pullRequests'),\n          },\n          issuesPagination: {\n            hasNextPage: false,\n            ...byType('issues'),\n          },\n          releasesPagination: {\n            hasNextPage: false,\n            ...byType('releases'),\n          },\n        }\n\n        const hasNextPageKey = isDate(untilDate) ? 'hasNextPageForDate' : 'hasNextPage'\n        return {\n            hasNextPage: Object.values(nextPageInfo).some(x => x[hasNextPageKey] === true),\n            nextPageInfo: {\n              ...nextPageInfo,\n              amountOfData: updatedAmountOfData,\n            },\n        }\n    },\n    fillerType: 'batchedQuery',\n    hasMoreResults: [\n        prPagination.hasNextPage,\n        issuesPagination.hasNextPage,\n        releasesPagination.hasNextPage,\n    ]\n        .some(x => x !== false),\n})\n\nconst commentsQuery = ({ nodeId, cursor }) => ({\n    query: `{\n      node(id:\"${nodeId}\") {\n          ... on PullRequest {\n            id\n            ${comments(cursor)}\n          }\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'node', 'comments', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'node', 'comments', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            nodeId: pathOr('', ['data', 'node', 'id'], data),\n            cursor: pathOr('', ['data', 'node', 'comments', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n})\n\nconst reviewsQuery = ({ nodeId, cursor }) => ({\n    query: `{\n      node(id:\"${nodeId}\") {\n          ... on PullRequest {\n            id\n            ${reviews(cursor)}\n          }\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'node', 'reviews', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'node', 'reviews', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            nodeId: pathOr('', ['data', 'node', 'id'], data),\n            cursor: pathOr('', ['data', 'node', 'reviews', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n    fillerType: 'pullRequestReviewComments',\n})\n\nconst reviewCommentsQuery = ({ nodeId, cursor }) => ({\n    query: `{\n      node(id:\"${nodeId}\") {\n          ... on PullRequestReview {\n            id\n            ${comments(cursor)}\n          }\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'node', 'comments', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'node', 'comments', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            nodeId: pathOr('', ['data', 'node', 'id'], data),\n            cursor: pathOr('', ['data', 'node', 'comments', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n})\n\nexport {\n    userQuery,\n    batchedQuery,\n    reviewCommentsQuery,\n    commentsQuery,\n    reviewsQuery,\n}","import { pathOr, propOr } from 'ramda'\nimport batch from './batch'\n\nimport {\n    commentsQuery,\n    reviewsQuery,\n    reviewCommentsQuery,\n} from './queries'\n\n// TODO: make this file more understandable\n// TODO: retry errored fill\nconst fillData = apiCall => {\n    const fillByType = (type) => {\n\n        const fillersByType = {\n            'pullRequests': [\n                pullRequestsComments,\n                pullRequestsReviews,\n            ],\n            'pullRequestReviewComments': [\n                allPullRequestReviewsComments,\n            ],\n            'batchedQuery': [\n                pullRequestsComments,\n                pullRequestsReviews,\n            ],\n        }\n\n        const fillers = fillersByType[type] || []\n\n        return (data) => fillers.length\n            ? Promise.all(\n                fillers\n                    .map((filler) => filler(data))\n            )\n                .then((resolvedFillers) => resolvedFillers\n                    .reduce((currentItem, applyFillerResult) => applyFillerResult(currentItem), data)\n                )\n            : data\n    }\n\n    const recursiveFiller = makeQuery => (queryInfo = {}) => async (currentResults = []) => {\n        const {\n            hasNextPage: currentHasNextPage,\n        } = queryInfo\n\n        const {\n            query,\n            resultInfo,\n            fillerType,\n        } = makeQuery(queryInfo)\n\n        const newResult = currentHasNextPage\n            ? await apiCall(query)\n            : {}\n\n        const {\n            results = [],\n            hasNextPage: newHasNextPage,\n            nextArgs,\n        } = resultInfo(newResult)\n\n        const updatedData = [\n            ...currentResults,\n            ...results,\n        ]\n\n        return newHasNextPage\n            ? recursiveFiller(makeQuery)(nextArgs)(updatedData)\n            : await fillByType(fillerType)(updatedData)\n    }\n\n    const updateRawData = (rawData = {}) => key => newData => {\n        const updatedNode = Object.assign(rawData.node, { [key]: newData })\n\n        return Object.assign(rawData, { node: updatedNode })\n    }\n\n    const getQueryInfo = key => data => ({\n        nodeId: pathOr('', ['node', 'id'], data),\n        cursor: pathOr('', ['node', key, 'pageInfo', 'endCursor'], data),\n        hasNextPage: pathOr(false, ['node', key, 'pageInfo', 'hasNextPage'], data),\n    })\n\n    const allPullRequestReviewsComments = async(data = []) => {\n        const getAllReviewComments = async(review) => {\n            const currentReviewComments = pathOr([], ['node', 'comments', 'edges'], review)\n            const reviewCommentsQueryInfo = getQueryInfo('comments')(review)\n\n            const allReviewComments = await recursiveFiller(reviewCommentsQuery)(reviewCommentsQueryInfo)(currentReviewComments)\n\n            return updateRawData(review)('comments')({ edges: allReviewComments })\n        }\n        const updatedReviewComments = await batch(data, getAllReviewComments, 5)\n\n        return () => updatedReviewComments\n    }\n\n    const pullRequestsReviews = async(data) => {\n        const pullRequests = pathOr([], ['data', 'result', 'pullRequests', 'edges'], data)\n\n        const getAllPullRequestReviews = async (pullRequest) => {\n            const currentReviews = pathOr([], ['node','reviews','edges'], pullRequest)\n            const reviewsQueryInfo = getQueryInfo('reviews')(pullRequest)\n\n            const allReviews = await recursiveFiller(reviewsQuery)(reviewsQueryInfo)(currentReviews)\n\n            return {\n                nodeId: pathOr('', ['node', 'id'], pullRequest),\n                results: { edges: allReviews },\n            }\n        }\n        const allPullRequestsReviews = await batch(pullRequests, getAllPullRequestReviews, 5)\n\n        return (data) => {\n            const updatedpullRequestsData = updatePullRequests(data)('reviews')(allPullRequestsReviews)\n\n            return {\n                data: Object.assign(propOr({}, 'data', data),\n                    {\n                        result: Object.assign(pathOr(\n                            {\n                                pullRequests: updatedpullRequestsData,\n                            },\n                            ['data', 'result'],\n                            data,\n                        )),\n                    }\n                ),\n            }\n        }\n    }\n\n    const updatePullRequests = data =>  key => pullRequestsItems => {\n        const pullRequestsData = pathOr({}, ['data', 'result', 'pullRequests'], data)\n        const currentPullRequests = pathOr([], ['data', 'result', 'pullRequests', 'edges'], data)\n\n        const mergedPullRequests = currentPullRequests\n            .map((currentPullRequest) => {\n                const nodeId = pathOr('', ['node', 'id'], currentPullRequest)\n                const item = pullRequestsItems\n                    .find(x => x.nodeId === nodeId)\n\n                return item\n                    ? updateRawData(currentPullRequest)(key)(item.results)\n                    : currentPullRequest\n\n            })\n\n        return Object.assign(pullRequestsData, { edges: mergedPullRequests })\n    }\n\n    const pullRequestsComments = async(data) => {\n        const pullRequests = pathOr([], ['data', 'result', 'pullRequests', 'edges'], data)\n\n        const getAllPullRequestComments = async (pullRequest) => {\n            const currentComments = pathOr([], ['node', 'comments', 'edges'], pullRequest)\n            const commentsQueryInfo = getQueryInfo('comments')(pullRequest)\n\n            const allComments = await recursiveFiller(commentsQuery)(commentsQueryInfo)(currentComments)\n\n            return {\n                nodeId: pathOr('', ['node','id'], pullRequest),\n                results: { edges: allComments },\n            }\n        }\n\n        const allPullRequestsComments = await batch(pullRequests, getAllPullRequestComments, 5)\n\n        return (data) => {\n            const updatedpullRequestsData = updatePullRequests(data)('comments')(allPullRequestsComments)\n\n            return {\n                data: Object.assign(propOr({}, 'data', data),\n                    {\n                        result: Object.assign(pathOr(\n                            {\n                                pullRequests: updatedpullRequestsData,\n                            },\n                            ['data', 'result'],\n                            data\n                        )),\n                    }\n                ),\n            }\n        }\n    }\n\n    return fillByType\n}\n\nexport default fillData\n","const types = {\n    SET_USER: 'SET_USER',\n    CLEAR_USER: 'CLEAR_USER',\n    SET_TEAM_NAME: 'SET_TEAM_NAME',\n    CLEAR_TEAM_NAME: 'CLEAR_TEAM_NAME',\n    STORE_ORG: 'STORE_ORG',\n    CLEAR_ORG: 'CLEAR_ORG',\n    STORE_TOKEN: 'STORE_TOKEN',\n    STORE_FORM_UNTIL_DATE: 'STORE_FORM_UNTIL_DATE',\n    CLEAR_FORM_UNTIL_DATE: 'CLEAR_FORM_UNTIL_DATE',\n    STORE_UNTIL_DATE: 'STORE_UNTIL_DATE',\n    CLEAR_UNTIL_DATE: 'CLEAR_UNTIL_DATE',\n    SET_PR_PAGINATION: 'SET_PR_PAGINATION',\n    CLEAR_PR_PAGINATION: 'CLEAR_PR_PAGINATION',\n    SET_RELEASES_PAGINATION: 'SET_RELEASES_PAGINATION',\n    CLEAR_RELEASES_PAGINATION: 'CLEAR_RELEASES_PAGINATION',\n    SET_ISSUES_PAGINATION: 'SET_ISSUES_PAGINATION',\n    CLEAR_ISSUES_PAGINATION: 'CLEAR_ISSUES_PAGINATION',\n    FETCH_STATUS: 'FETCH_STATUS',\n    FETCH_START: 'FETCH_START',\n    PRE_FETCH_ERROR: 'PRE_FETCH_ERROR',\n    CLEAR_PRE_FETCH_ERROR: 'CLEAR_PRE_FETCH_ERROR',\n    FETCH_ERROR: 'FETCH_ERROR',\n    CLEAR_FETCH_ERROR: 'CLEAR_FETCH_ERROR',\n    FETCH_END: 'FETCH_END',\n    STORE_REPOS: 'STORE_REPOS',\n    STORE_REPO: 'STORE_REPO',\n    CLEAR_REPO: 'CLEAR_REPO',\n    STORE_AMOUNT: 'STORE_AMOUNT',\n    STORE_SORT: 'STORE_SORT',\n    STORE_ENT_URL: 'STORE_ENT_URL',\n    STORE_EX_IDS: 'STORE_EX_IDS',\n    CLEAR_EX_IDS: 'CLEAR_EX_IDS',\n    STORE_USER_IDS: 'STORE_USER_IDS',\n    CLEAR_USER_IDS: 'CLEAR_USER_IDS',\n    ADD_PRS: 'ADD_PRS',\n    ADD_FILTERED_PRS: 'ADD_FILTERED_PRS',\n    CLEAR_PRS: 'CLEAR_PRS',\n    CLEAR_FILTERED_PRS: 'CLEAR_FILTERED_PRS',\n    ADD_ISSUES: 'ADD_ISSUES',\n    ADD_FILTERED_ISSUES: 'ADD_FILTERED_ISSUES',\n    CLEAR_FILTERED_ISSUES: 'CLEAR_FILTERED_ISSUES',\n    CLEAR_ISSUES: 'CLEAR_ISSUES',\n    ADD_RELEASES: 'ADD_RELEASES',\n    CLEAR_RELEASES: 'CLEAR_RELEASES',\n    TOGGLE_THEME: 'TOGGLE_THEME',\n    PREFETCHED_NAME: 'PREFETCHED_NAME',\n    CLEAR_PREFETCHED_NAME: 'CLEAR_PREFETCHED_NAME',\n    ADD_USERS_DATA: 'ADD_USERS_DATA',\n    CLEAR_USERS_DATA: 'CLEAR_USERS_DATA',\n}\n\nexport default types","// TODO: Think more about if this should maintain github api data structures\n// TODO: add tests\nimport {\n    always,\n    cond,\n    propOr,\n    pathOr,\n    propEq,\n    mergeDeepRight,\n    test,\n    T as alwaysTrue,\n    F as alwaysFalse,\n} from 'ramda'\nimport { compose } from 'redux'\n\nimport fillData from './fillers'\nimport types from '../state/types'\n\nconst parseJSON = response => new Promise((resolve, reject) => {\n    response.json()\n        .then(data => response.status === 200\n            ? resolve(data)\n            : reject(Object.assign(data, { status: response.status }))\n        )\n        .catch(error => {\n            console.log('-=-=--parseJSON error', error)\n            error.status = response.status\n            reject(error)\n        })\n})\n\nconst triggeredAbuseRate = ({ message = '' }) =>/(You have triggered an abuse detection mechanism|You have exceeded a secondary rate limit)/.test(message)\nconst triggeredJsonError = ({ message = '' }) =>/Unexpected end of JSON input/.test(message)\n\nconst apiCall = fetchInfo => query =>\n    fetch((fetchInfo.enterpriseAPI || 'https://api.github.com/graphql'), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${fetchInfo.token}`,\n        },\n        body: JSON.stringify({ query }),\n    })\n        .then(parseJSON)\n\nconst shouldGetNextPage = (hasNextPage, { amountOfData }) => cond([\n    [always(hasNextPage === false), alwaysFalse],\n    [always(hasNextPage && Number.isInteger(amountOfData) && amountOfData >= 1), alwaysTrue],\n    [always(hasNextPage && amountOfData === 'all'), alwaysTrue],\n    [alwaysTrue, alwaysFalse],\n])();\n\nconst pause = (ms = 30000) => new Promise(resolve => setTimeout(() => resolve(), ms))\nlet numRateTriggers = 0\n\nconst pauseThenRetry = async(apiInfo, results) => {\n    console.log('-=-=--paused', Date.now());\n    await pause();\n    console.log('-=-=--resume', Date.now());\n    ++numRateTriggers\n    return numRateTriggers <= 10\n        ? api(apiInfo, results)\n        : {\n            errorMessage: {\n                level: 'error',\n                message: 'Hit rate limit over ten times'\n            },\n            fetchInfo: apiInfo.fetchInfo,\n            results: results,\n        }\n}\n\nconst getCurrentItemsByType = (type = '', results = []) => {\n    const total = results\n        .reduce((acc, result) => {\n            const itemCount = pathOr([], ['data', 'result', type, 'edges'], result)\n                .length\n            return acc + itemCount\n        }, 0)\n\n    return total\n}\n\nconst getLatestDate = (type = '', results = []) => {\n    const latestResult = results.at(-1)\n    const latestResultItems = pathOr([], ['data', 'result', type, 'edges'], latestResult)\n\n    const targetItem = latestResultItems.at(-1)\n\n    const dateKey = type === 'pullRequests'\n        ? 'mergedAt'\n        : 'createdAt'\n\n    return pathOr('', ['node', dateKey], targetItem)\n}\n\nconst dateSort = (sortDirection) => (a, b) => sortDirection === 'DESC'\n    ? new Date(b).getTime() - new Date(a).getTime()\n    : new Date(a).getTime() - new Date(b).getTime()\n\nconst api = async({ fetchInfo, queryInfo, dispatch }, results = []) => {\n    const {\n        query,\n        resultInfo,\n        fillerType,\n        user,\n        sortDirection,\n    } = queryInfo(fetchInfo)\n\n    const [oldestItemWithNextPage] = [\n        fetchInfo.prPagination.hasNextPageForDate && getLatestDate('pullRequests', results),\n        fetchInfo.issuesPagination.hasNextPageForDate && getLatestDate('issues', results),\n        fetchInfo.releasesPagination.hasNextPageForDate && getLatestDate('releases', results),\n    ]\n        .filter(Boolean)\n        .sort(dateSort(sortDirection))\n\n    dispatch({\n        type: types.FETCH_STATUS,\n        payload: {\n            user,\n            prCount: getCurrentItemsByType('pullRequests', results),\n            latestItemDate: oldestItemWithNextPage,\n            issueCount: getCurrentItemsByType('issues', results),\n            releaseCount: getCurrentItemsByType('releases', results),\n        }\n    })\n\n    const apiCallWithToken = apiCall(fetchInfo)\n    try {\n        const result = await apiCallWithToken(query)\n        if (triggeredAbuseRate(result)) {\n            throw new Error('Abuse rate triggered');\n        }\n\n        const fullData = await fillData(apiCallWithToken)(fillerType)(result)\n        const updatedResults = [\n            ...results,\n            fullData\n        ]\n\n        const {\n            hasNextPage,\n            nextPageInfo,\n        } = resultInfo(result)\n\n        const updatedFetchInfo = mergeDeepRight(fetchInfo, nextPageInfo)\n\n        return shouldGetNextPage(hasNextPage, updatedFetchInfo)\n            ? api({ fetchInfo: updatedFetchInfo, queryInfo, dispatch }, updatedResults)\n            : {\n                fetchInfo: updatedFetchInfo,\n                results: updatedResults,\n            }\n    } catch (error) {\n        const hasTriggeredAbuse = cond([\n            [triggeredAbuseRate, alwaysTrue],\n            [triggeredJsonError, alwaysTrue],\n            [propEq('status', 500), alwaysTrue],\n            [propEq('status', 502), alwaysTrue],\n            [propEq('message', 'Abuse rate triggered'), alwaysTrue],\n            [compose(test(/ENOTFOUND|ECONNRESET/), propOr('', 'code')), alwaysTrue],\n            [compose(test(/fetch/i), propOr('', 'message')), alwaysTrue],\n            [alwaysTrue, alwaysFalse],\n        ])\n        const getErrorMessage = cond([\n            [\n                hasTriggeredAbuse,\n                always({\n                    level: 'warn',\n                    message: 'You may have triggered the api\\'s abuse detection, please wait a minute before trying again',\n                })\n            ],\n            [\n                compose(test(/50\\d/i), propOr('', 'status')),\n                always({\n                    level: 'error',\n                    message: 'GitHub API 500 error, could be CORS or rate limiting',\n                }),\n            ],\n            [\n                propEq('status', 401),\n                always({\n                    level: 'error',\n                    message: 'GitHub token does not have correct settings, please see README',\n                }),\n            ],\n            [\n                compose(test(/40\\d/i), propOr('', 'status')),\n                always({\n                    level: 'error',\n                    message: `Auth error: ${error.message || 'UNKOWN'}`,\n                })\n            ],\n            [\n                propEq('status', undefined),\n                always({\n                    level: 'error',\n                    message: 'Error while processing data after, please check the console',\n                })\n            ],\n            [\n                alwaysTrue,\n                always({\n                    level: 'error',\n                    message: `ERROR: ${error.message || 'UNKOWN'}`,\n                })\n            ]\n        ])\n\n        const errorMessage = getErrorMessage(error)\n\n        if (hasTriggeredAbuse(error)) {\n            return pauseThenRetry({ fetchInfo, queryInfo, dispatch }, results)\n        } else {\n            throw new Error(errorMessage.message)\n        }\n    }\n}\n\nexport default api","import { userQuery } from './queries'\nimport { prop } from 'ramda'\nimport api from './api'\nimport batch from './batch'\n\nconst getUsersData = async({ fetchInfo, untilDate, dispatch }) => {\n    try {\n        const userIds = fetchInfo.userIds\n        const data = userIds\n            .map((user) => ({\n                fetchInfo: {\n                    ...fetchInfo,\n                    issuesPagination: fetchInfo.issuesPagination[user] || { hasNextPage: true },\n                    prPagination: fetchInfo.prPagination[user] || { hasNextPage: true },\n                    user,\n                },\n                queryInfo: userQuery(untilDate),\n                dispatch,\n            }))\n\n        const allUsersData = await batch(data, api, 1)\n\n        const finalFetchInfo = {\n            ...fetchInfo,\n        }\n        const allResults = []\n        allUsersData\n            .forEach(({ fetchInfo, results }) => {\n                allResults.push(results)\n\n                const user = prop('user', fetchInfo)\n                finalFetchInfo.issuesPagination[user] = prop('issuesPagination', fetchInfo)\n                finalFetchInfo.prPagination[user] = prop('prPagination', fetchInfo)\n            })\n\n        const usersData = {\n            fetchInfo: finalFetchInfo,\n            results: allResults.flat(),\n        }\n\n        return usersData\n    } catch (error) {\n        console.log('-=-=--getUsersData:error', error)\n        throw error\n    }\n}\n\nexport default getUsersData\n","import {\n    add,\n    sub,\n } from 'date-fns'\n\nimport {\n    allPass,\n    always,\n    compose,\n    prop,\n    propEq,\n    propOr,\n    path,\n    is,\n    isEmpty,\n    cond,\n    T as alwaysTrue,\n} from 'ramda'\n\nconst getPrDate = (sortDirection, allPrs = []) => {\n    const prIndex = sortDirection === 'DESC'\n        ? 0\n        : -1\n\n    const pr = allPrs.at(prIndex)\n\n    const currentEndDate = path(['node', 'mergedAt'], pr) || prop('mergedAt', pr)\n\n    return new Date(currentEndDate)\n}\n\nconst getUntilDate = (fetches = {}, allPrs = []) => {\n    const {\n        untilDate = '',\n        amountOfData = 0,\n    } = fetches\n    // get first item from each result, sort then use that as base date to calculate from\n    const changeBy = { months: amountOfData }\n\n    const amountOfDataIsString = compose(\n        is(String),\n        prop('amountOfData')\n    )\n\n    const isDesc = propEq('sortDirection', 'DESC')\n    const isAsc = propEq('sortDirection', 'ASC')\n\n    const noDateUntil = compose(\n        isEmpty,\n        prop('untilDate')\n    )\n\n    const subtractDate = compose(\n        x => sub(x, changeBy),\n        x => x ? new Date(x) : new Date(),\n        prop('untilDate'),\n    )\n\n    const dateFromPRs = compose(\n        ({ prDate, sortDirection }) => sortDirection === 'DESC'\n            ? sub(prDate, changeBy)\n            : add(prDate, changeBy),\n        sortDirection => ({\n            prDate: getPrDate(sortDirection, allPrs),\n            sortDirection\n        }),\n        propOr('', 'sortDirection'),\n    )\n\n    const newUntilDate = cond([\n        [amountOfDataIsString, always('')],\n        [allPass([noDateUntil, () => allPrs.length > 0]), dateFromPRs],\n        [isDesc, subtractDate],\n        [isAsc, () => add(new Date(untilDate), changeBy)],\n        [alwaysTrue, always('')],\n    ])(fetches)\n\n    return newUntilDate\n}\n\nexport default getUntilDate\n","const slimValue = (value) => {\n    const newValue = (typeof value === 'string' && value.length && value) // picks defined string\n        || (/^-?[\\d.]+$/.test(`${value}`) && /^-?[^0]/.test(`${value}`) && value) // picks non 0 number\n        || (Array.isArray(value) && value.length && slimArray(value)) // picks defined array\n        || (value && Object.keys(value).length && slimObject(value)) // picks defiend object\n        || (typeof value === 'boolean' && value) // allows boolean, false will be ignored\n\n    return newValue\n}\n\nconst slimArray = arr => {\n    const newArray = arr\n        .reduce((acc, item) => [\n            ...acc,\n            ...([slimValue(item)])\n        ], [])\n\n    return newArray.length && newArray\n}\n\nconst slimObject = obj => {\n    const newObject = Object.entries(obj)\n        .reduce((acc, [key, value]) => {\n            const newValue = slimValue(value)\n\n            return {\n                ...acc,\n                ...( newValue\n                    ? { [key]: newValue }\n                    : {}\n                )\n            }\n        }, {});\n\n    return Object.keys(newObject).length && newObject\n}\n\nexport {\n    slimValue,\n    slimArray,\n    slimObject,\n}\n","\nconst baseUserData = {\n    author: '',\n    approvalsGiven: 0,\n    approvalsByUser: {},\n    commentsGiven: 0,\n    commentsReceived: 0,\n    codeCommentsGiven: 0,\n    codeCommentsReceived: 0,\n    generalCommentsGiven: 0,\n    generalCommentsReceived: 0,\n    totalPRs: 0,\n    uniquePRsContributedTo: 0,\n    commentsByUser: {},\n}\n\nconst updateContributorCount = (currentData, objKey, obj, addition) => Object.entries(obj)\n    .reduce((acc, [key, value]) => {\n        const prevData = currentData[key] || {}\n        const updated = {\n            ...baseUserData,\n            ...prevData,\n            user: key,\n            [objKey]: (prevData[objKey] || 0) + (addition || value),\n        }\n\n        return Object.assign(acc, { [key]: updated })\n    }, {})\n\nconst formatUserData = (data = []) => {\n    const updateByUsersCount = (currentData, objKey, obj, author) => Object.entries(obj)\n        .reduce((acc, [key, value]) => {\n            const currentUserData = currentData[key] || {}\n            const currentKeyData = currentUserData[objKey] || {}\n            const updatedKeyData = {\n                ...currentKeyData,\n                [author]: (currentKeyData[author] || 0) + (value || 0),\n            }\n\n            const updated = {\n                ...baseUserData,\n                ...currentUserData,\n                author: key,\n                [objKey]: updatedKeyData,\n            }\n\n            return Object.assign(acc, { [key]: updated })\n        }, {})\n    const userData = data\n        .reduce((acc, prData) => {\n            const {\n                author,\n                prSize = 0,\n                age = 0,\n                approvals = 0,\n                approvers = {},\n                comments = 0,\n                commenters = {},\n                codeComments = 0,\n                codeCommenters = {},\n                generalComments = 0,\n                generalCommenters = {},\n            } = prData\n\n            const updatedCommentsByUser = updateByUsersCount(acc, 'commentsByUser', commenters, author)\n            Object.assign(acc, updatedCommentsByUser)\n\n            const updatedApprovalsByUser = updateByUsersCount(acc, 'approvalsByUser', approvers, author)\n            Object.assign(acc, updatedApprovalsByUser)\n\n            const updatedCommentsGiven = updateContributorCount(acc, 'commentsGiven', commenters)\n            Object.assign(acc, updatedCommentsGiven)\n\n            const updatedCodeCommentsGiven = updateContributorCount(acc, 'codeCommentsGiven', codeCommenters)\n            Object.assign(acc, updatedCodeCommentsGiven)\n\n            const updatedGeneralCommentsGiven = updateContributorCount(acc, 'generalCommentsGiven', generalCommenters)\n            Object.assign(acc, updatedGeneralCommentsGiven)\n\n            const updatedApprovalsGiven = updateContributorCount(acc, 'approvalsGiven', approvers)\n            Object.assign(acc, updatedApprovalsGiven)\n\n            const updatedUniquePRsApproved = updateContributorCount(acc, 'uniquePRsApproved', approvers, 1)\n            Object.assign(acc, updatedUniquePRsApproved)\n\n            const contrtibutors = [...new Set([\n                ...Object.keys(codeCommenters),\n                ...Object.keys(generalCommenters),\n                ...Object.keys(approvers),\n            ])]\n\n            contrtibutors\n                .forEach((key) => {\n                    const prevData = acc[key] || {}\n                    const updated = {\n                        ...baseUserData,\n                        ...prevData,\n                        author: key,\n                        uniquePRsContributedTo: (prevData.uniquePRsContributedTo || 0) + 1,\n                    }\n\n                    Object.assign(acc, { [key]: updated })\n                })\n\n\n            const prevData = acc[author] || {}\n\n            const prSizes = [...(prevData.prSizes || []), prSize]\n            const averagePrSize = Math.round(prSizes.reduce((acc, x) => acc + x, 0) / prSizes.length)\n\n            const prAges = [...(prevData.prAges || []), age]\n            const averagePrAge = Math.round(prAges.reduce((acc, x) => acc + x, 0) / prAges.length)\n\n            return Object.assign(acc, {\n                [author]: {\n                    ...baseUserData,\n                    ...prevData,\n                    author,\n                    user: author,\n                    approvalsReceived: (prevData.approvalsReceived || 0) + approvals,\n                    commentsReceived: (prevData.commentsReceived || 0) + comments,\n                    codeCommentsReceived: (prevData.codeCommentsReceived || 0) + codeComments,\n                    generalCommentsReceived: (prevData.generalCommentsReceived || 0) + generalComments,\n                    totalPRs: (prevData.totalPRs || 0) + 1,\n                    prSizes,\n                    prSize: averagePrSize,\n                    prAges,\n                    age: averagePrAge,\n                },\n            })\n\n        }, {})\n\n\n    const uniqueAuthors = [...new Set(data.map(x => x.author))]\n\n    const newUsersData = Object.values(userData)\n        .filter(({ author }) => uniqueAuthors.some(x => x === author))\n\n    const keys = [\n        'commentsGiven',\n        'commentsReceived',\n        'approvalsGiven',\n        'approvalsReceived',\n    ]\n\n    const sortedUsers = newUsersData\n        .sort((a, b) => {\n            const aTotal = keys\n                .reduce((acc, key) => acc + (a[key] || 0), 0)\n\n            const bTotal = keys\n                .reduce((acc, key) => acc + (b[key] || 0), 0)\n            return bTotal - aTotal\n        })\n\n    return sortedUsers\n}\n\nexport default formatUserData","import {\n    anyPass,\n    assoc,\n    dissocPath,\n    equals,\n    filter,\n    not,\n    map,\n    path,\n    pickAll,\n    pipe,\n    split,\n    trim,\n    propOr,\n    pick,\n} from 'ramda'\nimport api from '../api/api'\nimport getUsersData from '../api/getUsersData'\nimport getUntilDate from '../api/getUntilDate'\nimport {\n    formatPullRequests,\n    filterSortPullRequests,\n    formatIssues,\n    filterSortIssues,\n    formatReleases,\n} from '../format/rawData'\nimport { slimObject } from '../format/lightenData'\nimport { batchedQuery } from '../api/queries'\nimport formatUserData from '../format/userData'\nimport types from './types'\n\nconst setUser = (user = '') => ({\n    type: types.SET_USER,\n    payload: user,\n})\n\nconst toggleTheme = () => ({\n    type: types.TOGGLE_THEME,\n})\n\nconst clearUser = () => ({\n    type: types.CLEAR_USER,\n})\n\nconst storeToken = (token = '') => ({\n    type: types.STORE_TOKEN,\n    payload: token,\n})\n\nconst storeOrg = (org = '') => (dispatch) => dispatch({\n    type: types.STORE_ORG,\n    payload: org,\n})\n\nconst storeEnterpriseAPI = (enterpriseAPI = '') => (dispatch) => dispatch({\n    type: types.STORE_ENT_URL,\n    payload: enterpriseAPI,\n})\n\nconst storeTeamName = (teamName = '') => (dispatch) => dispatch({\n    type: types.SET_TEAM_NAME,\n    payload: teamName,\n})\n\nconst userIdsFromString = pipe(\n    split(','),\n    map(trim),\n    filter(Boolean)\n)\n\nconst storeUserIds = (userIds = '') => (dispatch) => {\n    const userIdsArray = userIdsFromString(userIds)\n\n    return dispatch({\n        type: types.STORE_USER_IDS,\n        payload: userIdsArray,\n    })\n}\n\nconst storeExcludeIds = (excludeIds = '') => (dispatch) => {\n    const excludeArray = userIdsFromString(excludeIds)\n\n    return dispatch({\n        type: types.STORE_EX_IDS,\n        payload: excludeArray,\n    })\n}\n\nconst storeRepo = (repo = '') => (dispatch) => dispatch({\n    type: types.STORE_REPO,\n    payload: repo,\n})\n\nconst storeAmountOfData = (amountOfData = '') => (dispatch) => dispatch({\n    type: types.STORE_AMOUNT,\n    payload: amountOfData,\n})\n\nconst storeFormUntilDate = (amountOfData = '') => (dispatch, getState) => {\n    const {\n        fetches  = {},\n        pullRequests = [],\n    } = getState();\n\n    const formUntilDate = getUntilDate(\n        {\n            ...fetches,\n            amountOfData\n        },\n        pullRequests\n    )\n\n    dispatch({\n        type: types.STORE_FORM_UNTIL_DATE,\n        payload: formUntilDate,\n    })\n}\n\nconst storeUntilDate = (untilDate = '') => (dispatch) => dispatch({\n    type: types.STORE_UNTIL_DATE,\n    payload: untilDate,\n})\n\nconst storeSortDirection = (sortDirection = 'DESC') => (dispatch) => dispatch({\n    type: types.STORE_SORT,\n    payload: sortDirection,\n})\n\n\nconst notSameStringValues = (formValues = {}) => (key = '') => (fetches = {}) =>\n    formValues[key] && fetches[key] && formValues[key] !== fetches[key]\nconst notSameArrayValues = (formValues = {}) => (key = '') => (fetches = {}) => {\n    const idsString = propOr('', key, formValues)\n    const formIds = userIdsFromString(idsString)\n\n    const currentIds = fetches[key]\n    return currentIds.length && not(equals(currentIds, formIds))\n}\n\n// TODO: regression test\nconst clearPastSearch = (values) => (dispatch, getState) => {\n    const {\n        fetches = {}\n    } = getState()\n\n    const notSameValues = notSameStringValues(values)\n    const notSameIds = notSameArrayValues(values)\n\n    const isNewSearch = anyPass([\n        notSameValues('org'),\n        notSameValues('repo'),\n        notSameValues('teamName'),\n        notSameValues('enterpriseAPI'),\n        notSameIds('userIds'),\n        notSameIds('excludeIds'),\n    ])(fetches)\n\n    isNewSearch\n        && clearData(dispatch)\n}\n\nconst clearData = (dispatch) => {\n    dispatch({ type: types.CLEAR_ORG })\n    dispatch({ type: types.CLEAR_REPO })\n    dispatch({ type: types.CLEAR_USER })\n    dispatch({ type: types.CLEAR_PRS })\n    dispatch({ type: types.CLEAR_FILTERED_PRS })\n    dispatch({ type: types.CLEAR_PR_PAGINATION })\n    dispatch({ type: types.CLEAR_PREFETCHED_NAME })\n    dispatch({ type: types.CLEAR_UNTIL_DATE })\n    dispatch({ type: types.CLEAR_FORM_UNTIL_DATE })\n    dispatch({ type: types.CLEAR_USER_IDS })\n    dispatch({ type: types.CLEAR_EX_IDS })\n    dispatch({ type: types.CLEAR_USERS_DATA })\n    dispatch({ type: types.CLEAR_TEAM_NAME })\n    dispatch({ type: types.CLEAR_RELEASES })\n    dispatch({ type: types.CLEAR_RELEASES_PAGINATION })\n    dispatch({ type: types.CLEAR_ISSUES })\n    dispatch({ type: types.CLEAR_FILTERED_ISSUES })\n    dispatch({ type: types.CLEAR_ISSUES_PAGINATION })\n    dispatch({ type: types.CLEAR_FETCH_ERROR })\n    dispatch({ type: types.CLEAR_PRE_FETCH_ERROR })\n}\n\nconst clearAllData = clearData\n\n// Hmm: full users format per new pr results\nconst updateUsersData = (dispatch, getState) => {\n    const { pullRequests } = getState()\n\n    dispatch({\n        type: types.ADD_USERS_DATA,\n        payload: formatUserData(pullRequests),\n    })\n}\n\nconst getErrorMessage = state => {\n    const {\n        fetches: {\n            org,\n            repo,\n            token,\n            userIds = [],\n        } = {},\n    } = state\n\n    const noUserIds = userIds.length < 1\n\n    const missing = [\n        noUserIds && !org && 'Organization',\n        noUserIds && !repo && 'Repository',\n        !token &&'GitHib token',\n        !org && !repo && noUserIds && 'GitHub Ids',\n    ]\n        .filter(Boolean)\n\n    const prepend = (i) => {\n        const maxIndex = missing.length - 1\n\n        return [\n            i === 0\n            && (() => 'Missing '),\n            i === maxIndex\n            && (() => ' and '),\n            i > 0\n            && (() => ', '),\n        ].find(Boolean)()\n    }\n\n    const message = missing\n        .reduce((acc, current, i) => acc + prepend(i) + current, '')\n\n    return message\n}\n\nconst validateRequest = state => {\n    const {\n        fetches: {\n            org,\n            repo,\n            token,\n            userIds = [],\n        } = {},\n    } = state\n\n    const stringArgs = userIds.length\n        ? [token]\n        : [org, repo, token]\n\n    const validStringArgs = stringArgs\n        .every(item => typeof item === 'string' && item.length > 0)\n\n    const arrayArgs = userIds.length\n        ? [userIds]\n        : []\n\n    const validArraygArgs = arrayArgs\n        .every(item => item.length > 0)\n\n    const isValid = validStringArgs && validArraygArgs\n\n    return {\n        isValid,\n        error: !isValid\n            ? {\n                level: 'error',\n                message: getErrorMessage(state),\n            }\n            : null,\n    }\n}\n\n// TODO: Improve clearData logic\nconst getAPIData = ({ appendData = false } = {}) => async (dispatch, getState) => {\n    const state = getState();\n\n    const { isValid: isValidRequest, error = {}} = validateRequest(state);\n\n    !isValidRequest && dispatch({\n        type: types.FETCH_ERROR,\n        payload: error,\n    })\n\n    isValidRequest && dispatch({\n        type: types.CLEAR_FETCH_ERROR,\n    })\n\n    isValidRequest && dispatch({\n        type: types.FETCH_START,\n    })\n\n    try {\n        const {\n            fetches,\n            filteredPRs = [],\n            pullRequests = [],\n            issues = [],\n            filteredIssues = [],\n            formUntilDate = '',\n        } = getState();\n        const userIds = propOr([], 'userIds', fetches)\n\n        const untilDate = formUntilDate\n\n        const { fetchInfo, results } = userIds.length\n            ? await getUsersData({ fetchInfo: fetches, untilDate, dispatch })\n            : await api({ fetchInfo: fetches, queryInfo: batchedQuery(untilDate), dispatch })\n\n        const newPullrequests = formatPullRequests(fetches, results)\n        // Get all prs together so then can be cleanly filtered and sorted\n        const allPullrequests = pullRequests.concat(filteredPRs).concat(newPullrequests)\n        const [newRemainingPRs, newFilteredPRs] = filterSortPullRequests(fetches, untilDate, allPullrequests)\n\n        const releases = formatReleases(results)\n\n        const newIssues = formatIssues(results)\n        const allIssues = issues.concat(filteredIssues).concat(newIssues)\n        const [newRemainingIssues, newFilteredIssues] = filterSortIssues(fetches, untilDate, allIssues)\n\n        dispatch({\n            type: types.ADD_PRS,\n            payload: newRemainingPRs,\n        })\n\n        dispatch({\n            type: types.ADD_FILTERED_PRS,\n            payload: newFilteredPRs,\n        })\n\n        dispatch(updateUsersData)\n\n        dispatch({\n            type: types.ADD_RELEASES,\n            payload: releases,\n        })\n\n        dispatch({\n            type: types.ADD_ISSUES,\n            payload: newRemainingIssues,\n        })\n\n        dispatch({\n            type: types.ADD_FILTERED_ISSUES,\n            payload: newFilteredIssues,\n        })\n\n        dispatch({\n            type: types.STORE_UNTIL_DATE,\n            payload: formUntilDate,\n        })\n\n        const pageInfo = pick(['newest', 'oldest'])\n        dispatch({\n            type: types.SET_PR_PAGINATION,\n            payload: pageInfo(fetchInfo.prPagination),\n        })\n\n        dispatch({\n            type: types.SET_ISSUES_PAGINATION,\n            payload: pageInfo(fetchInfo.issuesPagination),\n        })\n\n        dispatch({\n            type: types.SET_RELEASES_PAGINATION,\n            payload: pageInfo(fetchInfo.releasesPagination),\n        })\n\n        dispatch({ type: types.FETCH_END })\n\n    } catch (error) {\n        dispatch({\n            type: types.FETCH_ERROR,\n            payload: {\n                level: 'error',\n                message: error.message || 'Unknown error',\n            },\n        })\n        dispatch({ type: types.FETCH_END })\n    }\n}\n\nconst setPreFetchedData = (repoData = {}, dispatch) => {\n    const {\n        fetches = {},\n        preFetchedName = '',\n        pullRequests = [],\n        usersData= [],\n        issues = [],\n        releases = [],\n    } = repoData\n\n    const {\n        teamName = '',\n        userIds = [],\n        excludeIds = [],\n    } = fetches\n\n    clearData(dispatch)\n\n    const fetchesInfo = [\n        ['token', 'STORE_TOKEN'],\n        ['org', 'STORE_ORG'],\n        ['repo', 'STORE_REPO'],\n        ['enterpriseAPI', 'STORE_ENT_URL'],\n        ['prPagination', 'SET_PR_PAGINATION', {}],\n        ['releasesPagination', 'SET_RELEASES_PAGINATION', {}],\n        ['issuesPagination', 'SET_ISSUES_PAGINATION', {}]\n    ];\n\n    fetchesInfo.forEach(([payload, type, fallback = '']) => {\n        dispatch({\n            type: types[type],\n            payload: fetches[payload] || fallback,\n        })\n    });\n\n    dispatch({\n        type: types.PREFETCHED_NAME,\n        payload: preFetchedName,\n    })\n\n    dispatch({\n        type: types.SET_TEAM_NAME,\n        payload: teamName,\n    })\n\n    dispatch({\n        type: types.STORE_USER_IDS,\n        payload: userIds,\n    })\n\n    dispatch({\n        type: types.STORE_EX_IDS,\n        payload: excludeIds,\n    })\n\n    dispatch({\n        type: types.ADD_PRS,\n        payload: pullRequests,\n    })\n    dispatch({\n        type: types.ADD_USERS_DATA,\n        payload: usersData.length\n            ? usersData\n            : formatUserData(pullRequests),\n    })\n\n    dispatch({\n        type: types.ADD_ISSUES,\n        payload: issues,\n    })\n\n    dispatch({\n        type: types.ADD_RELEASES,\n        payload: releases,\n    })\n\n    dispatch({\n        type: types.FETCH_END,\n    })\n}\n\nconst parseJSON = response => new Promise((resolve, reject) => {\n    response.json()\n        .then(data => response.status === 200\n            ? resolve(data)\n            : reject(new Error(`Error status code ${response.status}`))\n        )\n        .catch(error => {\n            console.log('-=-=--parseJSON error', error)\n            error.status = response.status\n            reject(error)\n        })\n})\n\nconst getPreFetched = ({ name = '', file = '' }) => async (dispatch) => {\n    clearData(dispatch)\n    dispatch({\n        type: types.CLEAR_PRE_FETCH_ERROR,\n    })\n    dispatch({ type: types.FETCH_START })\n    dispatch({\n        type: types.FETCH_STATUS,\n        payload: { savedReportName: name }\n    })\n\n    try {\n        const reportData = await fetch(`https://n07734.github.io/community-health/data/${file}.json`)\n            .then(parseJSON)\n\n        setPreFetchedData(reportData, dispatch)\n\n    } catch (error) {\n        console.log('-=-=--api data error', error, error.status)\n\n        const message = error.status !== 200\n            ? `Error status code ${error.status} loading ${file}`\n            : `${error.message} loading ${file}`\n\n        dispatch({\n            type: types.PRE_FETCH_ERROR,\n            payload: {\n                level: 'error',\n                message: message || 'Unknown error',\n            },\n        })\n        dispatch({ type: types.FETCH_END })\n    }\n}\n\nconst getDownloadProps = (dispatch, getState) => {\n    const state = getState()\n\n    const repo = path(['fetches', 'repo'], state)\n    const teamName = path(['fetches', 'teamName'], state)\n    const fileName = teamName\n        ? teamName\n        : `${path(['fetches', 'org'], state)}-${repo}`\n\n    const getReportData = pipe(\n        pickAll(['fetches', 'pullRequests', 'filteredPRs', 'userData', 'issues', 'filteredIssues', 'releases', 'teamName']),\n        dissocPath(['fetches', 'token']),\n        dissocPath(['fetches', 'amountOfData']),\n        // TODO: strip hasNextPage from user's pagination data\n        dissocPath(['fetches', 'prPagination', 'hasNextPage']),\n        dissocPath(['fetches', 'issuesPagination', 'hasNextPage']),\n        dissocPath(['fetches', 'releasesPagination', 'hasNextPage']),\n        assoc('preFetchedName', fileName),\n        slimObject\n    )\n\n    const reportData = getReportData(state)\n    const json = JSON.stringify(reportData, null, 2)\n    const blob = new Blob([json], { type: \"application/json\" })\n    const href  = URL.createObjectURL(blob)\n\n    return {\n        href,\n        download: `${fileName}.json`,\n    }\n}\n\nconst checkUntilDate = (newSortDirection = '') => (dispatch, getState) => {\n    const {\n        sortDirection = '',\n    } = getState();\n\n    sortDirection !== newSortDirection\n        && dispatch({ type: types.CLEAR_UNTIL_DATE })\n        && dispatch({ type: types.CLEAR_FORM_UNTIL_DATE })\n}\n\nexport {\n    setUser,\n    clearAllData,\n    clearUser,\n    clearPastSearch,\n    storeOrg,\n    storeToken,\n    storeRepo,\n    storeTeamName,\n    storeEnterpriseAPI,\n    storeUserIds,\n    storeExcludeIds,\n    storeAmountOfData,\n    storeFormUntilDate,\n    storeUntilDate,\n    storeSortDirection,\n    getAPIData,\n    getPreFetched,\n    toggleTheme,\n    getDownloadProps,\n    checkUntilDate,\n}\n","import React from 'react'\nimport {\n    Button as CoreButton,\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst Button = ({\n    className,\n    classes,\n    onClick,\n    key,\n    value,\n    text,\n    type = 'submit',\n    color = 'inherit',\n} = {}) => (\n    <CoreButton\n        className={[classes.root, (className || '')].join(' ')}\n        variant=\"contained\"\n        size=\"small\"\n        type={type}\n        color={color}\n        value={value}\n        key={key}\n        onClick={onClick}\n    >\n        {text || value}\n    </CoreButton>\n)\n\nconst styles = theme => ({\n    root: {\n        marginRight: theme.mySpacing.x.small,\n        marginBottom: theme.mySpacing.y.small,\n    },\n})\nexport default withStyles(styles)(Button)","import React from 'react'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { P } from '../shared/StyledTags'\n\nconst variant = {\n    'warn': <WarningIcon />,\n    'error': <ErrorIcon />,\n}\n\nconst Message = ({\n    error: {\n        level,\n        message,\n    },\n    classes,\n    className,\n} = {}) => (\n    <div className={`${classes[level]} ${classes.root} ${className}`} >\n        {variant[level]}\n        <P className={classes.copy}>{message}</P>\n    </div>\n)\n\nconst styles = theme => ({\n    root: {\n        padding: '0.8rem',\n        display: 'flex',\n        alignItems: 'center',\n        borderRadius: '4px',\n    },\n    copy: {\n        margin: 0,\n        marginLeft: theme.mySpacing.y.medium,\n        padding: 0,\n        color: '#000',\n    },\n    error: {\n        backgroundColor: '#e02e2e',\n    },\n    warn: {\n        backgroundColor: '#dc7e09',\n    },\n})\nexport default withStyles(styles)(Message)","const styles = theme => ({\n    inputGrid: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        marginBottom: '1rem',\n        columnGap: '8px',\n        rowGap: '8px', // BUG: theme.spacing.unit does not have px for row but does for column, odd\n        '@media (max-width: 768px)': {\n            gridTemplateColumns: 'repeat(1, 1fr)',\n        },\n        '& button': {\n            minHeight: '3rem',\n        },\n        '& .tokenText' : {\n            gridColumn:'1 / -1'\n        }\n    },\n    typeOptions: {\n        display: 'flex',\n        '& button': {\n            flexGrow: 1,\n            ...theme.copy.h4,\n            textTransform: 'none',\n        },\n    },\n    link: {\n        color: theme.palette.link,\n    },\n    fullRow: {\n        gridColumn:'1 / -1',\n    },\n    formDescription: {\n        marginBottom: '0',\n    },\n    dataPaper: {\n        display: 'block',\n    },\n    child: {\n        margin: 0,\n        width: '100%'\n    },\n    copy: {\n        display: 'inline',\n    },\n    preFetched: {\n        marginBottom: '1rem',\n    },\n})\n\nexport default styles\n","const preFetchedRepos = [\n    {\n        name: 'React',\n        file: 'facebook-react',\n    },\n    {\n        name: 'Vite',\n        file: 'vitejs-vite',\n    },\n    {\n        name: 'Typescript',\n        file: 'microsoft-typescript'\n    },\n    {\n        name: 'Jest',\n        file: 'facebook-jest',\n    },\n    {\n        name: 'Vitest',\n        file: 'vitest-dev-vitest',\n    },\n    {\n        name: 'Prettier',\n        file: 'prettier-prettier',\n    },\n    {\n        name: 'Cypress',\n        file: 'cypress-io-cypress',\n    },\n    {\n        name: 'Playwright',\n        file: 'microsoft-playwright',\n    },\n    {\n        name: 'React Testing Library',\n        file: 'testing-library-react-testing-library',\n    },\n    {\n        name: 'vscode',\n        file: 'microsoft-vscode',\n    },\n    {\n        name: 'Material',\n        file: 'mui-org-material',\n    },\n    {\n        name: 'Remix',\n        file: 'remix-run-remix',\n    },\n    {\n        name: 'Node',\n        file: 'nodejs-node',\n    },\n    {\n        name: 'Deno',\n        file: 'denoland-deno',\n    },\n    {\n        name: 'Swift',\n        file: 'apple-swift',\n    },\n    {\n        name: 'Kotlin',\n        file: 'JetBrains-Kotlin',\n    },\n    {\n        name: 'Babel',\n        file: 'babel-babel',\n    },\n]\n\nconst preFetchedTeams = [\n    {\n        name: 'ReactCore',\n        file: 'ReactCore',\n    },\n    {\n        name: 'ViteCore',\n        file: 'ViteCore',\n    },\n    {\n        name: 'SvelteCore',\n        file: 'SvelteCore',\n    },\n    {\n        name: 'TypeScriptCore',\n        file: 'TypeScriptCore',\n    },\n]\n\nexport {\n    preFetchedRepos,\n    preFetchedTeams,\n}\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\nimport { pathOr } from 'ramda'\n\nimport Button from '../../shared/Button'\nimport Message from '../Message'\nimport { P } from '../../shared/StyledTags'\nimport styles from './styles'\nimport { getPreFetched } from '../../../state/actions'\nimport {\n    preFetchedRepos,\n    preFetchedTeams,\n} from '../../../preFetchedInfo'\n\nconst PrefetchedOptions = (props = {}) => {\n    const {\n        classes,\n        error,\n        preFetchedName = '',\n        getPreFetchedReport,\n    } = props\n\n    useEffect(() => {\n        const quertString = pathOr('', ['location', 'search'], window)\n        const urlParams = new URLSearchParams(quertString);\n        const repo = urlParams.get('repo') || 'facebook-react';\n\n        const allItems = [\n            ...preFetchedRepos,\n            ...preFetchedTeams,\n        ]\n        const repoInfo = allItems\n            .find(x => x.file === repo)\n\n        getPreFetchedReport(repoInfo)\n    }, [getPreFetchedReport])\n\n    const preFetchButton = ({ name, file }, i) => <Button\n        value={name}\n        key={i}\n        color={preFetchedName === file ? 'primary' : 'secondary'}\n        onClick={(e) => {\n            e.preventDefault()\n            getPreFetchedReport({ name, file })\n        }}\n    />\n    // TODO: ajax prefetched on load? or have first in bundle\n    return (\n        <div className={classes.preFetched}>\n            <P>\n                See community contribution health of some popular Open Source repositories.\n            </P>\n            {\n                preFetchedRepos\n                    .map(preFetchButton)\n            }\n                <P>See contribution health of some popular OSS teams</P>\n                {\n                    preFetchedTeams\n                        .map(preFetchButton)\n                }\n                {\n                    error\n                        && <Message\n                            error={error}\n                            className={classes.fullRow}\n                        />\n                }\n            </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    preFetchedName: state.preFetchedName,\n    error: state.preFetchedError,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getPreFetchedReport: (x) => dispatch(getPreFetched(x)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(PrefetchedOptions))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Select,\n    MenuItem,\n} from '@material-ui/core'\n\nconst SelectAmountData = (props = {}) => {\n    const {\n        setValue,\n        amountOfData,\n        pullRequests = [],\n        preFetchedName = '',\n    } = props\n\n    const hasTeamData = !preFetchedName && pullRequests.length > 0\n\n    const itemText = (amount) => `Get ${amount} ${amount === 1 ? 'month' : 'months'} ${hasTeamData ? 'more ' : ''}data`\n\n    return (<Select\n            value={amountOfData}\n            onChange={(e) => setValue('amountOfData', e.target.value)}\n            inputProps={{ 'aria-label': 'Amount of data' }}\n        >\n        <MenuItem value={1} default>{itemText(1)}</MenuItem>\n        <MenuItem value={3} >{itemText(3)}</MenuItem>\n        <MenuItem value={6} >{itemText(6)}</MenuItem>\n        <MenuItem value={12} >{itemText(12)}</MenuItem>\n        <MenuItem value={24} >{itemText(24)}</MenuItem>\n        <MenuItem value=\"all\">Get it all!</MenuItem>\n    </Select>)\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    preFetchedName: state.preFetchedName,\n})\n\nexport default connect(mapStateToProps)(SelectAmountData)\n","import {\n    always,\n    equals,\n    cond,\n    join,\n    keys,\n    T as alwaysTrue,\n} from 'ramda'\n\nconst inputLabels = {\n    org: 'Organization',\n    repo: 'Repository',\n    token: 'Token*',\n    excludeIds: \"Exclude GitHub ids e.g. bots, ',' separated\",\n    enterpriseAPI: 'Enterprise API full url',\n    userIds: 'Comma separated list of user ids',\n    teamName: 'Team name',\n}\n\nconst validate = ({ key, value }) => {\n    const isValid = cond([\n        [equals('enterpriseAPI'), always(/^(https:\\/\\/.+\\..+|^$)/.test(value))],\n        [equals('excludeIds'), always(/^([\\w-.,\\s]+|)$/.test(value))],\n        [equals('userIds'), always(/^([\\w-.,\\s]+)$/.test(value))],\n        [alwaysTrue, always(/^[\\w-.]+$/.test(value))],\n    ])(key)\n    return isValid\n}\n\n\nconst validateForm = (formInfo) => {\n    const getErrorValue = errorValue(formInfo)\n\n    const validationErrors = {}\n    keys(formInfo)\n        .forEach(key => validationErrors[key] = getErrorValue(key))\n\n    const isValid = Object.values(validationErrors)\n        .every(x => !x)\n\n    return {\n        isValid,\n        validationErrors\n    }\n}\n\nconst buttonText = (fetching, pullRequests = []) => [\n    fetching && 'fetching',\n    pullRequests.length && 'Get more data',\n    'Get data',\n].find(Boolean)\n\nconst errorValue = formInfo => key => {\n    const value = formInfo[key]\n    const isValid = validate({ key, value })\n\n    return isValid ? false : true\n}\n\nconst formValue = (data, key) => {\n    const value = data[key]\n    return Array.isArray(value)\n        ? join(', ', value)\n        : value\n}\n\nexport {\n    buttonText,\n    errorValue,\n    inputLabels,\n    validate,\n    formValue,\n    validateForm,\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Button from '../../shared/Button'\nimport Message from '../Message'\nimport { buttonText } from './utils'\nimport styles from './styles'\n\nconst ButtonWithMessage = (props) => {\n    const {\n        fetching,\n        error,\n        pullRequests = [],\n        classes,\n    } = props\n\n    return (<div className={classes.inputGrid}>\n        <Button\n            className={`${classes.child} ${classes.fullRow}`}\n            type={fetching ? 'disabled' : 'submit'}\n            variant=\"contained\"\n            color=\"primary\"\n            value={buttonText(fetching, '', pullRequests)}\n        />\n        {\n            error\n                && <Message\n                    error={error}\n                    className={classes.fullRow}\n                />\n        }\n    </div>)\n}\n\nconst mapStateToProps = (state) => ({\n    fetching: state.fetching,\n    error: state.error,\n    pullRequests: state.pullRequests,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(ButtonWithMessage))\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { pathOr } from 'ramda'\n\nimport styles from './styles'\nimport {\n    inputLabels,\n    formValue,\n    validate,\n} from './utils'\n\nconst TextInput = (props) => {\n    const {\n        type,\n        classes,\n        inputError,\n        setInputError,\n        formInfo,\n        setValue,\n    } = props\n\n    const inputProps = {\n        label: inputLabels[type],\n        className: classes.child,\n        error: inputError[type] || false,\n        value: formValue(formInfo, type),\n        variant: 'outlined',\n        margin: 'normal',\n        helperText: inputError[type] && 'Invalid input',\n        onBlur: (event) => {\n            const value = pathOr('', ['target', 'value'], event)\n\n            const isValid = validate({ type, value })\n            setInputError({\n                ...inputError,\n                [type]: isValid ? false : true\n            })\n\n            isValid\n                && setValue(type, value)\n        },\n        onChange: (event) => {\n            const value = pathOr('', ['target', 'value'], event)\n            setInputError({\n                ...inputError,\n                [type]: false,\n            })\n\n            setValue(type, value)\n        },\n        onFocus: () => setInputError({\n            ...inputError,\n            [type]: false,\n        })\n    }\n\n\n    return <TextField\n        {...inputProps }\n    />\n}\n\nexport default withStyles(styles)(TextInput)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport styles from './styles'\nimport {\n    getDownloadProps,\n} from '../../../state/actions'\nimport { P } from '../../shared/StyledTags'\n\nconst Download = ({\n    fetching,\n    preFetchedName,\n    pullRequests,\n    classes,\n    getDownloadInfo,\n} = {}) =>\n    !fetching && !preFetchedName && pullRequests.length > 0\n        ? <P><a className={classes.link} {...getDownloadInfo()}>Download report data</a></P>\n        : null\n\nconst mapStateToProps = (state) => ({\n    fetching: state.fetching,\n    pullRequests: state.pullRequests,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getDownloadInfo: () => dispatch(getDownloadProps),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Download))\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { keys } from 'ramda'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport ChartDescription from '../../shared/ChartDescription'\nimport SelectAmountData from './SelectAmountData'\nimport ButtonWithMessage from './ButtonWithMessage'\nimport TextInput from './TextInput'\n\nimport Download from './Download'\nimport { P, H } from '../../shared/StyledTags'\nimport styles from './styles'\nimport { validateForm } from './utils'\n\nimport {\n    clearPastSearch,\n    storeOrg,\n    storeRepo,\n    storeToken,\n    storeUserIds,\n    storeTeamName,\n    storeEnterpriseAPI,\n    storeExcludeIds,\n    storeAmountOfData,\n    storeFormUntilDate,\n    storeSortDirection,\n    getAPIData,\n} from '../../../state/actions'\n\nconst FormSection = (props) => {\n    const {\n        setValues,\n        getData,\n        fetching,\n        reportType = 'repo',\n        classes,\n    } = props\n\n    const commonInputs = {\n        sortDirection: 'DESC',\n        amountOfData: 1,\n        token: '',\n        excludeIds: '', // todo:why is this being a [] vs ''?\n        enterpriseAPI: '',\n    }\n\n    const primaryInputs = reportType === 'repo'\n        ? {\n            org: '',\n            repo: '',\n        }\n        : {\n            userIds: '',\n            teamName: '',\n        }\n\n    const defaultInputs = {\n        ...commonInputs,\n        ...primaryInputs,\n    }\n\n    const [inputError, setInputError] = useState({})\n    const [formInfo, setFormInfo] = useState(defaultInputs)\n\n    const setValue = (key, value) => setFormInfo({\n        ...formInfo,\n        [key]: value\n    })\n\n    const inputStates = {\n        inputError,\n        setInputError,\n        formInfo,\n        setValue,\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        const {\n            isValid,\n            validationErrors,\n        } = validateForm(formInfo)\n\n        setInputError(validationErrors)\n\n        isValid && !fetching\n            && setValues(formInfo)\n\n        isValid && !fetching\n            && getData()\n    }\n\n    return (\n        <div className={classes.formDescription} >\n            <H level={3}>Get community data for any Team(list of users)</H>\n            <form\n                onSubmit={handleSubmit}\n            >\n                <div className={classes.inputGrid}>\n                    <SelectAmountData setValue={setValue} amountOfData={formInfo.amountOfData} />\n                    {\n                        keys(primaryInputs)\n                            .map((inputKey) => <TextInput\n                                key={inputKey}\n                                type={inputKey}\n                                { ...inputStates }\n                            />)\n                    }\n                    <TextInput\n                        type=\"token\"\n                        { ...inputStates }\n                    />\n                    <P className=\"tokenText\">\n                        * To create a token go to your GitHub <a className={classes.link} href=\"https://github.com/settings/tokens\">tokens</a> page, click on 'generate new token', choose the settings 'repo' (all) and 'read:org' then click 'Generate token'.\n                    </P>\n                </div>\n\n                <ChartDescription\n                    className={`${classes.formDescription} ${classes.fullRow}`}\n                    title=\"\"\n                    expandText=\"add this\"\n                    intro=\"Advanced options\"\n                >\n                    <div className={classes.inputGrid}>\n                        <TextInput\n                            type=\"excludeIds\"\n                            { ...inputStates }\n                        />\n                        <TextInput\n                            type=\"enterpriseAPI\"\n                            { ...inputStates }\n                        />\n                    </div>\n                </ChartDescription>\n\n                <ButtonWithMessage />\n            </form>\n            <Download />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    fetching: state.fetching,\n    error: state.error,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setValues: (values) => {\n        const {\n            org,\n            repo,\n            token,\n            amountOfData,\n            sortDirection,\n            teamName,\n            userIds,\n            enterpriseAPI,\n            excludeIds,\n        } = values\n\n        dispatch(clearPastSearch(values))\n\n        dispatch(storeToken(token))\n        dispatch(storeAmountOfData(amountOfData))\n        dispatch(storeSortDirection(sortDirection))\n        dispatch(storeFormUntilDate(amountOfData))\n\n        org && dispatch(storeOrg(org))\n        repo && dispatch(storeRepo(repo))\n        userIds && dispatch(storeUserIds(userIds))\n        teamName && dispatch(storeTeamName(teamName))\n\n        dispatch(storeEnterpriseAPI(enterpriseAPI))\n        dispatch(storeExcludeIds(excludeIds))\n    },\n    getData: (x) => dispatch(getAPIData(x)),\n})\n\nexport default connect(mapStateToProps,\n    mapDispatchToProps)(withStyles(styles)(FormSection))\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    cond,\n    always,\n    equals,\n} from 'ramda'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { clearAllData } from '../../../state/actions'\n\nimport Paper from '../../shared/Paper'\nimport Button from '../../shared/Button'\n\nimport PrefetchedOptions from './PrefetchedOptions'\nimport FormSection from './FormSection'\nimport styles from './styles'\n\nconst FetchForm = ({ classes, clearReport }) => {\n     const [selectedOption, setLocalOption] = useState('oss')\n\n     const setOption = (option = '') => {\n        option !== selectedOption\n            && clearReport()\n        setLocalOption(option)\n     }\n\n     return (\n        <Paper className={classes.dataPaper} >\n            <div className={classes.typeOptions}>\n                {\n                    [\n                        ['Popular repos/teams', 'oss'],\n                        ['Make repo report', 'repo'],\n                        ['Make team report', 'team'],\n                    ]\n                        .map(([text, type], i) => <Button\n                            value={text}\n                            key={i}\n                            color={selectedOption === type ? 'primary' : 'secondary'}\n                            onClick={(e) => {\n                                e.preventDefault()\n                                setOption(type)\n                            }}\n                        />)\n                }\n            </div>\n            {\n                cond([\n                    [equals('oss'), always(<PrefetchedOptions />)],\n                    [equals('repo'), always(<FormSection reportType=\"repo\" />)],\n                    [equals('team'), always(<FormSection reportType=\"team\" />)],\n                ])(selectedOption)\n            }\n        </Paper>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    clearReport: () => dispatch(clearAllData),\n})\n\nexport default connect(() => ({}), mapDispatchToProps)(withStyles(styles)(FetchForm))\n","const colors = ['#E82573', '#8b4ff0', '#1F77B4', '#4ECC7A', '#DBD523', '#EB9830', '#D14B41']\n\nexport default colors\n","import React, { Fragment } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { H } from '../shared/StyledTags'\n\nconst ChartHeading = ({ className, items = [], text = '', type = '' } = {}) => {\n    const prepend = (i) => {\n        const maxIndex = items.length - 1\n\n        return [\n            i === 0\n            && (() => ''),\n            i === maxIndex\n            && (() => ' and '),\n            i > 0\n            && (() => ', '),\n        ].find(Boolean)()\n    }\n\n    const useStyles = makeStyles(theme => ({\n        root: props => ({\n            color: props.color,\n            borderBottom: `solid 2px ${props.color}`,\n            display: 'inline-block',\n            lineHeight: '2rem',\n            position: 'relative',\n            '&:before': {\n                lineHeight: '0',\n                content: '\"•\"',\n                position: 'absolute',\n                bottom: '-1px',\n                left: '-3px',\n            },\n            '&:after': {\n                lineHeight: '0',\n                content: '\"•\"',\n                position: 'absolute',\n                bottom: '-1px',\n                right: '-3px',\n            }\n        }),\n    }))\n\n    const LineItem = ({ color, label}) => {\n        const classes = useStyles({ color });\n        return (\n            <span\n                className={classes.root}\n            >\n                {label}\n            </span>\n        )\n    }\n\n    const Item = ({ color, label}) => (\n        <span\n            style={{ color }}\n        >\n            {label}\n        </span>\n    )\n\n    const mathTypeMap = {\n        average: 'Average',\n        sum: 'Total',\n        count: 'Total',\n        multiple: '',\n    }\n\n    const uniqueLinesMaths = [\n        ...new Set(items.map(x => x.groupMath))\n    ]\n\n    const singleMathType = items.length > 0\n        && type === 'line'\n        && uniqueLinesMaths.length < 2\n            ? uniqueLinesMaths[0] || 'average'\n            : 'multiple'\n\n    return (\n        <H level={3} className={className}>\n            {`${text} `}\n            {`${mathTypeMap[singleMathType]} `}\n            {\n                items\n                    .map((item, i) => <Fragment key={i}>\n                        {prepend(i)}\n                        {\n                            type === 'line'\n                                ? <LineItem {...item} />\n                                : <Item {...item} />\n                        }\n                        </Fragment>)\n            }\n        </H>\n    )\n}\n\nexport default ChartHeading\n","import { withStyles } from '@material-ui/core/styles'\n\nconst styles = () => ({\n    centerHeading: {\n        textAlign: 'center',\n    },\n    headingWrap: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    barChartComponentWrap: {\n        width: '50%',\n        maxWidth: '1200px',\n        margin: '0 0 1rem 0',\n        '@media (max-width: 950px)': {\n            width: '100%',\n        },\n    },\n    lineChartComponentWrap: {\n        width: '100%',\n        maxWidth: '1200px',\n    },\n    chordWrap: {\n        width: '450px',\n        height: '450px',\n        '@media (max-width: 668px)': {\n            width: '370px',\n            height: '370px',\n            '& svg text': {\n                fontSize: '10px !important'\n            },\n        },\n    },\n    pieWrap: {\n        width: '100%',\n        height: '350px',\n        marginBottom: '20px',\n        '@media (max-width: 750px)': {\n            height: '300px',\n        },\n        '@media (max-width: 650px)': {\n            height: '250px',\n        },\n    },\n    chartWrap: {\n        width: '100%',\n        height: '500px',\n        '& svg g line': {\n            opacity: '0.6'\n        },\n        '@media (max-width: 768px)': {\n            height: '350px',\n            '& svg g line': {\n                opacity: '0.2'\n            },\n            '& svg g line:first-child': {\n                opacity: '1'\n            },\n        },\n        '@media (max-width: 668px)': {\n            height: '300px',\n            '& svg g circle': {\n                display: 'none'\n            },\n            '& svg path': {\n                opacity: '1'\n            },\n            '& svg text': {\n                fontSize: '10px !important'\n            },\n        },\n    },\n})\n\nconst styledCharts = (Chart) => withStyles(styles)(Chart)\n\nexport default styledCharts","import {\n    cond,\n    always,\n    T,\n} from 'ramda'\n const {\n    getMonth,\n    getWeek,\n    getDay,\n    differenceInMonths,\n } = require('date-fns')\n\n const isNewDay = (prev, current) => {\n    const prevItemsDay = prev && getDay(new Date(prev))\n    const currentItemsDay = current && getDay(new Date(current))\n\n    return (prevItemsDay && currentItemsDay) && prevItemsDay !== currentItemsDay\n}\n\nconst isNewWeek = (prev, current) => {\n    const prevItemsWeek = prev && getWeek(new Date(prev))\n    const currentItemsWeek = current && getWeek(new Date(current))\n\n    return (prevItemsWeek && currentItemsWeek) && prevItemsWeek !== currentItemsWeek\n}\n\nconst isNewNthWeek = mod => (prev, current) => {\n    const prevItemsWeek = prev && getWeek(new Date(prev))\n    const currentItemsWeek = current && getWeek(new Date(current))\n\n    return (prevItemsWeek && currentItemsWeek) && (prevItemsWeek % mod) > 0 && (currentItemsWeek % mod) === 0\n}\n\nconst isNewMonth = (prev, current) => {\n    const prevItemsWeek = prev && getMonth(new Date(prev))\n    const currentItemsWeek = current && getMonth(new Date(current))\n\n    return (prevItemsWeek && currentItemsWeek) && prevItemsWeek !== currentItemsWeek\n}\n\nconst isNew = {\n    '1day': isNewDay,\n    '1week': isNewWeek,\n    '2week': isNewNthWeek(2),\n    '3week': isNewNthWeek(3),\n    '1month': isNewMonth,\n}\n\nconst batchByType = batchType => key => data => data\n    .reduce((acc, item) => {\n        const prevWeeks = acc.length > 1\n            ? acc.slice(0, acc.length - 1)\n            : []\n\n        const currentWeek = acc[acc.length - 1] || []\n        const prevItem = currentWeek[currentWeek.length - 1] || {}\n\n        const all = isNew[batchType](prevItem[key], item[key])\n            ? acc\n                .concat([[item]])\n            : prevWeeks\n                .concat([currentWeek.concat(item)])\n\n        return all\n    }, [])\n\nconst batchByData = key => (data = []) => {\n    const { mergedAt: startDate } = data.at(0)\n    const { mergedAt: endDate } = data.at(-1)\n    const totalMonths = differenceInMonths(new Date(endDate), new Date(startDate))\n\n    return cond([\n        [always(totalMonths >= 200), batchByType('1month')(key)],\n        [always(totalMonths >= 60), batchByType('3week')(key)],\n        [always(totalMonths >= 12), batchByType('2week')(key)],\n        [always(totalMonths >= 6), batchByType('1week')(key)],\n        [T, batchByType('1day')(key)],\n    ])(data)\n}\n\nconst batchBy = key => (data = []) => data.length < 1\n    ? []\n    : batchByData(key)(data)\n\nexport default batchBy","import { apply } from 'ramda'\nimport batchBy from './batchBy'\n\nconst getAllYValues = data => data\n    .reduce((acc, { data }) => {\n        const values = data\n            .map(x => x.y)\n\n        acc.push(...values)\n\n        return acc\n    }, [])\n\nconst getMaxYValue = (data) => {\n    const allValues = getAllYValues(data)\n\n    const maxValue = apply(Math.max, allValues)\n\n    return maxValue\n}\n\nconst getMinYValue = (data) => {\n    const allValues = getAllYValues(data)\n\n    const minValue = apply(Math.min, allValues)\n\n    return minValue > 0\n        ? 0\n        : minValue\n}\n\nconst dateSort = (\n    { mergedAt: dateA = '' },\n    { mergedAt: dateB = '' },\n) => new Date(dateA).getTime() - new Date(dateB).getTime()\n\nconst formatDate = (date) => {\n    const info = new Date(date)\n    const month = info.getMonth() + 1\n    const dayM = info.getDate()\n    return `${info.getFullYear()}-${month < 10 ? `0${month}` : month}-${dayM < 10 ? `0${dayM}` : dayM}`\n}\n\nconst formatBatches = batches => dataKey => groupMath => batches\n    .map((batch) => {\n        const value = batch\n            .reduce((acc, current) => (current[dataKey] || 0) + acc, 0)\n\n        const valueByTypes = {\n            'average': Math.round(value / batch.length),\n            'sum': value,\n            'count': batch.length,\n        }\n\n        return {\n            y: valueByTypes[groupMath],\n            x: formatDate(batch[0].mergedAt),\n        }\n    })\n\nconst formatLineData = ({ data, dataKey, groupMath = 'average' }) => {\n    const filteredData = data\n        .filter(item => item.mergedAt && /\\d+/.test(item[dataKey]))\n\n    const sortedData = filteredData\n        .sort(dateSort)\n\n    const batchedData = batchBy('mergedAt')(sortedData)\n    const formattedData = formatBatches(batchedData)(dataKey)(groupMath)\n\n    return formattedData\n}\n\nconst formatLinesData = (axix) => axix.lines\n    .map(({ label, color, dataKey, groupMath, data: lineData }) => {\n        const data = lineData || axix.data || []\n        const formattedData = formatLineData({ data, dataKey, groupMath })\n\n        return formattedData.length\n            && ({\n                id: label,\n                color,\n                data: formattedData,\n            })\n    })\n    .filter(Boolean)\n\nconst formatGraphMarkers = (markers, theme, lineData) => {\n    const [dateStart, dateEnd] = lineData\n        .reduce(([start, end], { data = [] } = {}) => {\n            const currentStart = data[0].x\n            const currentEnd = data[data.length - 1].x\n\n            return [\n                !start || new Date(currentStart) < start\n                    ? new Date(currentStart)\n                    : start,\n                !end || new Date(currentEnd) > end\n                    ? new Date(currentEnd)\n                    : end,\n            ]\n        }, [])\n\n    const markerType = (type) => ({\n        MAJOR: 'primary',\n        MINOR: 'secondary',\n    })[type] || 'tertiary'\n\n    const formattedMarkers = markers\n        .filter(({ date } = {}) => {\n            const currentDate = new Date(date)\n\n            return currentDate > dateStart && currentDate < dateEnd\n        })\n        .map((item) => ({\n            axis: 'x',\n            value: new Date(item.date).getTime(),\n            legend: item.releaseType === 'MAJOR'\n                ? item.description\n                : '',\n            ...(theme.charts.markers[markerType(item.releaseType)] || {}),\n        }))\n\n    return formattedMarkers\n}\n\nconst smoothNumber = (ruffledNumber) => {\n    const stringNumber = `${ruffledNumber}`\n    const roundTo = Math.ceil(stringNumber.length * 0.4)\n\n    const [backwards] = stringNumber\n        .split('')\n        .reduceRight(([acc = '', increment = false], item, index) => {\n            var number = parseInt(item)\n\n            const updatedItem = increment\n                ? number + 1\n                : number\n\n\n            const round = index !== 0 && (updatedItem > 9 || (index > roundTo && updatedItem > 4))\n\n            const newValue = round || index > roundTo\n                ? 0\n                : updatedItem\n\n            return [\n                [\n                    ...acc,\n                    newValue,\n                ],\n                round,\n            ]\n        }, [])\n\n    const smooth = backwards.reverse().join('')\n\n    return smooth\n}\n\nexport {\n    getMaxYValue,\n    getMinYValue,\n    formatLinesData,\n    formatGraphMarkers,\n    smoothNumber,\n    dateSort,\n}","import React from 'react'\nimport { pathOr, propOr } from 'ramda'\nimport { ResponsiveLine as NivoLine } from '@nivo/line'\nimport { TableTooltip } from '@nivo/tooltip'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\n\nimport {\n    getMaxYValue,\n    getMinYValue,\n    formatLinesData,\n    formatGraphMarkers,\n    smoothNumber,\n} from './lineHelpers'\n\nconst ToolTip = convertedRightLines => data => {\n    // NOTE: this is needed to use the original Y value for the tool tip\n    const getYValue = (point) => {\n        const yCurrentValue = point.data.yFormatted\n        const originalY = point.data.originalY\n\n        return /[\\d.]/.test(originalY)\n            ? originalY\n            : yCurrentValue\n    }\n\n    const Chip = ({ color }) => <span\n        style={{\n            display: 'block',\n            width: '12px',\n            height: '12px',\n            background: color,\n        }}\n    />\n\n    const points = pathOr([], ['slice', 'points'], data)\n    return (\n        <TableTooltip\n            rows={\n                points\n                    .map((point) => [\n                        <Chip color={point.serieColor} />,\n                        point.serieId,\n                        <strong>{getYValue(point)}</strong>,\n                    ])\n            }\n        />\n    )\n}\n\nconst Line = styledCharts(({\n    title,\n    data = [],\n    markers = [],\n    showLegends = false,\n    legends = [],\n    classes,\n} = {}) => {\n    const theme = useTheme();\n    // TODO: function to see time gap in data to help format date e.g. should add year\n    const leftAxis = data\n        .find(({ xAxis } = {}) => xAxis === 'left') || { data: [], lines: [] }\n    const leftLinesData = formatLinesData(leftAxis)\n    const maxLeftValue = getMaxYValue(leftLinesData)\n    const minLeftValue = getMinYValue(leftLinesData)\n\n    const rightAxis = data\n        .find(({ xAxis } = {}) => xAxis === 'right') || { data: [], lines: [] }\n    const rightLinesData = formatLinesData(rightAxis)\n    const maxRightValue = getMaxYValue(rightLinesData)\n\n    // As Nivo Line does not have right axis lines need to convert right line data to left line data\n    const convertedRightLines = rightLinesData\n        .map((item = {}) => {\n            const formattedData = item.data\n                .map((dataItem) => ({\n                    y: Math.round(dataItem.y * (maxLeftValue / maxRightValue)),\n                    x: dataItem.x,\n                    originalY: dataItem.y,\n                }))\n\n            return formattedData.length && ({\n                ...item,\n                data: formattedData,\n            })\n        })\n        .filter(Boolean)\n\n    const leftHeadingItems = title\n        ? []\n        : leftAxis.lines\n\n    const rightHeadingItems = rightAxis.lines\n\n    const legendsArray = legends.length\n        ? legends\n        : [\n            {\n                anchor: 'top-right',\n                direction: 'column',\n                justify: false,\n                translateX: -10,\n                translateY: 10,\n                itemsSpacing: 0,\n                itemDirection: 'right-to-left',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 1,\n                symbolSize: 12,\n                symbolShape: 'square',\n                symbolBorderColor: 'rgba(0, 0, 0, .9)',\n                toggleSerie: true,\n                itemTextColor: theme.palette.text.primary,\n            },\n        ]\n\n    const lineData = leftLinesData.concat(convertedRightLines)\n\n    const formattedMarkers = formatGraphMarkers(markers, theme, lineData)\n\n    const hasData = (items) => items.some(x => propOr([], 'data', x).length)\n\n    return hasData(lineData) && (\n        <div className={classes.lineChartComponentWrap}>\n            <div className={classes.headingWrap}>\n                <ChartHeading type='line' text={title} items={leftHeadingItems} />\n                {\n                    rightHeadingItems.length > 0\n                        && <ChartHeading type='line' items={rightHeadingItems} />\n                }\n            </div>\n\n            <div className={classes.chartWrap}>\n                <NivoLine\n                    margin={{ top: 14, right: 50, bottom: 50, left: 50 }}\n                    data={lineData}\n                    colors={[\n                        ...leftAxis.lines.map(x => x.color),\n                        ...rightAxis.lines.map(x => x.color),\n                    ]}\n                    lineWidth={2}\n                    curve='monotoneX'\n                    animate={false}\n                    toggleSerie={showLegends && true}\n                    xScale={{\n                        type: 'time',\n                        format: '%Y-%m-%d',\n                    }}\n                    xFormat=\"time:%Y-%m-%d\"\n                    yScale={{\n                        type: 'linear',\n                        min: minLeftValue,\n                        max: maxLeftValue,\n                    }}\n                    axisBottom={{\n                        format: '%y/%m',\n                        tickSize: 0,\n                        tickPadding: 10,\n                        tickRotation: -45,\n                    }}\n                    legends={showLegends ? legendsArray : []}\n                    axisLeft={{\n                        tickSize: 0,\n                        tickValues: 8,\n                    }}\n                    pointLabelYOffset={0}\n                    {...(\n                        formattedMarkers.length\n                            && { markers: formattedMarkers }\n\n                    )}\n                    {...(\n                        convertedRightLines.length\n                            && {\n                                axisRight: {\n                                    tickSize: 0,\n                                    tickValues: 8,\n                                    format: (rawLeftValue) => {\n                                        const realRightValue = Math.round(rawLeftValue * (maxRightValue / maxLeftValue))\n                                        return smoothNumber(realRightValue)\n                                    },\n                                },\n                            }\n                    )}\n                    enableGridX={false}\n                    enableSlices=\"x\"\n                    sliceTooltip={ToolTip(convertedRightLines)}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Line","import React from 'react'\nimport { connect } from 'react-redux'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport { P } from '../shared/StyledTags'\nimport colors from '../colors'\nimport Line from '../charts/Line'\n\nconst getByAuthorData = (pullRequests = []) => {\n    const authorsPrs = {}\n    pullRequests\n        .forEach((pr) => {\n            const { author } = pr\n            const theirPrs = authorsPrs[author] || []\n            theirPrs.push(pr)\n\n            authorsPrs[author] = theirPrs\n        })\n\n    const byAuthorLines = Object.entries(authorsPrs)\n        .map(([author = '', prs = []], i) => {\n            const data = prs\n                .map(pr => ({\n                    value: 1,\n                    mergedAt: pr.mergedAt,\n                }))\n\n            return {\n                label: author,\n                color: colors[i % colors.length],\n                dataKey: 'value',\n                groupMath: 'count',\n                data,\n            }\n        })\n\n    const byAuthor = {\n        lines: byAuthorLines,\n        xAxis: 'left',\n    }\n\n    return [byAuthor]\n}\n\nconst PullRequestTrends = ({\n    pullRequests = [],\n    releases = [],\n    userIds = [],\n} = {}) => {\n    const { type } = useTheme();\n\n    const isTeamPage = userIds.length > 0\n    const byAuthorData = isTeamPage\n        ? getByAuthorData(pullRequests)\n        : []\n\n    return pullRequests.length > 0 && (\n        <Paper>\n            <ChartDescription\n                title=\"Pull Request trends\"\n            >\n                {\n                    releases.length > 1 && <div>\n                        <P>Vertical lines are releases: Green is a Major release, solid purple is Minor and dotted purple is Patch or Alpha</P>\n                    </div>\n                }\n            </ChartDescription>\n            {\n                isTeamPage && <>\n                    <Line\n                        title=\"Merged PRs by team\"\n                        markers={releases}\n                        data={[{\n                            lines: [{\n                                label: 'team',\n                                color: '#e82573',\n                                dataKey: 'author',\n                                groupMath: 'count',\n                            }],\n                            xAxis: 'left',\n                            data: pullRequests,\n                        }]}\n                    />\n                    <Line\n                        title=\"Merged PRs by author\"\n                        markers={releases}\n                        showLegends={true}\n                        data={byAuthorData}\n                    />\n                </>\n            }\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Comments',\n                                color: '#1f77b4',\n                                dataKey: 'comments',\n                            },\n                            {\n                                label: 'Approvals',\n                                color: '#e82573',\n                                dataKey: 'approvals',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data: pullRequests,\n                    },\n                    {\n                        lines: [\n                            {\n                                label: 'PR Size',\n                                color: type === 'dark' ? '#e2e2e2' : '#777',\n                                dataKey: 'prSize',\n                            },\n                        ],\n                        xAxis: 'right',\n                        data: pullRequests,\n                    },\n                ]}\n            />\n\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Age (days)',\n                                color: '#e82573',\n                                dataKey: 'age',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data: pullRequests,\n                    },\n                    {\n                        lines: [\n                            {\n                                label: 'PR Size',\n                                color: type === 'dark' ? '#e2e2e2' : '#777',\n                                dataKey: 'prSize',\n                            },\n                        ],\n                        xAxis: 'right',\n                        data: pullRequests,\n                    },\n                ]}\n            />\n        </Paper>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    releases: state.releases,\n    userIds: state.fetches.userIds,\n})\n\nexport default connect(mapStateToProps)(PullRequestTrends)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { P } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport Line from '../charts/Line'\n\nconst formatIssueData = (data = []) => data\n    .map((item) => ({\n        mergedAt: item.mergedAt,\n        ...(\n            item.isBug\n                ? { bug: 1 }\n                : { issue: 1 }\n        ),\n    }))\n\nconst IssuesTrends = ({\n    issues = [],\n    releases = [],\n    classes,\n} = {}) => {\n    const data = formatIssueData(issues)\n\n    return data && data.length > 0 && (\n        <Paper>\n            <ChartDescription\n                title=\"Feature and bug trends\"\n            />\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Issues',\n                                color: '#1f77b4',\n                                dataKey: 'issue',\n                                groupMath: 'count',\n                            },\n                            {\n                                label: 'Bugs*',\n                                color: '#e82573',\n                                dataKey: 'bug',\n                                groupMath: 'count',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data,\n                    },\n                ]}\n            />\n            <P className={classes.fullP}>*Bugs in this graph are issues that have a title or a label that contains the word 'bug'</P>\n        </Paper>\n    )\n}\n\nconst styles = theme => ({\n    'fullP': {\n        width: '100%',\n        textAlign: 'center',\n    },\n})\n\nconst mapStateToProps = (state) => ({\n    issues: state.issues,\n    releases: state.releases,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(IssuesTrends))\n","const hasChartData = dataArray => keys => keys\n    .some(key => dataArray\n        .some(dataItem => dataItem[key])\n    )\n\nexport default hasChartData\n","import React from 'react'\nimport { filter } from 'ramda'\nimport { ResponsiveBar as NivoBar } from '@nivo/bar'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\nimport hasChartData from './hasChartData'\n\nconst Bar = styledCharts(({\n    data = [],\n    bars = [],\n    sortBy = 'comments',\n    indexBy = 'user',\n    max = 20,\n    classes,\n    layout = \"vertical\",\n    titlePrefix = ''\n} = {}) => {\n    const theme = useTheme();\n    const trimmedData = filter(item => bars.some(x => item[x.dataKey]), data)\n\n    const byPropDesc = prop => (a, b) =>\n        +((a[prop] || 0) < (b[prop] || 0)) || +((a[prop] || 0) === (b[prop] || 0)) - 1\n\n    const sortedData = sortBy\n        ? trimmedData.sort(byPropDesc(sortBy))\n        : trimmedData\n\n    const finalData = max\n        ? sortedData.slice(0, max)\n        : sortedData\n\n    const keys = bars.map(x => x.dataKey)\n\n    return hasChartData(data)(keys) && (\n        <div className={classes.barChartComponentWrap}>\n            <ChartHeading text={titlePrefix} items={bars} />\n            <div className={classes.chartWrap}>\n                <NivoBar\n                    data={finalData}\n                    keys={keys}\n                    indexBy={indexBy}\n                    margin={{ top: 5, right: 50, bottom: 60, left: 50 }}\n                    padding={0.3}\n                    groupMode=\"grouped\"\n                    layout={layout}\n                    valueFormat={(value) => layout === 'horizontal'\n                        ? `${Math.abs(value)}`\n                        : value}\n                    colors={bars.map(x => x.color)}\n                    axisBottom={{\n                        tickSize: 0,\n                        tickRotation: -45,\n                    }}\n                    axisLeft={{\n                        tickSize: 0,\n                    }}\n                    enableLabel={false}\n                    animate={false}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Bar","const { path, prop } = require('ramda');\n\nconst getNameList = (data, key) => {\n    const scoredData = data\n        .reduce((acc, userData) => {\n            const author = userData.author\n            const keyData = userData[key] || {}\n            const given = Object.values(keyData).reduce((acc, current) => acc + current, 0)\n\n            return Object.assign(acc, { [author]: given })\n        }, {})\n\n    const sortedValues = Object.entries(scoredData)\n        .sort(([, a], [, b]) => b - a)\n\n    const total = sortedValues\n        .reduce((acc, [, value]) => value + acc, 0)\n\n\n    const percentageOfTotal = (value) => {\n        const percentPerUnit = 100 / total\n        const percentOf = value * percentPerUnit\n\n        return percentOf\n    }\n\n    const { showNames } = sortedValues\n        .reduce((\n            { accPercent = 0, showNames = [] },\n            [author, value],\n        ) => {\n            const itemPercent = percentageOfTotal(value, author, accPercent)\n            const newAccPercent = accPercent + itemPercent\n\n            return {\n                accPercent: newAccPercent,\n                showNames: value > 0 && itemPercent > 5\n                    ? [\n                        ...showNames,\n                        author,\n                    ]\n                    : showNames,\n            }\n        }, {})\n\n    // We do not want only one user going into the \"Other\" group\n    return showNames.length === data.length - 1\n        ? sortedValues.map(([x]) => x)\n        : showNames\n}\n\nconst getMatrix = (data, key, showNames, otherAppened) => {\n    const otherTotal = (ignoreNames, data = {}) => Object.entries(data)\n        .reduce((acc, [name, value]) => ignoreNames.some(x => x === name)\n            ? acc\n            : acc + value, 0)\n\n    const martixRow = (item) => [\n        ...showNames.map(x => path([key, x], item) || 0),\n        ...(\n            otherAppened\n                ? [otherTotal(showNames, prop(key, item))]\n                : []\n        ),\n    ]\n\n    const matrixRowsForNamed = showNames\n        .map((name) => {\n            const nameData = data.find(x => x.author === name)\n            return martixRow(nameData)\n        })\n\n    const matrixRowForOther = data\n        .filter(({ author }) => !showNames.some(x => x === author))\n        .reduce((acc, item) => {\n            const currentMatrix = martixRow(item)\n\n            const mergedMatrix = currentMatrix\n                .map((value, i) => value + (acc[i] || 0))\n\n            // Matrix other row can not have data to self logged, must be 0\n            return [\n                ...mergedMatrix.slice(0, mergedMatrix.length - 1),\n                0,\n            ]\n        }, [])\n\n    return [\n        ...matrixRowsForNamed,\n        ...(\n            matrixRowForOther.length\n                ? [matrixRowForOther]\n                : []\n        ),\n    ]\n}\n\nconst formatChordData = (data, key) => {\n    const showNames = getNameList(data, key)\n    const otherAppened = showNames.length < data.length\n\n    const matrix = getMatrix(data, key, showNames, otherAppened)\n\n    const names = [\n        ...showNames,\n        ...(\n            otherAppened\n                ? ['Others']\n                : []\n        ),\n    ]\n\n    return {\n        names,\n        matrix,\n    }\n}\n\nexport default formatChordData\n","import React from 'react'\nimport { ResponsiveChord as NivoChord } from '@nivo/chord'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport formatChordData from '../../format/chordData'\nimport styledCharts from './styledCharts'\nimport colors from '../colors'\n\nconst Chord = styledCharts(({\n    title,\n    data = [],\n    dataKey = '',\n    classes,\n} = {}) => {\n    const theme = useTheme();\n    const {\n        names,\n        matrix,\n    } = formatChordData(data, dataKey)\n\n    const hasMatrixData = (matrix) => matrix\n        .some(row => row\n            .some(Boolean)\n        )\n\n    return hasMatrixData(matrix) && (\n        <div>\n            <ChartHeading text={title} className={classes.centerHeading} />\n            <div className={classes.chordWrap}>\n                <NivoChord\n                    label=\"id\"\n                    data={matrix}\n                    keys={names}\n                    margin={{ top: 0, right: 10, bottom: 10, left: 10 }}\n                    arcBorderColor={{ from: 'color', modifiers: [['darker', 0.4]] }}\n                    ribbonOpacity={0.5}\n                    ribbonBorderWidth={0.5}\n                    ribbonBorderColor={{ from: 'color', modifiers: [['darker', 0.4]] }}\n                    innerRadiusRatio={0.85}\n                    labelRotation={0}\n                    padAngle={0.06}\n                    innerRadiusOffset={0.03}\n                    labelOffset={-23}\n                    labelTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\n                    colors={colors}\n                    isInteractive={true}\n                    arcHoverOpacity={1}\n                    arcHoverOthersOpacity={0.25}\n                    ribbonHoverOpacity={0.75}\n                    ribbonHoverOthersOpacity={0.25}\n                    animate={false}\n                    motionStiffness={90}\n                    motionDamping={7}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Chord","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { P } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport Bar from '../charts/Bar'\nimport Chord from '../charts/Chord'\n\nconst TeamTrends = ({\n    usersData = [],\n    userIds = [],\n    classes,\n} = {}) => {\n    const maxAuthors = userIds.length || 7\n    return usersData.length > 0 && (\n        <Paper>\n            <ChartDescription\n                title=\"Contribution distribution\"\n            />\n\n            <div className={classes.groupedCharts}>\n                <P>These chord charts show how contributions are given and received, the dominant colours indicate the higher contributions</P>\n                <Chord data={usersData} dataKey=\"commentsByUser\" title=\"Comment contributions\" />\n                <Chord data={usersData} dataKey=\"approvalsByUser\" title=\"Approval contributions\" />\n            </div>\n            <Bar\n                data={usersData}\n                indexBy=\"author\"\n                titlePrefix=\"Comments\"\n                sortBy=\"commentsGiven\"\n                max={maxAuthors}\n                bars={[\n                    {\n                        dataKey: 'commentsGiven',\n                        color: '#1f77b4',\n                        label: 'given*',\n                    },\n                    {\n                        dataKey: 'commentsReceived',\n                        color: '#e82573',\n                        label: 'received',\n                    },\n                ]}\n            />\n            <Bar\n                data={usersData}\n                indexBy=\"author\"\n                titlePrefix=\"PRs\"\n                sortBy=\"uniquePRsApproved\"\n                max={maxAuthors}\n                bars={[\n                    {\n                        dataKey: 'uniquePRsApproved',\n                        color: '#1f77b4',\n                        label: 'approved*',\n                    },\n                    {\n                        dataKey: 'totalPRs',\n                        color: '#e82573',\n                        label: 'opened',\n                    },\n                ]}\n            />\n            <P>*Given comments and approvals are taken from the PRs in the dataset, i.e. not all comments/approvals that user has many given over the same time period.</P>\n        </Paper>\n    )\n}\n\nconst styles = theme => ({\n    groupedCharts: {\n        ...theme.palette.groupedCharts,\n        '& p': {\n            flexBasis: '100%',\n            textAlign: 'center',\n        },\n    },\n})\n\nconst mapStateToProps = (state) => ({\n    usersData: state.usersData,\n    userIds: state.fetches.userIds,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(TeamTrends))\n","import React from 'react'\nimport { Radar as NivoRadar } from '@nivo/radar'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\nimport hasChartData from './hasChartData'\n\nconst radarSliceTooltip = fullData => ({ index, data }) => {\n    const matched = fullData.find(x => x.area === index);\n    const rows = data.map(({ id, color }) => [\n        <Chip key={id} color={color} />,\n        id,\n        matched[`${id}Original`],\n    ])\n\n    return <TableTooltip title={<strong>{index}</strong>} rows={rows} />\n}\n\nconst Radar = styledCharts(({\n    title = '',\n    titleItems = [],\n    data = [],\n    keys = [],\n    width = 410,\n    height = 300,\n    classes,\n} = {}) => {\n    const theme = useTheme();\n\n    return hasChartData(data)(keys) && (\n        <div>\n            <ChartHeading className={classes.centerHeading} items={\n                titleItems.length\n                    ? titleItems\n                    : [{ label: title }]\n            } />\n            <NivoRadar\n                width={width}\n                height={height}\n                margin={{ top: 0, bottom: 0, right: 100, left: 100 }}\n                dotSize={8}\n                dotBorderColor={theme.charts.dotColor}\n                dotBorderWidth={2}\n                colors={['#1f77b4', '#e82573']}\n                gridShape=\"linear\"\n                enableDotLabel={false}\n                gridLabelOffset={10}\n                gridLevels={3}\n                animate={false}\n                indexBy='area'\n                keys={keys}\n                data={data}\n                maxValue={100}\n                theme={theme.charts}\n                gridAngleStep={200}\n                angleStep={200}\n                sliceTooltip={radarSliceTooltip(data)}\n            />\n        </div>\n    )\n})\n\nexport default Radar","const formatRadarData = (userData, filterAuthor) => {\n\n    const defaultValues = {\n        age: 0,\n        approvalsGiven: 0,\n        approvalsReceived: 0,\n        codeCommentsGiven: 0,\n        codeCommentsReceived: 0,\n        commentsGiven: 0,\n        commentsReceived: 0,\n        generalCommentsGiven: 0,\n        generalCommentsReceived: 0,\n        prSize: 0,\n        totalPRs: 0,\n        uniquePRsApproved: 0,\n        uniquePRsContributedTo: 0,\n    }\n\n    const filteredContributors = userData\n        .filter(x => filterAuthor\n            ? x.author !== filterAuthor\n            : true)\n        .filter(({\n            commentsGiven,\n            commentsReceived,\n            approvalsGiven,\n            approvalsReceived,\n        }) => [\n            commentsGiven,\n            commentsReceived,\n            approvalsGiven,\n            approvalsReceived,\n        ].some(x => x > 1))\n\n    const keys = [\n        'commentsGiven',\n        'commentsReceived',\n        'approvalsGiven',\n        'approvalsReceived',\n    ]\n\n    const sortedUsers = filteredContributors\n        .sort((a, b) => {\n            const aTotal = keys\n                .reduce((acc, key) => acc + (a[key] || 0), 0)\n\n            const bTotal = keys\n                .reduce((acc, key) => acc + (b[key] || 0), 0)\n            return bTotal - aTotal\n        })\n\n    const p10 = Math.ceil(sortedUsers.length / 100 * 10)\n    const topUsers = p10 > 10\n        ? sortedUsers.slice(0, p10)\n        : sortedUsers\n\n    const totalled = topUsers\n        .filter(x => !filterAuthor || x.author !== filterAuthor)\n        .reduce((total, user) => {\n            const addedUser = Object.entries(user)\n                .filter(([, value]) => !Array.isArray(value) && /^\\d+$/.test(value) && value > 0)\n                .reduce((combinedData, [key, value]) => Object.assign(combinedData, { [key]: value + (total[key] || 0) }), {})\n\n            return Object.assign(total, addedUser)\n        }, {})\n\n    const userCount = topUsers.length\n    const averagedData = Object.entries(totalled)\n        .reduce((acc, [key, value], i) =>\n            Object.assign(\n                acc, { [key]: Math.round(value / userCount) }\n            ), { ...defaultValues, user: 'Peers', userCount }\n        )\n\n    const usersData = userData\n        .find(x => x.author === filterAuthor) || { approvalsGivenByTeam: {} }\n\n    const maxValues = userData\n        .reduce((parentAcc, user) => {\n            const withNumberValue = Object.entries(user)\n                .filter(([, value]) => !Array.isArray(value) && /^\\d+$/.test(value))\n\n            const upDateMaxValues = withNumberValue\n                .reduce((acc, [key, value]) => {\n                    const accVaue = parentAcc[key] || 0\n\n                    return Object.assign(acc, { [key]: accVaue > value ? accVaue : value })\n                }, {})\n\n            return Object.assign(parentAcc, upDateMaxValues)\n        }, defaultValues)\n\n    return {\n        averagedData,\n        maxValues,\n        users: userData,\n        user: filterAuthor\n            ? usersData\n            : {},\n    }\n}\n\nexport default formatRadarData","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { H } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport Radar from '../charts/Radar'\nimport formatRadarData from '../../format/radarData'\n\nconst radialChartsContributions = ({ maxValues = {}, users = [] }, isTeamPage) => {\n    const keys = [\n        'commentsGiven',\n        'commentsReceived',\n        'approvalsGiven',\n        'approvalsReceived',\n    ]\n\n    const topXUsers = isTeamPage\n        ? users\n        : users\n            .sort((a, b) => {\n                const aTotal = keys\n                    .reduce((acc, key) => acc + (a[key] || 0), 0)\n\n                const bTotal = keys\n                    .reduce((acc, key) => acc + (b[key] || 0), 0)\n                return bTotal - aTotal\n            })\n            .slice(0, 6)\n\n    const items = [\n        {\n            area: 'Code comments',\n            given: 'codeCommentsGiven',\n            received: 'codeCommentsReceived',\n        },\n        {\n            area: 'PR comments',\n            given: 'generalCommentsGiven',\n            received: 'generalCommentsReceived',\n        },\n        {\n            area: 'Approvals',\n            given: 'approvalsGiven',\n            received: 'approvalsReceived',\n        },\n    ]\n\n    const radarData = topXUsers\n        .map(user => {\n            const data = items\n                .map(({ area, given, received}) => {\n                    const givenOriginal = user[given] || 0\n                    const receivedOriginal = user[received] || 0\n\n                    return {\n                        area,\n                        given: givenOriginal\n                            ? (givenOriginal / (maxValues[given] || 0)) * 100\n                            : 0,\n                        received: receivedOriginal\n                            ? (receivedOriginal / (maxValues[received] || 0)) * 100\n                            : 0,\n                        givenOriginal,\n                        receivedOriginal,\n                    }\n                })\n\n            return {\n                title: user.author,\n                data,\n                keys: ['given', 'received'],\n            }\n        })\n\n    return radarData\n}\n\nconst UserTrends = ({\n    usersData = [],\n    userIds = [],\n} = {}) => {\n    const radarData = formatRadarData(usersData)\n    // const prRadars = radialChartsPRs(radarData)\n    const contributionsRadar = radialChartsContributions(radarData, userIds.length > 0)\n\n    return contributionsRadar.length > 0 && (\n        <Paper>\n            <ChartDescription\n                title={(\n                    <>\n                        <H level={2}>User's contributions</H>\n                        <H level={3}>Comments and approvals, <span style={{ color: '#1f77b4' }}>given</span> and <span style={{ color:'#e82573'}}>received</span></H>\n                    </>\n                )}\n                intro=\"This section shows how given and received metrics compare for the top contributors.\"\n            >\n            </ChartDescription>\n            {\n                contributionsRadar\n                    .map((info, i) => <Radar key={i} {...info} />)\n            }\n        </Paper>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    usersData: state.usersData,\n    userIds: state.fetches.userIds,\n})\n\nexport default connect(mapStateToProps)(UserTrends)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Paper from '../shared/Paper'\nimport Button from '../shared/Button'\nimport { H } from '../shared/StyledTags'\n\n\nimport { setUser as setUserAction } from '../../state/actions'\n\nconst UserList = ({\n    usersData = [],\n    setUser,\n    classes,\n} = {}) => usersData.length > 0 && (<>\n    <Paper className=\"justify\">\n        <H level={2} className={classes.fullW}>\n            User pages\n        </H>\n        <div className={classes.allButons}>\n            {\n                usersData\n                    .map(({ author }, i) => (\n                        <Button\n                            value={author}\n                            key={i}\n                            color=\"secondary\"\n                            onClick={(e) => {\n                                e.preventDefault()\n                                setUser(e.currentTarget.value)\n                                window && window.scrollTo(0, 0)\n                            }}\n                        />\n                    ))\n            }\n        </div>\n    </Paper>\n</>)\n\nconst mapDispatchToProps = dispatch => ({\n    setUser: (x) => dispatch(setUserAction(x)),\n})\n\nconst styles = theme => ({\n    'allButons': {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n        '& button': {\n            flexGrow: 1\n        }\n    },\n    'fullW': {\n        width: '100%',\n    },\n})\n\nconst mapStateToProps = (state) => ({\n    usersData: state.usersData,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UserList))","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { pick } from 'ramda'\nimport {\n    Select,\n    MenuItem,\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport ButtonWithMessage from './ButtonWithMessage'\nimport SelectAmountData from './SelectAmountData'\nimport TextInput from './TextInput'\n\nimport Download from './Download'\nimport ChartDescription from '../../shared/ChartDescription'\nimport { P } from '../../shared/StyledTags'\nimport styles from './styles'\nimport {\n    inputLabels,\n    formValue,\n    validateForm,\n} from './utils'\n\nimport {\n    storeToken,\n    storeAmountOfData,\n    storeFormUntilDate,\n    storeSortDirection,\n    getAPIData,\n    getDownloadProps,\n    checkUntilDate,\n} from '../../../state/actions'\n\nconst PrefetchedForm = (props) => {\n    const {\n        setValues,\n        getData,\n        fetches = {},\n        fetching,\n        classes,\n        userIds = [],\n    } = props\n\n    const reportType = userIds.length > 0\n        ? 'team'\n        : 'repo'\n\n    const inputKeys = [\n        'sortDirection',\n        'amountOfData',\n        'token',\n    ]\n\n    const inputs = pick(inputKeys, fetches)\n\n    const [formInfo, setFormInfo] = useState(inputs)\n    const [inputError, setInputError] = useState({})\n\n    const setValue = (key, value) => setFormInfo({\n        ...formInfo,\n        [key]: value\n    })\n\n    const inputStates = {\n        inputError,\n        setInputError,\n        formInfo,\n        setValue,\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        const {\n            isValid,\n            validationErrors,\n        } = validateForm(formInfo)\n\n        setInputError(validationErrors)\n\n        isValid && !fetching\n            && setValues(formInfo)\n\n        isValid && !fetching\n            && getData()\n    }\n\n    const reportKeys = reportType === 'repo'\n        ? ['org', 'repo']\n        : ['userIds', 'teamName']\n\n    const hardCodedKeys = [\n        ...reportKeys,\n        'excludeIds',\n        'enterpriseAPI',\n    ]\n\n    return (\n        <ChartDescription\n            className={`${classes.formDescription} ${classes.fullRow}`}\n            title=\"\"\n            expandText=\"here\"\n            intro=\"Top up this report's data\"\n        >\n            <div className={classes.formDescription} >\n                <form\n                    onSubmit={handleSubmit}\n                >\n                    <div className={classes.inputGrid}>\n                        <Select\n                            value={formInfo.sortDirection}\n                            onChange={(e) => setValue('sortDirection', e.target.value)}\n                            inputProps={{ 'aria-label': 'Starting point' }}\n                        >\n                            <MenuItem value=\"DESC\" >Prepend data</MenuItem>\n                            <MenuItem value=\"ASC\">Append data</MenuItem>\n                        </Select>\n                        <SelectAmountData setValue={setValue} amountOfData={formInfo.amountOfData} />\n                        <TextInput\n                            type=\"token\"\n                            { ...inputStates }\n                        />\n                        <P className=\"tokenText\">\n                            * To create a token go to your GitHub <a className={classes.link} href=\"https://github.com/settings/tokens\">tokens</a> page, click on 'generate new token', choose the settings 'repo' (all) and 'read:org' then click 'Generate token'.\n                        </P>\n                        {\n                            hardCodedKeys\n                                .filter((inputKey) => formValue(fetches, inputKey))\n                                .map((inputKey) => <P key={inputKey}>{inputLabels[inputKey]}: <b>{formValue(fetches, inputKey) || 'N/A'}</b></P>)\n                        }\n                    </div>\n                    <ButtonWithMessage />\n                </form>\n                <Download />\n            </div>\n        </ChartDescription>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    fetches: state.fetches,\n    fetching: state.fetching,\n    error: state.error,\n    pullRequests: state.pullRequests,\n    userIds: state.fetches.userIds,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setValues: (values) => {\n        const {\n            token,\n            amountOfData,\n            sortDirection\n        } = values\n\n        dispatch(checkUntilDate(sortDirection))\n        dispatch(storeToken(token))\n        dispatch(storeAmountOfData(amountOfData))\n        dispatch(storeSortDirection(sortDirection))\n        dispatch(storeFormUntilDate(amountOfData))\n    },\n    getData: (x) => dispatch(getAPIData(x)),\n    getDownloadInfo: () => dispatch(getDownloadProps),\n})\n\nexport default connect(mapStateToProps,\n    mapDispatchToProps)(withStyles(styles)(PrefetchedForm))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\nimport { always, cond, T, propSatisfies, where } from 'ramda'\n\nimport { H, P } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport PretetchedForm from '../home/DataOptions/PretetchedForm'\n\nconst RepoOrgCopy = ({ repo, org } = {}) => org === repo\n    ? (<span style={{ color: '#e82573' }}>{repo}</span>)\n    : (\n        <>\n            <span style={{ color: '#1f77b4' }}>{org}</span>/<span style={{ color: '#e82573' }}>{repo}</span>\n        </>\n    )\n\nconst TeamName = ({ teamName }) => <span style={{ color: '#e82573' }}>{teamName}</span>\n\nconst titleCopy = cond([\n    [\n        where({\n            org: Boolean,\n            repo: Boolean,\n        }),\n        RepoOrgCopy,\n    ],\n    [\n        propSatisfies(Boolean,'teamName'),\n        TeamName,\n    ],\n    [\n        T,\n        always('Report'),\n    ],\n])\n\nconst ReportDescription = ({\n    fetches = {},\n    preFetchedName = '',\n    pullRequests = [],\n    issues = [],\n    releases = [],\n    userIds = [],\n    classes\n} = {}) => {\n    const releaseCount = releases.length\n\n    const hasReportData = pullRequests.length > 0 || issues.length > 0\n\n    return hasReportData && (<Paper className={classes.root}>\n            <H className={classes.heading} level={2}>\n                {\n                    titleCopy(fetches)\n                }\n            </H>\n            {\n                userIds.length > 0\n                    && <P>\n                        {\n                            userIds.join(', ')\n                        }\n                    </P>\n            }\n            <P>{pullRequests.length > 0 && `Pull requests: ${pullRequests.length}`}{ issues.length > 0 && `, Issues: ${issues.length}`}{ releaseCount > 0 && `, Releases: ${releaseCount}`}</P>\n           {\n              preFetchedName.length > 0\n                && <PretetchedForm />\n           }\n        </Paper>)\n}\n\nconst mapStateToProps = (state) => ({\n    fetches: state.fetches,\n    preFetchedName: state.preFetchedName,\n    pullRequests: state.pullRequests,\n    issues: state.issues,\n    releases: state.releases,\n    userIds: state.fetches.userIds,\n})\n\nconst styles = theme => ({\n    root: {\n        display: 'block'\n    },\n    heading: theme.copy.h1,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(ReportDescription))\n","import React from 'react'\n\nimport PullRequestTrends from './sections/PullRequestTrends'\nimport IssuesTrends from './sections/IssuesTrends'\nimport TeamTrends from './sections/TeamTrends'\nimport UserTrends from './sections/UserTrends'\nimport UserList from './sections/UserList'\nimport ReportDescription from './sections/ReportDescription'\n\nconst RepoView = () => <>\n    <ReportDescription />\n    <TeamTrends />\n    <PullRequestTrends />\n    <IssuesTrends />\n    <UserTrends />\n    <UserList />\n</>\n\nexport default RepoView\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { H, P, UL, LI } from './shared/StyledTags'\nimport ChartDescription from './shared/ChartDescription'\nimport Button from './shared/Button'\nimport Paper from './shared/Paper'\nimport Radar from './charts/Radar'\nimport Bar from './charts/Bar'\nimport Line from './charts/Line'\n\nimport colors from './colors'\nimport { clearUser } from '../state/actions'\nimport formatRadarData from '../format/radarData'\n\nconst colourA = '#1f77b4'\nconst colourB = '#e82573'\n\nconst userRadars = (\n    {\n        averagedData,\n        maxValues,\n        user,\n    },\n    userName\n) => {\n    const items = [\n        {\n            area: 'Code comments',\n            dataKey: 'codeCommentsGiven',\n        },\n        {\n            area: 'PR comments',\n            dataKey: 'generalCommentsGiven',\n        },\n        {\n            area: 'Approvals',\n            dataKey: 'approvalsGiven',\n        },\n        {\n            area: 'Merged PRs',\n            dataKey: 'totalPRs',\n        },\n        {\n            area: 'PR size',\n            dataKey: 'prSize',\n        },\n    ]\n\n    const getRadarData = items => items\n        .map(({ area, dataKey }) => {\n            const originalUser = user[dataKey] || 0\n            const peersOriginal = averagedData[dataKey] || 0\n            const maxValue = maxValues[dataKey] || 0\n\n            return {\n                area,\n                [userName]: (originalUser / maxValue) * 100,\n                peers: (peersOriginal / maxValue) * 100,\n                [`${userName}Original`]: originalUser,\n                peersOriginal,\n            }\n        })\n\n    const radars = [\n        {\n            data: getRadarData(items),\n            titleItems: [\n                { label: userName, color: colourA },\n                { label: 'Peers', color: colourB },\n            ],\n            keys: [userName, 'peers'],\n            width: 400,\n            height: 235,\n        },\n    ]\n\n    return radars\n}\n\nconst userBars = ({\n    averagedData,\n    user,\n}) => {\n    const averageAndUserData = [user, averagedData]\n\n    return [\n        {\n            bars:[\n                {\n                    dataKey: 'commentsGiven',\n                    color: colourA,\n                    label: 'Comments given',\n                },\n                {\n                    dataKey: 'commentsReceived',\n                    color: colourB,\n                    label: 'Comments received',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'approvalsGiven',\n                    color: colourA,\n                    label: 'Approvals given',\n                },\n                {\n                    dataKey: 'approvalsReceived',\n                    color: colourB,\n                    label: 'Approvals received',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'totalPRs',\n                    color: colourA,\n                    label: 'Opened PRs',\n                },\n                {\n                    dataKey: 'uniquePRsApproved',\n                    color: colourB,\n                    label: 'PRs approved',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'prSize',\n                    color: colourA,\n                    label: 'PR size',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'age',\n                    color: colourB,\n                    label: 'PR age',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n    ]\n}\n\nconst userGraphs = (data = [], releases = [], userName) => {\n    const mergedPrData = data\n        .filter(({ mergedAt } = {}) => mergedAt)\n\n    const peerPrData = mergedPrData\n        .filter(({ author }) => author !== userName)\n\n    const userPrData = mergedPrData\n        .filter(({ author }) => author === userName)\n\n    return [\n        {\n            markers: releases,\n            showLegends: true,\n            title: 'Sentiments in PR',\n            data: [{\n                lines: [\n                    {\n                        label: `${userName} received`,\n                        color: colors[2],\n                        dataKey: 'commentSentimentScore',\n                        data: userPrData,\n                    },\n                    {\n                        label: `${userName} given`,\n                        color: colors[1],\n                        dataKey: 'commentAuthorSentimentScore',\n                        data: userPrData,\n                    },\n                    {\n                        label: 'Peer received',\n                        color: colors[4],\n                        dataKey: 'commentSentimentScore',\n                        data: peerPrData,\n                    },\n                    {\n                        label: 'Peer given',\n                        color: colors[5],\n                        dataKey: 'commentAuthorSentimentScore',\n                        data: peerPrData,\n                    },\n                ],\n                xAxis: 'left',\n            }],\n        },\n        {\n            markers: releases,\n            data: [{\n                lines: [\n                    {\n                        label: 'User comments',\n                        color: colourA,\n                        dataKey: 'commentsGiven',\n                        data: userPrData,\n                    },\n                    {\n                        label: 'Peer Comments',\n                        color: colourB,\n                        dataKey: 'commentsGiven',\n                        data: peerPrData,\n                    },\n                ],\n                xAxis: 'left',\n            }],\n        },\n        {\n            markers: releases,\n            data: [{\n                lines: [\n                    {\n                        label: 'User PR size',\n                        color: colourA,\n                        dataKey: 'prSize',\n                        data: userPrData,\n                    },\n                    {\n                        label: 'Peer PR size',\n                        color: colourB,\n                        dataKey: 'prSize',\n                        data: peerPrData,\n                    },\n                ],\n                xAxis: 'left',\n            }],\n        },\n        {\n            markers: releases,\n            data: [{\n                lines: [\n                    {\n                        label: 'User PR age',\n                        color: colourA,\n                        dataKey: 'age',\n                        data: userPrData,\n                    },\n                    {\n                        label: 'Peer PR age',\n                        color: colourB,\n                        dataKey: 'age',\n                        data: peerPrData,\n                    },\n                ],\n                xAxis: 'left',\n            }],\n        },\n    ]\n}\n\nconst UserView = ({\n    pullRequests = [],\n    releases = [],\n    usersData = [],\n    user,\n    removeUser,\n    classes,\n} = {}) => {\n    const radarData = formatRadarData(usersData, user)\n    const radars = userRadars(radarData, user)\n    const bars = userBars(radarData)\n    const graphs = userGraphs(pullRequests, releases, user)\n\n    return (\n        <>\n            <Paper>\n                <ChartDescription\n                    title={\n                        <H level={2}>\n                            <span style={{ color: colourA }}>{user}</span>\n                            <Button\n                                className={classes.topButton}\n                                variant=\"outlined\"\n                                size=\"small\"\n                                value=\"Back to main view\"\n                                color=\"secondary\"\n                                onClick={(e) => {\n                                    e.preventDefault()\n                                    removeUser()\n                                }} />\n                        </H>\n                    }\n                    intro={`A collection of charts showing ${user} and average data from the top ${radarData.averagedData.userCount} peers`}\n                />\n\n                {\n                    radars.length\n                        && (\n                            <div className={classes.groupedCharts}>\n                                {\n                                    radars\n                                        .map((info, i) => <Radar key={i} {...info} />)\n                                }\n                            </div>\n                        )\n                }\n                {\n                    bars.length\n                        && bars\n                            .map((info, i) => <Bar key={i} {...info} />)\n                }\n                {\n                    graphs.length\n                        && graphs\n                            .map((info, i) => <Line key={i} {...info} />)\n                }\n\n                <Button\n                    className={classes.fill}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value=\"Back to main view\"\n                    color=\"secondary\"\n                    onClick={(e) => {\n                        e.preventDefault()\n                        removeUser()\n                        window && window.scrollTo(0, 0)\n                    }} />\n            </Paper>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    releases: state.releases,\n    usersData: state.usersData,\n    user: state.user,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    removeUser: (x) => dispatch(clearUser(x)),\n})\n\nconst styles = theme => ({\n    'groupedCharts': {\n        width: '100%',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n    },\n    fill: {\n        flexBasis: '100%',\n    },\n    topButton: {\n        marginLeft: theme.mySpacing.y.large,\n    },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UserView))","import React from 'react'\nimport { ResponsivePie } from '@nivo/pie'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\n\nconst Pie = styledCharts(({\n    title,\n    data = [],\n    classes,\n} = {}) => {\n    const theme = useTheme();\n\n    return data.length && (\n        <div className={classes.lineChartComponentWrap}>\n            <div className={classes.headingWrap}>\n                <ChartHeading type='line' text={title} />\n            </div>\n\n            <div className={classes.pieWrap}>\n                <ResponsivePie\n                    data={data}\n                    colors={{ datum: 'data.color' }}\n                    margin={{ top: 5, right: 80, bottom: 5, left: 80 }}\n                    animate={false}\n                    innerRadius={0.65}\n                    padAngle={1}\n                    cornerRadius={4}\n                    activeOuterRadiusOffset={5}\n                    borderWidth={1}\n                    startAngle={-90}\n                    endAngle={90}\n                    enableArcLabels={false}\n                    arcLinkLabelsSkipAngle={4}\n                    arcLinkLabelsThickness={2}\n                    arcLinkLabelsColor={{ from: 'color' }}\n                    arcLabelsSkipAngle={10}\n                    arcLinkLabelsDiagonalLength={10}\n                    arcLinkLabelsStraightLength={15}\n                    arcLinkLabelsTextColor={theme.palette.text.primary}\n                    // legends={legends}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Pie","import React from 'react'\nimport { connect } from 'react-redux'\nimport { includes, splitAt } from 'ramda'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartDescription from '../shared/ChartDescription'\nimport Line from '../charts/Line'\nimport Pie from '../charts/Pie'\nimport Paper from '../shared/Paper'\nimport colors from '../colors'\n\nconst RepoSplit = ({\n    pullRequests = [],\n} = {}) => {\n    const theme = useTheme();\n\n    const allRepos = {}\n    const allPRdata = pullRequests.map(prData => {\n        allRepos[prData.repo] =  (allRepos[prData.repo] || 0) + 1\n        return ({\n            ...prData,\n            [`repo-${prData.repo}`]: 1,\n        })\n    })\n\n    const sortedRepoData = Object.entries(allRepos)\n        .sort(([,a],[,b]) => a - b)\n\n    const topRepos = sortedRepoData.slice(-20)\n\n    const uniqueRepos = sortedRepoData.length > 19\n        ? topRepos.map(([repo]) => repo)\n        : Object.keys(allRepos)\n\n    const pieData = topRepos\n        .map(([repo, value], i) => ({\n            id: repo,\n            label: repo,\n            color: colors[i % colors.length],\n            value: value,\n        }))\n\n    const filteredPRData = allPRdata\n        .filter(({ repo = ''} = {}) => includes(repo, uniqueRepos))\n\n    const sectionTitle = sortedRepoData.length > uniqueRepos.length\n        ? `PRs split by top 20 of ${sortedRepoData.length} repositories`\n        : `PRs split by repository (${uniqueRepos.length} repos)`\n\n    const lines = uniqueRepos\n        .map((repo, i) => ({\n            label: repo,\n            color: colors[i % colors.length],\n            dataKey: `repo-${repo}`,\n            groupMath: 'count',\n        }))\n\n    const [leftData, rightData] = lines.length > 10\n        ? splitAt(Math.ceil(lines.length/2),lines)\n        :[lines, []]\n\n    const legends = [\n        {\n            data: leftData,\n            anchor: 'top-left',\n            direction: 'column',\n            justify: false,\n            translateX: 10,\n            translateY: 10,\n            itemsSpacing: 0,\n            itemDirection: 'left-to-right',\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 1,\n            symbolSize: 12,\n            symbolShape: 'square',\n            symbolBorderColor: 'rgba(0, 0, 0, .9)',\n            toggleSerie: true,\n            itemTextColor: theme.palette.text.primary,\n        },\n        {\n            data: rightData,\n            anchor: 'top-right',\n            direction: 'column',\n            justify: false,\n            translateX: -10,\n            translateY: 10,\n            itemsSpacing: 0,\n            itemDirection: 'right-to-left',\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 1,\n            symbolSize: 12,\n            symbolShape: 'square',\n            symbolBorderColor: 'rgba(0, 0, 0, .9)',\n            toggleSerie: true,\n            itemTextColor: theme.palette.text.primary,\n        }\n    ]\n\n    return (<>\n        <Paper>\n            <ChartDescription title={sectionTitle} />\n            <Pie\n                data={pieData}\n                title=\"PR repository rainbow\"\n            />\n            <Line\n                title=\"Repository PRs over time\"\n                legends={legends}\n                showLegends={true}\n                data={[\n                    {\n                        lines,\n                        xAxis: 'left',\n                        data: filteredPRData,\n                    },\n                ]}\n            />\n        </Paper>\n    </>)\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n})\n\nexport default connect(mapStateToProps)(RepoSplit)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\nimport { useTheme } from '@material-ui/core/styles';\nimport { splitAt } from 'ramda'\n\nimport Line from '../charts/Line'\nimport Paper from '../shared/Paper'\nimport colors from '../colors'\nimport ChartDescription from '../shared/ChartDescription'\nimport { P } from '../shared/StyledTags'\n\n\nconst Sentiment = ({\n    pullRequests = [],\n    userIds = [],\n    classes = {}\n} = {}) => {\n    const theme = useTheme();\n\n    const sentPRData = pullRequests.map(prData => ({\n        ...prData,\n        [`${prData.author}-commentsSentimentScore`]: prData.commentSentimentScore,\n        [`${prData.author}-commentAuthorSentimentScore`]: prData.commentAuthorSentimentScore,\n    }))\n\n    const lines = userIds\n        .map((userId, i) => ([\n            {\n                label: `To ${userId}`,\n                color: colors[i % colors.length],\n                dataKey: `${userId}-commentsSentimentScore`,\n            },\n            {\n                label: `From ${userId}`,\n                color: colors[i % colors.length],\n                dataKey: `${userId}-commentAuthorSentimentScore`,\n            }\n        ]))\n        .flat()\n\n    const [leftLines, rightLines] = lines.length > 10\n        ? splitAt(Math.ceil(lines.length/2),lines)\n        :[lines, []]\n\n    const showLegends = userIds.length > 10\n        ? false\n        : true\n\n    const legends = showLegends\n        ? [\n            {\n                data: leftLines,\n                anchor: 'top-left',\n                direction: 'column',\n                justify: false,\n                translateX: 10,\n                translateY: 10,\n                itemsSpacing: 0,\n                itemDirection: 'left-to-right',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 1,\n                symbolSize: 12,\n                symbolShape: 'square',\n                symbolBorderColor: 'rgba(0, 0, 0, .9)',\n                toggleSerie: true,\n                itemTextColor: theme.palette.text.primary,\n            },\n            {\n                data: rightLines,\n                anchor: 'top-right',\n                direction: 'column',\n                justify: false,\n                translateX: -10,\n                translateY: 10,\n                itemsSpacing: 0,\n                itemDirection: 'right-to-left',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 1,\n                symbolSize: 12,\n                symbolShape: 'square',\n                symbolBorderColor: 'rgba(0, 0, 0, .9)',\n                toggleSerie: true,\n                itemTextColor: theme.palette.text.primary,\n            }\n        ]\n        : []\n\n    return (<>\n        <Paper>\n            <ChartDescription\n                title=\"Sentiment analysis*\"\n            >\n                <div>\n                    <P>*Adding this is an experiment to see if it can provide useful insights.</P>\n                    <P>Uses npm package <a className={classes.link} href=\"https://github.com/thisandagain/sentiment\" alt=\"sentiment github package\">sentiment</a> which uses AFINN-165 word list and Emoji ranking to perform sentiment analysis.</P>\n                    <P>Would like to look into AI sentiment analysis later down the line.</P>\n                </div>\n            </ChartDescription>\n            <Line\n                showLegends={true}\n                title=\"Sentiment in PRs between team and reviewers\"\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'To team',\n                                color: colors[0],\n                                dataKey: 'commentSentimentScore',\n                            },\n                            {\n                                label: 'From team',\n                                color: colors[1],\n                                dataKey: 'commentAuthorSentimentScore',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data: sentPRData,\n                    },\n                ]}\n            />\n            <Line\n                showLegends={showLegends}\n                legends={legends}\n                title=\"Sentiment in PRs between authors and reviewers\"\n                data={[\n                    {\n                        lines,\n                        xAxis: 'left',\n                        data: sentPRData,\n                    },\n                ]}\n            />\n        </Paper>\n    </>)\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    userIds: state.fetches.userIds,\n})\n\nconst styles = theme => ({\n    link: {\n        color: theme.palette.link,\n    },\n})\nexport default connect(mapStateToProps)(withStyles(styles)(Sentiment))\n","import React from 'react'\n\nimport PullRequestTrends from './sections/PullRequestTrends'\nimport IssuesTrends from './sections/IssuesTrends'\nimport TeamTrends from './sections/TeamTrends'\nimport UserTrends from './sections/UserTrends'\nimport UserList from './sections/UserList'\nimport RepoSplit from './sections/RepoSplit'\nimport Sentiment from './sections/Sentiment'\nimport ReportDescription from './sections/ReportDescription'\n\nconst Team = () => <>\n    <ReportDescription />\n    <TeamTrends />\n    <Sentiment />\n    <RepoSplit />\n    <PullRequestTrends />\n    <IssuesTrends />\n    <UserTrends />\n    <UserList />\n</>\n\nexport default Team\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n    cond,\n    always,\n    propSatisfies,\n    T as alwaysTrue,\n} from 'ramda'\nimport RepoView from '../Repo'\nimport UserView from '../User'\nimport TeamView from '../Team'\n\nconst Visualisation = (props) => (\n    <div>\n        {\n            cond([\n                [propSatisfies(Boolean, 'user'), always(<UserView />)],\n                [propSatisfies(Boolean, 'teamName'), always(<TeamView />)],\n                [alwaysTrue, always(<RepoView />)],\n            ])(props)\n        }\n    </div>\n)\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    teamName: state.fetches.teamName,\n})\n\nexport default connect(mapStateToProps)(Visualisation)","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst CoreWrapper = ({ classes, children }) => <div className={classes.wrapper}>{children}</div>\n\nconst styles = theme => ({\n    '@global': {\n        'body': {\n            margin: 0,\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    wrapper: {\n        padding: 0,\n        backgroundColor: theme.palette.background.default,\n        overflow: 'auto',\n    },\n})\n\nexport default withStyles(styles)(CoreWrapper)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Brightness3 from '@material-ui/icons/Brightness3';\nimport WbSunny from '@material-ui/icons/WbSunny';\n\nimport { toggleTheme } from '../../state/actions'\n\nconst Links = ({ classes, themeType, themeToggle }) => {\n    return (\n        <div className={classes.wrapper} >\n            <a alt=\"My Twitter page\" className={classes.link} href=\"https://twitter.com/chris_07734\">\n                <TwitterIcon className={classes.icon} />\n            </a>\n            <a alt=\"Github repo page\" className={classes.link} href=\"https://github.com/n07734/community-health\">\n                <GitHubIcon className={classes.icon} />\n            </a>\n            <a\n                href=\"#theme\"\n                alt=\"Change theme\"\n                onClick={(e) => {\n                    e.preventDefault()\n                    themeToggle()\n                }}\n                className={themeType}\n            >\n                <WbSunny className={`${classes.icon} sun`} />\n                <Brightness3 className={`${classes.icon} moon`} />\n            </a>\n        </div>\n    );\n};\n\nconst styles = theme => ({\n    wrapper: {\n        position: 'absolute',\n        top: theme.mySpacing.x.small,\n        right: theme.mySpacing.x.small,\n        '& > a': {\n            marginLeft: theme.mySpacing.x.small\n        },\n        '& a:hover $icon': {\n            color: theme.palette.iconHover\n        },\n        '& .dark .moon': {\n            display: 'none'\n        },\n        '& .dark:hover .moon': {\n            display: 'inline'\n        },\n        '& .dark:hover .sun': {\n            display: 'none'\n        },\n        '& .light .sun': {\n            display: 'none'\n        },\n        '& .light:hover .sun': {\n            display: 'inline'\n        },\n        '& .light:hover .moon': {\n            display: 'none'\n        },\n    },\n    icon: {\n        color: theme.palette.text.primary,\n    }\n})\n\nconst mapStateToProps = (state) => ({\n    themeType: state.themeType,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    themeToggle: (x) => dispatch(toggleTheme(x)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Links))\n","import React from 'react'\n\nimport { H, P } from '../shared/StyledTags'\nimport ChartDescription from '../shared/ChartDescription'\nimport Paper from '../shared/Paper'\nimport DataOptions from './DataOptions'\nimport Visualisation from './Visualisation'\nimport PageWrapper from './PageWrapper'\nimport Links from './Links'\n\nconst Page = () => (\n    <PageWrapper>\n        <Paper className=\"bg-none\">\n            <Links />\n            <ChartDescription\n                title={(\n                    <H level={1}>Code Community Health</H>\n                )}\n                intro=\"The aim of this tool is to help teams learn from their contribution trends. Also to see the contribution trends of popular repositories and teams\"\n            >\n                <div>\n                    <P>This tool is not a 'lines of code' metric, it contains in depth contribution based metrics meant to help teams find good and bad trends. Also helps show if changes to ways of working have an impact over time. Understanding of the team's way of working is needed to get the full value from this data.</P>\n                    <P>Context is king, data that looks 'good' might be 'bad' and data that looks 'bad' might be 'good'. For example little feedback in PRs may be expected if the team is doing small changes in an established code base or not getting enough feedback working on a greenfield project.</P>\n                </div>\n            </ChartDescription>\n        </Paper>\n        <>\n            <DataOptions />\n            <Visualisation />\n        </>\n    </PageWrapper>\n)\n\nexport default Page\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport { H, P } from './shared/StyledTags'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport {\n    always,\n    cond,\n    equals,\n    T as alwaysTrue\n} from 'ramda'\n\nconst styles = theme => ({\n    'root': {\n        position: 'relative',\n    },\n    'modal': {\n        position: 'fixed',\n        width: '80%',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        zIndex: 1000,\n        backgroundColor: theme.palette.background.paper,\n        padding: `${theme.mySpacing.x.large} ${theme.mySpacing.y.large}`,\n        '& .MuiLinearProgress-dashed': {\n            background: 'none',\n            backgroundColor: '#b10e4f',\n            animation: 'none',\n        },\n        '& .MuiLinearProgress-root': {\n            height: '14px',\n            marginBottom: theme.mySpacing.y.large,\n        }\n    },\n    'overlay': {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 999,\n        backgroundColor: '#b10e4f',\n        animation: 'pulse 1s infinite alternate',\n        opacity: 0.6,\n    },\n    '@keyframes pulse': {\n        '100%': {\n            opacity: 0.9,\n        },\n    }\n})\n\nconst daysRemainingText = cond([\n    [equals(1), x => `${x} day remaining`],\n    [x => x > 1 , x => `${x} days remaining`],\n    [x => x < 0 , always('Wrapping up')],\n    [alwaysTrue, always('')],\n])\n\nconst Loader = ({\n    fetches = {},\n    fetching = false,\n    fetchStatus = {},\n    pullRequests: pastPRs = [],\n    formUntilDate = '',\n    classes = {},\n} = {}) => {\n    const {\n        userIds = [],\n        sortDirection = '',\n    } = fetches\n\n    const {\n        user = '',\n        prCount = 0,\n        latestItemDate = '',\n        issueCount = 0,\n        savedReportName = '',\n    } = fetchStatus\n\n    const isTeamSearch = userIds.length > 0\n\n    const dayDiff = (a,b) => sortDirection === 'DESC'\n        ? differenceInDays(a, b)\n        : differenceInDays(b, a)\n\n    const prIndex = sortDirection === 'DESC'\n        ? 0\n        : -1\n\n    const startDate = pastPRs.length > 0\n        ? new Date(pastPRs.at(prIndex).mergedAt)\n        : new Date()\n\n    const uptoDate = latestItemDate\n        ? new Date(latestItemDate)\n        : startDate\n\n    const untilDate = new Date(formUntilDate)\n\n    const daysTotal = dayDiff(startDate, untilDate)\n    const daysLoaded = dayDiff(startDate, uptoDate)\n    const daysRemaining = daysTotal - daysLoaded\n    const oneDayPercent = 100 / (daysTotal || 10)\n    const loadedPercent = (daysLoaded * oneDayPercent)\n\n    const usersPosition = user\n        ? userIds.findIndex(x => x === user)\n        : 0\n\n    const loadedUsers = usersPosition > 0\n        ? userIds.slice(0, usersPosition)\n        : []\n\n    const oneUserPercent = 100 / (userIds.length || 10)\n    const loadedUserPercent = (usersPosition * oneUserPercent)\n\n    return (\n        fetching && <div>\n            <div className={ classes.overlay }></div>\n            <div className={ classes.modal }>\n                {\n                    isTeamSearch\n                        && <>\n                            <H level={2}>\n                                Loading {usersPosition + 1} of {userIds.length} {userIds.length === 1 ? 'user' : 'users'}\n                            </H>\n                            <LinearProgress className={classes.dashed} variant=\"determinate\" value={loadedUserPercent} valueBuffer={oneUserPercent + loadedUserPercent}/>\n                        </>\n                }\n                <H level={2}>\n                    {daysRemainingText(daysRemaining)}\n                </H>\n                {\n                    savedReportName\n                        && <>\n                            <H level={2}>\n                                Fetching {savedReportName}\n                            </H>\n                        </>\n                }\n                <LinearProgress className={classes.dashed} variant=\"determinate\" value={loadedPercent} valueBuffer={oneDayPercent + loadedPercent}/>\n                {\n                    !savedReportName\n                        && !isTeamSearch\n                        && <>\n                            <H level={2}>\n                                {prCount} Pull Requests\n                            </H>\n                            <H level={2}>\n                                {issueCount} Issues\n                            </H>\n                        </>\n                }\n                {\n                    isTeamSearch\n                        && loadedUsers.length > 0\n                        && <>\n                            <P>\n                                Loaded users: {loadedUsers.join(', ')}\n                            </P>\n                        </>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    fetches: state.fetches,\n    fetching: state.fetching,\n    fetchStatus: state.fetchStatus,\n    pullRequests: state.pullRequests,\n    formUntilDate: state.formUntilDate,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(Loader))\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport { pathOr } from 'ramda'\n\nimport theme from './theme'\nimport Page from './components/home/Page'\nimport Loader from './components/Loader'\nimport * as actions from './state/actions'\n\nconst App = ({\n    themeType,\n    setReposUserId\n} = {}) => {\n    useEffect(() => {\n        const quertString = pathOr('', ['location', 'search'], window)\n        const urlParams = new URLSearchParams(quertString);\n        const user = urlParams.get('user') || '';\n\n        setReposUserId(user)\n    }, [setReposUserId])\n\n    return (\n        <MuiThemeProvider theme={theme(themeType)}>\n            <Loader />\n            <Page />\n        </MuiThemeProvider>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    themeType: state.themeType,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setReposUserId: (x) => dispatch(actions.setUser(x)),\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App)\n","import { combineReducers } from 'redux'\nimport types from './types'\n\nconst setClear = startValue => (storKey, clearKey) => (current = startValue, action) => {\n    const newValue = ({\n        [types[storKey]]: () => action.payload,\n        [types[clearKey]]: () => startValue,\n    })[action.type]\n\n    return newValue\n        ? newValue()\n        : current\n}\n\nconst setClearString = setClear('')\nconst setClearArray = setClear([])\nconst setClearPagination = setClear({ hasNextPage: true })\n\nconst reducers = combineReducers({\n    user: setClearString('SET_USER', 'CLEAR_USER'),\n    fetches: combineReducers({\n        token: (token = '', action) => (action.type === types.STORE_TOKEN)\n            ? action.payload\n            : token,\n        org: setClearString('STORE_ORG', 'CLEAR_ORG'),\n        repo: setClearString('STORE_REPO', 'CLEAR_REPO'),\n        teamName: setClearString('SET_TEAM_NAME', 'CLEAR_TEAM_NAME'),\n        untilDate: setClearString('STORE_UNTIL_DATE', 'CLEAR_UNTIL_DATE'),\n        amountOfData: (amountOfData = 1, action) => (action.type === types.STORE_AMOUNT)\n            ? action.payload\n            : amountOfData,\n        sortDirection: (sortDirection = 'DESC', action) => (action.type === types.STORE_SORT)\n            ? action.payload\n            : sortDirection,\n        enterpriseAPI: (enterpriseAPI = '', action) => (action.type === types.STORE_ENT_URL)\n            ? action.payload\n            : enterpriseAPI,\n        userIds: setClearArray('STORE_USER_IDS', 'CLEAR_USER_IDS'),\n        excludeIds: setClearArray('STORE_EX_IDS', 'CLEAR_EX_IDS'),\n        prPagination: setClearPagination('SET_PR_PAGINATION', 'CLEAR_PR_PAGINATION'),\n        releasesPagination: setClearPagination('SET_RELEASES_PAGINATION', 'CLEAR_RELEASES_PAGINATION'),\n        issuesPagination: setClearPagination('SET_ISSUES_PAGINATION', 'CLEAR_ISSUES_PAGINATION'),\n    }),\n    formUntilDate: setClearString('STORE_FORM_UNTIL_DATE', 'CLEAR_FORM_UNTIL_DATE'),\n    fetching: (fetching = false, action) => [\n        action.type === types.FETCH_START\n            && (() => true),\n        action.type === types.FETCH_END\n            && (() => false),\n        () => fetching,\n    ]\n        .find(Boolean)(),\n    fetchStatus: (fetchStatus = {}, action) => action.type === types.FETCH_STATUS\n        ? action.payload\n        : fetchStatus,\n    error: setClearString('FETCH_ERROR', 'CLEAR_FETCH_ERROR'),\n    preFetchedError: setClearString('PRE_FETCH_ERROR', 'CLEAR_PRE_FETCH_ERROR'),\n    preFetchedName: setClearString('PREFETCHED_NAME', 'CLEAR_PREFETCHED_NAME'),\n    pullRequests: (prs = [], action) => [\n        action.type === types.ADD_PRS\n            && action.payload,\n        action.type === types.CLEAR_PRS && [],\n        prs,\n    ].find(Boolean),\n    filteredPRs: (filteredPRs = [], action) => [\n        action.type === types.ADD_FILTERED_PRS\n            && action.payload,\n        action.type === types.CLEAR_FILTERED_PRS && [],\n        filteredPRs,\n    ].find(Boolean),\n    usersData: (users = [], action) => [\n        action.type === types.ADD_USERS_DATA\n            && action.payload,\n        action.type === types.CLEAR_USERS_DATA && [],\n        users,\n    ].find(Boolean),\n    issues: (issues = [], action) => [\n        action.type === types.ADD_ISSUES\n            && action.payload,\n        action.type === types.CLEAR_ISSUES && [],\n        issues,\n    ].find(Boolean),\n    filteredIssues: (filteredIssues = [], action) => [\n        action.type === types.ADD_FILTERED_ISSUES\n            && action.payload,\n        action.type === types.CLEAR_FILTERED_ISSUES && [],\n        filteredIssues,\n    ].find(Boolean),\n    releases: (releases = [], action) => [\n        action.type === types.ADD_RELEASES\n            && releases.concat(action.payload),\n        action.type === types.CLEAR_RELEASES && [],\n        releases,\n    ].find(Boolean),\n    themeType: (themeType = 'dark', action) =>\n        action.type === types.TOGGLE_THEME\n            ? (themeType === 'dark' ? 'light' : 'dark')\n            : themeType,\n})\n\nexport default reducers\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createStore, applyMiddleware, compose } from 'redux'\n\nimport App from './App'\nimport reducers from './state/reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunk)\n))\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}