{"version":3,"sources":["../node_modules/sentiment/languages sync /^/.//.*//index$","format/rawData.js","theme.js","components/shared/StyledTags.js","components/shared/ChartDescription.js","components/shared/Paper.js","api/batch.js","format/filterByUntilDate.js","api/queries.js","api/fillers.js","state/types.js","api/api.js","api/getUsersData.js","api/getUntilDate.js","utils.js","format/lightenData.js","format/userData.js","state/actions.js","components/shared/Button.js","components/home/Message.js","components/home/DataOptions/styles.js","preFetchedInfo.js","components/home/DataOptions/PrefetchedOptions.js","components/home/DataOptions/SelectAmountData.js","components/home/DataOptions/utils.js","components/home/DataOptions/ButtonWithMessage.js","components/home/DataOptions/TextInput.js","components/home/DataOptions/Download.js","components/home/DataOptions/FormSection.js","components/home/DataOptions/index.js","components/colors.js","components/charts/ChartHeading.js","components/charts/styledCharts.js","components/charts/batchBy.js","components/charts/lineHelpers.js","components/charts/Line.js","components/sections/ItemsTable.js","components/sections/PullRequestTrends.js","components/charts/GraphUi.js","components/sections/PullRequestCustom.js","components/sections/IssuesTrends.js","components/charts/hasChartData.js","components/charts/Bar.js","format/chordData.js","components/charts/Chord.js","components/sections/TeamTrends.js","components/sections/Sentiment.js","components/charts/Radar.js","format/radarData.js","components/sections/UserTrends.js","components/sections/UserList.js","components/home/DataOptions/PretetchedForm.js","components/sections/ReportDescription.js","components/Repo.js","components/User.js","components/charts/Pie.js","components/sections/RepoSplit.js","components/Team.js","components/home/Visualisation.js","components/home/PageWrapper.js","components/home/Links.js","components/home/Page.js","components/Loader.js","App.js","state/reducers.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","paths","themeColor","type","light","dark","themeColorBg","fontFamily","fontSize","defaultCopy","color","marginTop","marginBottom","fontWeight","markerSettings","legendOrientation","legendPosition","height","legendOffsetX","legendOffsetY","spacing","x","tiny","small","medium","large","y","theme","createTheme","palette","secondary","contrastText","main","primary","mainCopy","groupedCharts","width","display","flexWrap","justifyContent","iconHover","text","link","background","default","paper","shadow","switch","typography","useNextVariants","mySpacing","copy","body","lineHeight","list","listItem","h4","h3","h2","h1","charts","textColor","crosshair","line","stroke","axis","legend","fill","ticks","legends","hidden","symbol","opacity","legendsTextFill","dotColor","tooltip","container","boxShadow","grid","markers","lineStyle","strokeWidth","textStyle","tertiary","strokeDasharray","styles","p","A","withStyles","className","href","classes","children","P","H","level","styleAs","props","hClassName","Tag","ExpandLink","setCount","toggle","expandText","onClick","preventDefault","root","flexGrow","rootRows","flexBasis","linkMargin","marginLeft","heading","wrapperFlex","title","intro","useState","Collapse","in","padding","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","position","flexDirection","classNames","runBatchQueue","batches","job","resolved","Promise","reject","currentBatch","remainingBatches","all","j","then","results","length","more","concat","catch","batch","argsList","batchSize","splitEvery","filterByUntilDate","datePath","order","untilDate","item","itemsDateValue","pathOr","itemsDate","Date","until","isAfter","isBefore","cursorQ","cursor","key","getCursor","oldest","newest","pageInfo","comments","pullRequests","pagination","reviews","issues","getPaginationByType","oldFetchInfo","data","hasNextPage","startCursor","endCursor","items","dateKey","filteredItems","isDate","filter","typeStateMap","releases","oldestDefault","oldestCurrent","newestDefault","newestCurrent","dateFilteredLength","tryNextPage","cond","always","alwaysFalse","alwaysTrue","hasNextPageForDate","getRemainingPageCount","sort","a","b","maxItems","Math","ceil","userQuery","user","sortDirection","amountOfData","issuesPagination","prPagination","query","resultInfo","byType","updatedAmountOfData","Number","isInteger","nextPageInfo","hasNextPageKey","values","some","hasMoreResults","batchedQuery","org","repo","releasesPagination","fillerType","commentsQuery","nodeId","rawData","nextArgs","reviewsQuery","reviewCommentsQuery","fillData","apiCall","fillByType","fillers","pullRequestsComments","pullRequestsReviews","allPullRequestReviewsComments","filler","resolvedFillers","reduce","currentItem","applyFillerResult","recursiveFiller","makeQuery","queryInfo","currentResults","currentHasNextPage","newResult","newHasNextPage","updatedData","updateRawData","newData","updatedNode","assign","node","getQueryInfo","getAllReviewComments","review","currentReviewComments","reviewCommentsQueryInfo","allReviewComments","edges","updatedReviewComments","getAllPullRequestReviews","pullRequest","currentReviews","reviewsQueryInfo","allReviews","allPullRequestsReviews","updatedpullRequestsData","updatePullRequests","propOr","result","pullRequestsItems","pullRequestsData","mergedPullRequests","currentPullRequest","find","getAllPullRequestComments","currentComments","commentsQueryInfo","allComments","allPullRequestsComments","types","SET_USER","CLEAR_USER","SET_TEAM_NAME","CLEAR_TEAM_NAME","STORE_ORG","CLEAR_ORG","STORE_TOKEN","STORE_FORM_UNTIL_DATE","CLEAR_FORM_UNTIL_DATE","STORE_UNTIL_DATE","CLEAR_UNTIL_DATE","SET_PR_PAGINATION","CLEAR_PR_PAGINATION","SET_RELEASES_PAGINATION","CLEAR_RELEASES_PAGINATION","SET_ISSUES_PAGINATION","CLEAR_ISSUES_PAGINATION","FETCH_STATUS","FETCH_START","PRE_FETCH_ERROR","CLEAR_PRE_FETCH_ERROR","FETCH_ERROR","CLEAR_FETCH_ERROR","FETCH_END","STORE_REPOS","STORE_REPO","CLEAR_REPO","STORE_AMOUNT","STORE_SORT","STORE_ENT_URL","STORE_EX_IDS","CLEAR_EX_IDS","STORE_USER_IDS","CLEAR_USER_IDS","ADD_PRS","ADD_FILTERED_PRS","CLEAR_PRS","CLEAR_FILTERED_PRS","ADD_ISSUES","ADD_FILTERED_ISSUES","CLEAR_FILTERED_ISSUES","CLEAR_ISSUES","ADD_RELEASES","CLEAR_RELEASES","TOGGLE_THEME","PREFETCHED_NAME","CLEAR_PREFETCHED_NAME","ADD_USERS_DATA","CLEAR_USERS_DATA","parseJSON","response","json","status","error","console","log","triggeredAbuseRate","message","test","triggeredJsonError","fetchInfo","fetch","enterpriseAPI","method","headers","token","JSON","stringify","shouldGetNextPage","pause","ms","setTimeout","numRateTriggers","pauseThenRetry","apiInfo","now","api","errorMessage","getCurrentItemsByType","total","acc","getLatestDate","latestResult","at","latestResultItems","targetItem","dateSort","getTime","dispatch","Boolean","oldestItemWithNextPage","payload","prCount","latestItemDate","issueCount","releaseCount","apiCallWithToken","fullData","updatedResults","updatedFetchInfo","mergeDeepRight","hasTriggeredAbuse","propEq","compose","getErrorMessage","undefined","getUsersData","userIds","allUsersData","paginationInfo","allResults","forEach","push","prop","finalFetchInfo","usersData","flat","getPrDate","allPrs","prIndex","pr","currentEndDate","path","getUntilDate","fetches","changeBy","months","amountOfDataIsString","is","String","isDesc","isAsc","noDateUntil","isEmpty","subtractDate","sub","dateFromPRs","prDate","add","newUntilDate","allPass","sumKeysValue","current","sumObjectKeys","obj","sortByKeys","sumKeysFrom","aTotal","formatCommenters","commenters","formatSentimentsCommenters","author","score","formatSentiments","sentiment","Sentiment","sentimental","comment","analyze","sentimentScore","sentiments","getAllCodeComments","allCodeComments","filterForUsers","users","includes","filterOutUsers","isAllowedUser","formatComments","exclude","generalComments","codeComments","commentsMap","general","commentsAuthor","authorSentimentScore","prefix","formatAllComments","generalCommentsInfo","codeCommentsInfo","collatedCommentsInfo","formatApprovals","ghApprovals","ghApprovers","approvals","approvers","mergedAt","filterSortPullRequests","excludeIds","allPullRequests","filteredPRs","remainingPRs","hasExcludedAuthor","any","keepItem","formatPullRequests","authorUrl","url","additions","deletions","createdAt","allCommentsInfo","prSize","age","differenceInDays","prData","flatten","filterSortIssues","allIssues","filteredIssues","remainingIssues","formatIssues","labels","isBug","formatReleases","tag","releaseType","majorV","major","minorV","minor","patchV","patch","prereleaseV","prerelease","getReleaseType","date","description","slimValue","value","Array","isArray","slimArray","slimObject","arr","newArray","newObject","entries","newValue","baseUserData","approvalsGiven","approvalsByUser","commentsGiven","commentsReceived","codeCommentsGiven","codeCommentsReceived","generalCommentsGiven","generalCommentsReceived","totalPRs","uniquePRsContributedTo","commentsByUser","updateContributorCount","currentData","objKey","addition","contributorCount","prevData","updated","updateByUsersCount","byUsersCount","currentUserData","currentKeyData","updatedKeyData","formatUserData","userData","codeCommenters","generalCommenters","updatedCommentsByUser","updatedApprovalsByUser","updatedCommentsGiven","updatedCodeCommentsGiven","updatedGeneralCommentsGiven","updatedApprovalsGiven","updatedUniquePRsApproved","Set","prSizes","averagePrSize","round","sum","prAges","averagePrAge","approvalsReceived","uniqueAuthors","newUsersData","sortedUsers","setUser","storeToken","userIdsFromString","pipe","split","trim","storeAmountOfData","storeFormUntilDate","getState","formUntilDate","storeSortDirection","clearPastSearch","notSameValues","formValues","notSameStringValues","notSameIds","idsString","formIds","currentIds","not","equals","notSameArrayValues","anyPass","clearData","clearAllData","updateUsersData","state","noUserIds","missing","i","prepend","validateRequest","validStringArgs","every","validArraygArgs","isValid","getAPIData","appendData","isValidRequest","newPullrequests","allPullrequests","newRemainingPRs","newFilteredPRs","newIssues","newRemainingIssues","newFilteredIssues","info","picks","pick","nextLevel","toPairs","setPreFetchedData","repoData","preFetchedName","teamName","fetchesInfo","fallback","getDownloadProps","fileName","reportData","pickAll","dissocPath","assoc","getReportData","blob","Blob","URL","createObjectURL","download","marginRight","join","variant","size","alignItems","borderRadius","margin","backgroundColor","warn","inputGrid","gridTemplateColumns","columnGap","rowGap","minHeight","gridColumn","typeOptions","textTransform","fullRow","formDescription","dataPaper","child","preFetched","preFetchedRepos","name","file","preFetchedTeams","connect","preFetchedError","getPreFetchedReport","savedReportName","getPreFetched","useEffect","quertString","window","URLSearchParams","get","repoInfo","preFetchButton","setValue","hasTeamData","itemText","amount","Select","onChange","target","inputProps","MenuItem","inputLabels","validate","validateForm","formInfo","getErrorValue","errorValue","validationErrors","buttonText","fetching","formValue","inputError","setInputError","label","helperText","onBlur","event","onFocus","TextField","getDownloadInfo","setValues","storeOrg","storeRepo","userIdsArray","storeUserIds","storeTeamName","storeEnterpriseAPI","excludeArray","storeExcludeIds","getData","reportType","primaryInputs","defaultInputs","setFormInfo","inputStates","onSubmit","inputKey","clearReport","selectedOption","setLocalOption","Paper","option","setOption","colors","ChartHeading","useStyles","makeStyles","borderBottom","content","bottom","left","right","LineItem","Item","style","mathTypeMap","average","count","multiple","uniqueLinesMaths","groupMath","singleMathType","centerHeading","textAlign","headingWrap","barChartComponentWrap","maxWidth","lineChartComponentWrap","zIndex","chordWrap","pieWrap","chartWrap","styledCharts","Chart","require","getMonth","getWeek","getDay","differenceInMonths","isNewNthWeek","mod","prev","prevItemsWeek","currentItemsWeek","isNew","prevItemsDay","currentItemsDay","batchByType","batchType","batchedData","prevItem","batchByData","startDate","endDate","totalMonths","T","getAllYValues","allValues","getMaxYValue","apply","max","getMinYValue","minValue","min","dateA","dateB","formatDate","month","dayM","getDate","getFullYear","formatLineData","dataKey","sortedData","formattedData","formatBatches","formatLinesData","axix","lines","formatGraphMarkers","lineData","dateStart","dateEnd","currentStart","currentEnd","formattedMarkers","currentDate","MAJOR","MINOR","smoothNumber","ruffledNumber","stringNumber","roundTo","reduceRight","index","increment","number","parseInt","updatedItem","reverse","chunkData","totalDays","daysPerChunk","chunkyData","itemData","prevMergedAt","ToolTip","convertedRightLines","getYValue","point","yCurrentValue","yFormatted","originalY","Chip","points","rows","serieColor","serieId","Line","blockHeading","showLegends","useTheme","leftAxis","xAxis","leftLinesData","minLeftValue","rightAxis","rightLinesData","maxRightValue","minRightValue","maxLeftValue","dataItem","leftHeadingItems","rightHeadingItems","legendsArray","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","toggleSerie","itemTextColor","hasData","top","lineWidth","curve","animate","xScale","format","xFormat","yScale","axisBottom","tickSize","tickPadding","tickRotation","axisLeft","tickValues","pointLabelYOffset","axisRight","rawLeftValue","realRightValue","enableGridX","enableSlices","sliceTooltip","zeroOut","renderCell","params","sortComparator","v1","v2","columnMap","field","headerName","flex","commentSentimentScore","commentAuthorSentimentScore","commentSentimentTotalScore","makeColumns","dataKeys","selectedClass","selectedIndex","tableVisible","itemsIndex","selected","hasTable","chunk","ChunkIcon","tableShowing","arrow","chunksRules","bar","paddingBottom","transform","wrapper","borderColor","borderWidth","dataIndex","setIndex","showTable","setShowTable","selectedClassFor","columns","pageSize","rowsPerPageOptions","disableColumnFilter","disableColumnMenu","autoHeight","getByAuthorData","authorsPrs","theirPrs","byAuthorLines","byAuthor","isTeamPage","byAuthorData","lineOptions","mathWords","addedLine","removeLine","savedLine","remove","getRemainingLines","graphInfo","activeLines","remainingLines","colorClasses","graphLine","paddingTop","graphForm","customLines","setGraph","graphs","lineSide","side","updatedLines","removedLine","graphItem","updatedGraphs","graphId","firstline","chosenColorIndex","findIndex","RadioGroup","row","FormLabel","Radio","formatGraphData","leftLines","rightLines","formData","getTableKeys","activeKeys","getGraphId","addedGraph","buttons","block","rawPullRequests","defaultState","makeGraphData","slice","formatIssueData","bug","issue","fullP","hasChartData","dataArray","Bar","bars","sortBy","indexBy","layout","titlePrefix","trimmedData","byPropDesc","finalData","groupMode","valueFormat","abs","enableLabel","getNameList","scoredData","keyData","given","sortedValues","showNames","itemsPercent","percentageOfTotal","otherTotal","ignoreNames","otherAuthors","formatChordData","otherAppened","matrix","martixRow","matrixRowsForNamed","nameData","matrixRowForOther","mergedMatrix","getMatrix","names","Chord","hasMatrixData","arcBorderColor","from","modifiers","ribbonOpacity","ribbonBorderWidth","ribbonBorderColor","innerRadiusRatio","labelRotation","padAngle","innerRadiusOffset","labelOffset","labelTextColor","isInteractive","arcHoverOpacity","arcHoverOthersOpacity","ribbonHoverOpacity","ribbonHoverOthersOpacity","motionStiffness","motionDamping","maxAuthors","sentPRData","userId","splitAt","alt","radarSliceTooltip","matched","area","Radar","titleItems","dotSize","dotBorderColor","dotBorderWidth","gridShape","enableDotLabel","gridLabelOffset","gridLevels","maxValue","gridAngleStep","angleStep","formatRadarData","filterAuthor","defaultValues","uniquePRsApproved","p10","topUsers","totalled","userCount","averagedData","approvalsGivenByTeam","maxValues","accVaue","radialChartsContributions","topXUsers","received","givenOriginal","receivedOriginal","radarData","contributionsRadar","setUserAction","fullW","allButons","currentTarget","scrollTo","newSortDirection","checkUntilDate","inputs","hardCodedKeys","titleCopy","where","propSatisfies","hasReportData","PretetchedForm","RepoView","colourA","colourB","userRadars","userName","radars","originalUser","peersOriginal","getRadarData","userBars","averageAndUserData","userGraphs","mergedPrData","peerPrData","userPrData","removeUser","topButton","itemsInfo","lineInfo","Pie","datum","innerRadius","cornerRadius","activeOuterRadiusOffset","startAngle","endAngle","enableArcLabels","arcLinkLabelsSkipAngle","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsTextColor","allRepos","allPRdata","sortedRepoData","topRepos","uniqueRepos","pieData","filteredPRData","sectionTitle","leftData","rightData","Team","User","Repo","overflow","themeType","themeToggle","icon","Page","PageWrapper","DataOptions","daysRemainingText","fetchStatus","animation","pastPRs","isTeamSearch","dayDiff","uptoDate","daysTotal","daysLoaded","daysRemaining","oneDayPercent","loadedPercent","usersPosition","loadedUsers","oneUserPercent","loadedUserPercent","overlay","modal","LinearProgress","dashed","valueBuffer","setReposUserId","actions","setClear","startValue","storKey","clearKey","action","setClearString","setClearArray","setClearPagination","reducers","combineReducers","prs","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.4954a870.chunk.js","sourcesContent":["var map = {\n\t\"./en/index\": 365\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 520;","import {\n    compose,\n    map,\n    any,\n    flatten,\n    filter,\n    path,\n    pathOr,\n    propOr,\n    sort,\n} from 'ramda'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport {\n    major,\n    minor,\n    patch,\n    prerelease,\n} from 'semver'\nimport Sentiment from 'sentiment'\nimport filterByUntilDate from './filterByUntilDate'\nimport { sumKeysValue } from '../utils'\n\nconst formatCommentersObject = paths => items => {\n    const commenters = {}\n    items\n        .forEach((item) => {\n            const user = path(paths, item)\n            commenters[user] = (commenters[user] || 0) + 1\n        })\n\n    return commenters\n}\n\nconst formatCommenters = formatCommentersObject(['node', 'author', 'login'])\n\nconst formatSentimentsCommenters = items => {\n    const commenters = {}\n    items\n        .forEach(({author = '', score = 0}) => {\n            commenters[author] = (commenters[author] || 0) + score\n        })\n\n    return commenters\n}\n\nconst formatSentiments = (comments = []) => {\n    const sentiment = new Sentiment();\n\n    const sentimental = comments\n        .map(comment => {\n            const body = pathOr('',['node', 'body'], comment)\n            const commentAuthor = pathOr('', ['node', 'author', 'login'], comment)\n\n            return {\n                author: commentAuthor,\n                score: sentiment.analyze(body).score,\n            }\n        })\n\n    return {\n        sentimentScore: sumKeysValue('score')(sentimental),\n        sentiments: formatSentimentsCommenters(sentimental),\n    }\n}\n\nconst getAllCodeComments = (data) => {\n    const allReviews = pathOr([], ['node', 'reviews', 'edges'], data)\n\n    const allCodeComments = []\n    allReviews\n        .forEach((review) => {\n            const comments = pathOr([], ['node', 'comments', 'edges'], review)\n            allCodeComments.push(...comments)\n        })\n\n    return allCodeComments\n}\n\nconst filterForUsers = users => item => users.includes(path(['node', 'author', 'login'], item))\nconst filterOutUsers = users => item => {\n    const isAllowedUser = !filterForUsers(users)(item)\n    const notGitAppComment = !/\\/apps\\//.test(pathOr('', ['node', 'author', 'url'], item))\n\n    return notGitAppComment && isAllowedUser\n}\n\nconst formatComments = (type = '', exclude, data) => {\n    const author = pathOr('', ['node', 'author', 'login'], data)\n\n    const generalComments = pathOr([], ['node', 'comments', 'edges'], data)\n    const codeComments = getAllCodeComments(data)\n    const commentsMap = {\n        general: generalComments,\n        code: codeComments,\n        all: [\n            ...codeComments,\n            ...generalComments\n        ]\n    }\n    const allComments = commentsMap[type]\n\n    const comments = allComments\n        .filter(filterOutUsers([...exclude, author]))\n\n    const {\n        sentimentScore = 0,\n        sentiments = {},\n    } = formatSentiments(comments)\n\n    const commentsAuthor = allComments\n        .filter(filterForUsers([author]))\n    const {\n        sentimentScore: authorSentimentScore = 0,\n    } = formatSentiments(commentsAuthor)\n\n    const prefix = type === 'all'\n        ? 'c'\n        : `${type}C`\n\n    return {\n        [`${prefix}omments`]: comments.length,\n        [`${prefix}ommenters`]: formatCommenters(comments),\n        [`${prefix}ommentSentimentScore`]: sentimentScore,\n        [`${prefix}ommentSentiments`]: sentiments,\n        [`${prefix}ommentsAuthor`]: commentsAuthor.length,\n        [`${prefix}ommentAuthorSentimentScore`]: authorSentimentScore,\n        [`${prefix}ommentSentimentTotalScore`]: (authorSentimentScore || 0) + (sentimentScore || 0),\n    }\n}\n\nconst formatAllComments = (exclude, data) => {\n    const generalCommentsInfo = formatComments('general',exclude, data)\n    const codeCommentsInfo = formatComments('code', exclude, data)\n    const collatedCommentsInfo = formatComments('all', exclude, data)\n\n    return {\n        ...generalCommentsInfo,\n        ...codeCommentsInfo,\n        ...collatedCommentsInfo,\n    }\n}\n\nconst formatApprovals = (data) => {\n    const reviews = pathOr([], ['node', 'reviews', 'edges'], data)\n    const ghApprovals = reviews\n        .filter(x => path(['node', 'state'], x) === 'APPROVED')\n\n    const ghApprovers = formatCommenters(ghApprovals)\n\n    return {\n        approvals: ghApprovals.length,\n        approvers: ghApprovers,\n    }\n}\n\nconst prData = (exclude = []) => (data = {}) => {\n    const org = pathOr('', ['node', 'repository', 'owner', 'login'], data)\n    const repo = pathOr('', ['node', 'repository', 'name'], data)\n    const author = pathOr('', ['node', 'author', 'login'], data)\n    const authorUrl = pathOr('', ['node', 'author', 'url'], data)\n    const url = pathOr('', ['node', 'url'], data)\n    const additions = pathOr(0, ['node', 'additions'], data)\n    const deletions = pathOr(0, ['node', 'deletions'], data)\n    const createdAt = pathOr('', ['node', 'createdAt'], data)\n    const mergedAt = pathOr('', ['node', 'mergedAt'], data)\n\n    const allCommentsInfo = formatAllComments(exclude, data)\n\n    const {\n        approvals,\n        approvers,\n    } = formatApprovals(data)\n\n    const prInfo = {\n        repo,\n        org,\n        author: /\\/apps\\//.test(authorUrl)\n            ? 'GIT_APP_PR'\n            : author,\n        url,\n\n        additions,\n        deletions,\n        prSize: additions + deletions,\n\n        mergedAt,\n        age: differenceInDays(new Date(mergedAt), new Date(createdAt)) || 1,\n\n        approvals,\n        approvers,\n\n        ...allCommentsInfo\n    }\n\n    return prInfo\n}\n\nconst dateSort = (sortDirection) => ({ mergedAt: a }, { mergedAt: b }) => sortDirection === 'DESC'\n    ? new Date(a).getTime() > new Date(b).getTime()\n    : new Date(a).getTime() - new Date(b).getTime()\n\nconst filterSortPullRequests = ({ excludeIds = [], sortDirection }, untilDate, allPullRequests = []) => {\n    const filteredPRs = []\n    const remainingPRs = compose(\n        sort(dateSort('ASC')),\n        filter(item => {\n            const author = propOr('', 'author', item)\n            const hasExcludedAuthor = any(y => y === author, ['GIT_APP_PR', ...excludeIds])\n            const shouldFilterIn = filterByUntilDate(['mergedAt'], sortDirection, untilDate)(item)\n            const keepItem = shouldFilterIn && !hasExcludedAuthor\n\n            !keepItem && filteredPRs.push(item)\n            return keepItem\n        }),\n    )(allPullRequests)\n\n    return [remainingPRs, filteredPRs]\n}\n\nconst formatPullRequests = ({ excludeIds = [] }, results) => {\n    const pullRequests = compose(\n        map(prData(excludeIds)),\n        flatten,\n        map(pathOr([], ['data', 'result', 'pullRequests', 'edges'])),\n    )(results)\n\n    return pullRequests\n}\n\nconst filterSortIssues = ({ sortDirection }, untilDate, allIssues = []) => {\n    const filteredIssues = []\n    const remainingIssues = compose(\n        sort(dateSort('ASC')),\n        filter(item => {\n            const keepItem = filterByUntilDate(['mergedAt'], sortDirection, untilDate)(item)\n\n            !keepItem && filteredIssues.push(item)\n            return keepItem\n        }),\n    )(allIssues)\n\n    return [remainingIssues, filteredIssues]\n}\n\nconst formatIssue = (data) => {\n    const createdAt = pathOr('', ['node', 'createdAt'], data)\n    const title = pathOr('', ['node', 'title'], data)\n    const url = pathOr('', ['node', 'url'], data)\n    const labels = pathOr([], ['node', 'labels', 'edges'], data)\n\n    return {\n        mergedAt: createdAt,\n        url,\n        isBug: /bug/i.test(title) || labels.some(x => /bug/i.test(path(['node', 'name'], x))),\n    }\n}\n\nconst formatIssues = compose(\n    map(formatIssue),\n    flatten,\n    map(pathOr([], ['data', 'result', 'issues', 'edges'])),\n)\n\nconst getReleaseType = (tag) => {\n    try {\n        const majorV = major(tag)\n        const minorV = minor(tag)\n        const patchV = patch(tag)\n        const prereleaseV = prerelease(tag)\n\n        const releaseType = [\n            !prereleaseV && majorV && minorV === 0 && patchV === 0 && 'MAJOR',\n            !prereleaseV && minorV && patchV === 0 && 'MINOR',\n            'PATCH',\n        ].find(Boolean)\n\n        return releaseType\n    } catch(error) {\n        return 'PATCH'\n    }\n}\n\nconst formatRelease = (data) => {\n    const createdAt = pathOr('', ['node', 'createdAt'], data)\n    const tag = pathOr('', ['node', 'tag', 'name'], data)\n\n    const releaseType = getReleaseType(tag)\n\n    return {\n        date: createdAt,\n        description: tag,\n        releaseType,\n    }\n}\n\nconst formatReleases = compose(\n    map(formatRelease),\n    flatten,\n    map(pathOr([], ['data', 'result', 'releases', 'edges'])),\n)\nexport {\n    formatPullRequests,\n    filterSortPullRequests,\n    formatIssues,\n    filterSortIssues,\n    formatReleases,\n}\n","import { createTheme } from '@material-ui/core/styles'\n\nconst themeColor = type => ({\n    light: '#232023',\n    dark: '#eee',\n})[type]\n\nconst themeColorBg = type => ({\n    light: '#fff',\n    dark: '#232023',\n})[type]\n\nconst fontFamily = '\"Nunito\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\nconst fontSize = 12\n\nconst defaultCopy = (type) => ({\n    color: themeColor(type),\n    marginTop: 0,\n    marginBottom: '0.8rem',\n    fontSize: '1rem',\n    fontWeight: '400',\n    fontFamily,\n})\n\nconst markerSettings = {\n    legendOrientation: 'horizontal',\n    legendPosition: 'top-right',\n    height: 10,\n    legendOffsetX: 0,\n    legendOffsetY: -4,\n}\n\nconst spacing = {\n    x: {\n        tiny: '0.2rem',\n        small: '0.5rem',\n        medium: '0.8rem',\n        large: '1.2rem',\n    },\n    y: {\n        tiny: '0.5rem',\n        small: '0.8rem',\n        medium: '1rem',\n        large: '1.4rem',\n    },\n}\n\nconst theme =  (type = 'light') => createTheme({\n    type,\n    palette: {\n        type,\n        secondary: {\n            contrastText: '#ccc',\n            dark: '#1e6392',\n            light: '#7986cb',\n            main: '#1f77b4',\n        },\n        primary: {\n            contrastText: '#ccc',\n            dark: '#b10e4f',\n            light: '#d65287',\n            main: '#e82573',\n        },\n        mainCopy: {\n            color: themeColor(type),\n            fontSize: '1rem',\n            fontWeight: '400',\n            fontFamily,\n        },\n        groupedCharts: {\n            width: '100%',\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-evenly',\n        },\n        iconHover: ({\n            light: '#d65287',\n            dark: '#e82573',\n        })[type],\n        text: {\n            primary: themeColor(type),\n        },\n        link: ({\n            light: '#1f77b4',\n            dark: '#e82573',\n        })[type],\n        background: {\n            default: themeColorBg(type),\n            paper: themeColorBg(type),\n        },\n        shadow:({\n            light: '#ccc',\n            dark: '#666',\n        })[type],\n        switch: themeColor(type),\n    },\n    typography: { useNextVariants: true },\n    mySpacing: spacing,\n    copy: {\n        body: {\n            ...defaultCopy(type),\n            lineHeight: '1.3rem',\n        },\n        list: {\n            ...defaultCopy(type),\n            color: themeColor(type),\n        },\n        listItem: {\n            color: themeColor(type),\n            marginBottom: '0.2rem',\n        },\n        h4: {\n            ...defaultCopy(type),\n            marginBottom: '0.5rem',\n            fontSize: '1.3rem',\n            fontWeight: '500',\n        },\n        h3: {\n            ...defaultCopy(type),\n            fontSize: '2rem',\n            fontWeight: '500',\n            '@media (max-width: 768px)': {\n                fontSize: '1.5rem'\n            },\n            '@media (max-width: 668px)': {\n                fontSize: '1.3rem'\n            },\n        },\n        h2: {\n            ...defaultCopy(type),\n            fontSize: '3rem',\n            fontWeight: '200',\n            '@media (max-width: 768px)': {\n                fontSize: '2.5rem'\n            },\n            '@media (max-width: 668px)': {\n                fontSize: '2rem'\n            },\n        },\n        h1: {\n            ...defaultCopy(type),\n            fontSize: '4rem',\n            fontWeight: '300',\n            '@media (max-width: 768px)': {\n                fontSize: '3rem'\n            },\n            '@media (max-width: 668px)': {\n                fontSize: '2.5rem'\n            },\n        },\n    },\n    charts: {\n        fontFamily,\n        fontSize,\n        textColor: themeColor(type),\n        crosshair: {\n            line: {\n                stroke: themeColor(type),\n            },\n        },\n        axis: {\n            legend: {\n                text: { fill: themeColor(type) },\n            },\n            ticks: {\n                text: { fill: themeColor(type) },\n            },\n        },\n        legends: {\n            hidden: {\n                symbol: {\n                    fill: '#eee',\n                    opacity: 1,\n                },\n                text: {\n                    fill: '#eee',\n                    fontWeight: '400',\n                    opacity: 1,\n                },\n            },\n            text: {\n                fontWeight: '800',\n            },\n        },\n        legendsTextFill: themeColor(type),\n        dotColor: themeColor(type),\n        tooltip: {\n            fontFamily,\n            fontSize,\n            container: {\n                background: themeColorBg(type),\n                color: themeColor(type),\n                boxShadow: `0 1px 2px ${themeColor(type)}`,\n            },\n        },\n        grid: {\n            line: {\n                stroke: '#999',\n            },\n        },\n        markers: {\n            primary: {\n                lineStyle: {\n                    stroke:({\n                        light: '#077314',\n                        dark: '#077314',\n                    })[type],\n                    strokeWidth: 1,\n                },\n                textStyle: {\n                    fontFamily,\n                    fontSize,\n                    fill: ({\n                        light: '#077314',\n                        dark: '#077314',\n                    })[type],\n                },\n                ...markerSettings,\n            },\n            secondary: {\n                lineStyle: {\n                    stroke:({\n                        light: '#8b4ff0',\n                        dark: '#6b3dba',\n                    })[type],\n                    strokeWidth: 1,\n                },\n                textStyle: {\n                    fontFamily,\n                    fontSize,\n                    fill: ({\n                        light: '#8b4ff0',\n                        dark: '#6b3dba',\n                    })[type],\n                },\n                ...markerSettings,\n            },\n            tertiary: {\n                lineStyle: {\n                    stroke:({\n                        light: '#87cac6',\n                        dark: '#6b3dba',\n                    })[type],\n                    strokeWidth: 1,\n                    strokeDasharray:'2 6',\n                },\n                textStyle: {\n                    fontFamily,\n                    fontSize,\n                    fill: ({\n                        light: '#87cac6',\n                        dark: '#6b3dba',\n                    })[type],\n                },\n                ...markerSettings,\n            },\n\n        },\n    },\n})\n\nexport default theme\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n    p: theme.copy.body,\n    h1: theme.copy.h1,\n    h2: theme.copy.h2,\n    h3: theme.copy.h3,\n    h4: theme.copy.h4,\n    link: {\n        color: theme.palette.link,\n    },\n    list: theme.copy.list,\n    listItem: theme.copy.listItem,\n})\n\nconst A = withStyles(styles)(({\n    className = '',\n    href ='',\n    classes,\n    children,\n} = {}) => <a href={href} className={`${classes.link} ${className}`}>\n    {children}\n</a>)\n\nconst P = withStyles(styles)(({\n    className = '',\n    classes = {},\n    children,\n} = {}) => <p className={`${classes.p} ${className}`}>\n    {children}\n</p>)\n\nconst UL = withStyles(styles)(({\n    classes,\n    children,\n} = {}) => <ul className={classes.list}>\n    {children}\n</ul>)\n\nconst OL = withStyles(styles)(({\n    classes,\n    children,\n} = {}) => <ol className={classes.list}>\n    {children}\n</ol>)\n\nconst LI = withStyles(styles)(({\n    classes,\n    children,\n} = {}) => <li className={classes.listItem}>\n    {children}\n</li>)\n\nconst H = withStyles(styles)(({\n    level = 1,\n    styleAs,\n    className = '',\n    classes,\n    ...props\n} = {}) => {\n    const hClassName = `h${styleAs || level}`\n    const Tag = `h${level}`\n\n    return (\n        <Tag\n            className={`${classes[hClassName]} ${className}`}\n            {...props}\n\n        />\n    )\n})\n\n\nexport {\n    A,\n    P,\n    UL,\n    OL,\n    LI,\n    H,\n}\n\n","import React, { useState } from 'react'\nimport Collapse from '@material-ui/core/Collapse'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { H, P } from './StyledTags'\n\n\nconst ExpandLink = ({\n    classes,\n    setCount,\n    toggle,\n    expandText,\n}) =>  <a\n    className={classes.link}\n    href=\"#desc\"\n    onClick={(e) => {\n        e.preventDefault()\n        setCount(!toggle)\n    }}>\n    {\n        toggle\n            ? 'hide'\n            : expandText\n    }\n</a>\n\nconst ChartDescription = ({\n    title,\n    intro,\n    children,\n    expandText = 'info',\n    className = '',\n    classes,\n} = {}) => {\n    const [toggle, setCount] = useState(false)\n\n    return (\n        <div className={`${classes.root} ${className} ${!intro ? '' : classes.rootRows}`}>\n            {\n               title && typeof title === 'string'\n                    ? <H className={classes.heading} level={2} >\n                        {title}\n                        {\n                            children\n                                && <ExpandLink\n                                    classes={classes}\n                                    toggle={toggle}\n                                    setCount={setCount}\n                                    expandText={expandText}\n                                />\n                        }\n                    </H>\n                    : title\n            }\n            <P>\n                {intro} {\n                    intro\n                        && children\n                        && <ExpandLink\n                            classes={classes}\n                            toggle={toggle}\n                            setCount={setCount}\n                            expandText={expandText}\n                        />\n                }\n            </P>\n            <Collapse className={`wrapper ${classes.wrapperFlex}`} in={toggle}>\n                {children}\n            </Collapse>\n        </div>\n    )\n}\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        flexGrow: 1,\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    rootRows: {\n        '& > *': {\n            flexBasis: '100%'\n        }\n    },\n    link: {\n        color: theme.palette.link,\n    },\n    linkMargin: {\n        color: theme.palette.link,\n        marginLeft: '0.5rem',\n    },\n    heading: {\n        '& a': {\n            fontSize: '1rem',\n            marginLeft: '0.5rem',\n        }\n    },\n    wrapperFlex: {\n        flexBasis: '100%'\n    }\n})\n\nexport default withStyles(styles)(ChartDescription)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\n\nconst styles = theme => ({\n    root: {\n        padding: `${theme.mySpacing.y.large} ${theme.mySpacing.y.large} 0 ${theme.mySpacing.y.large}`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'top left',\n        backgroundSize: '100% 20px',\n        backgroundImage: `linear-gradient(${theme.palette.shadow}, rgba(0,0,0,0))`,\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    },\n    'bg-none': {\n        background: 'none'\n    },\n    'justify': {\n        justifyContent: 'space-between',\n    },\n})\n\nconst PaperWapper = ({ classes = {}, className = '', children } = {}) => (\n    <div\n        className={classNames(classes.root, classes[className] || className)}\n    >\n        {children}\n    </div>\n)\n\nexport default withStyles(styles)(PaperWapper)","import { splitEvery } from 'ramda'\n\n// Runs each batch synchronously and the items in a batch asynchronously\nconst runBatchQueue = (batches, job, resolved = []) => new Promise((resolve, reject) => {\n    const [currentBatch, ...remainingBatches] = batches\n\n    Promise.all(currentBatch.map((j) => job(j)))\n        .then((results) => (\n            remainingBatches && remainingBatches.length\n                ? runBatchQueue(remainingBatches, job, results)\n                    .then((more) => resolve(resolved.concat(more)))\n                    .catch(reject)\n                : resolve(resolved.concat(results))\n        ))\n        .catch(reject)\n})\n\n// Takes an array of arguments for the job and runs them in batches\nconst batch = (argsList = [], job, batchSize = 2) => {\n    const batches = splitEvery(batchSize, argsList)\n\n    return argsList.length\n        ? runBatchQueue(batches, job)\n        : []\n}\n\nexport default batch\n","import { pathOr } from 'ramda'\nimport { isAfter, isBefore } from 'date-fns'\n\nconst filterByUntilDate = (datePath = [], order = 'DESC', untilDate = '') => (item) => {\n    const itemsDateValue = pathOr('', datePath, item)\n    const itemsDate = itemsDateValue && new Date(itemsDateValue)\n    const until = new Date(untilDate)\n    const shouldFilterIn = order === 'DESC'\n        ? isAfter(itemsDate, until)\n        : isBefore(itemsDate, until)\n\n    return shouldFilterIn\n}\n\nexport default filterByUntilDate\n","import { pathOr } from 'ramda'\nimport { isDate } from 'date-fns'\nimport {\n  always,\n  T as alwaysTrue,\n  F as alwaysFalse,\n  cond,\n} from 'ramda'\nimport filterByUntilDate from '../format/filterByUntilDate'\n\nconst cursorQ = (cursor, key = 'after') => cursor\n    ? ` ${key}:\"${cursor}\" `\n    : ''\n\nconst getCursor = order => ({oldest, newest}) => {\n    const cursor = order === 'DESC' ? oldest : newest\n    return cursorQ(cursor)\n}\n\nconst pageInfo = 'pageInfo { endCursor hasNextPage hasPreviousPage startCursor }'\n\nconst comments = (cursor) => `\n    comments(first: ${cursor ? 100: 10} ${cursorQ(cursor)}) {\n      edges {\n        node {\n          author {\n            login\n            url\n          }\n          body\n        }\n      }\n      ${pageInfo}\n    }\n`\n\nconst pullRequests = order => pagination => `\npullRequests(\n  first: 50\n  ${getCursor(order)(pagination)}\n  states: [MERGED]\n  orderBy: {field: CREATED_AT direction: ${order}}\n) {\n  totalCount\n  edges {\n    node {\n      id\n      url\n      author {\n        login\n        url\n      }\n      repository {\n        name\n        owner {\n          login\n        }\n      }\n      additions\n      deletions\n      mergedAt\n      createdAt\n      ${reviews()}\n      ${comments()}\n    }\n  }\n  ${pageInfo}\n}`\n\nconst issues = order => pagination => `\nissues(\n  ${getCursor(order)(pagination)}\n  first: 50\n  orderBy: { field:CREATED_AT direction: ${order} }\n) {\n  totalCount\n  edges {\n    node {\n      title\n      url\n      createdAt\n      closedAt\n      state\n      labels(first:5) {\n        edges {\n          node {\n            name\n          }\n        }\n      }\n    }\n  }\n  ${pageInfo}\n}`\n\nconst releases = order => pagination => `\nreleases(\n  ${getCursor(order)(pagination)}\n  first: 50\n  orderBy:{ field:CREATED_AT direction: ${order} }\n) {\n  totalCount\n  edges {\n    node {\n      id\n      name\n      createdAt\n      tag {\n        name\n      }\n    }\n  }\n  ${pageInfo}\n}`\n\nconst reviews = (cursor) => `\n    reviews(first: ${cursor ? 100 : 10} ${cursorQ(cursor)}) {\n      edges {\n        node {\n          id\n          state\n          author {\n            login\n            url\n          }\n          ${comments()}\n        }\n      }\n      ${pageInfo}\n    }\n`\n\nconst getPaginationByType = (oldFetchInfo = {}, untilDate ='', data = {}, order) => type => {\n    const {\n        hasNextPage = false,\n        startCursor,\n        endCursor,\n    } = pathOr({}, ['data', 'result', type, 'pageInfo'], data)\n\n    const items = pathOr([], ['data', 'result', type, 'edges'], data)\n\n    const dateKey = type === 'pullRequests'\n      ? 'mergedAt'\n      : 'createdAt'\n\n    const filteredItems = isDate(untilDate)\n      ? items.filter(filterByUntilDate(['node', dateKey], order, untilDate))\n      : []\n\n    const typeStateMap = {\n        pullRequests: 'prPagination',\n        issues: 'issuesPagination',\n        releases: 'releasesPagination',\n    }\n\n    const oldestDefault = order === 'DESC' ? endCursor : startCursor\n    const oldestCurrent = pathOr(oldestDefault, [typeStateMap[type], 'oldest'], oldFetchInfo)\n\n    const newestDefault = order === 'ASC' ? endCursor : startCursor\n    const newestCurrent = pathOr(newestDefault, [typeStateMap[type], 'newest'], oldFetchInfo)\n\n    // TODO: Don't clear if undefined cursor\n    // TODO: add hasPrevPage\n    const dateFilteredLength = filteredItems.length\n    const tryNextPage = cond([\n      [always(hasNextPage === false), alwaysFalse],\n      [always(!isDate(untilDate)), always(hasNextPage)],\n      [always(dateFilteredLength === 0), alwaysFalse],\n      [always(dateFilteredLength > 0 && items.length > dateFilteredLength), alwaysFalse],\n      [alwaysTrue, always(hasNextPage)],\n    ])()\n\n    return {\n        newest: order === 'ASC' &&  endCursor ? endCursor : newestCurrent,\n        oldest: order === 'DESC' && endCursor ? endCursor : oldestCurrent,\n        hasNextPage,\n        hasNextPageForDate: tryNextPage,\n    }\n}\n\nconst getRemainingPageCount = (data) => {\n  const [ maxItems ] = ['issues', 'pullRequests', 'releases']\n    .map(type => pathOr(0, ['data', 'result', type, 'totalCount'], data))\n    .sort((a,b) => a > b)\n\n    return Math.ceil(maxItems/50) -1\n}\n\nconst userQuery = (untilDate) => ({\n  user,\n  sortDirection = 'DESC',\n  amountOfData,\n  issuesPagination = {},\n  prPagination = {},\n}) => ({\n  query: `{\n    result: user(login: \"${user}\") {\n      login\n      ${prPagination[untilDate ? 'hasNextPageForDate' : 'hasNextPage'] !== false ? pullRequests(sortDirection)(prPagination) : ''}\n      ${issuesPagination[untilDate ? 'hasNextPageForDate' : 'hasNextPage'] !== false ? issues(sortDirection)(issuesPagination) : ''}\n    }\n  }`,\n  sortDirection,\n  user,\n  resultInfo: (data) => {\n      const byType = getPaginationByType(\n          {\n              issuesPagination,\n              prPagination,\n              amountOfData,\n          },\n          untilDate,\n          data,\n          sortDirection\n      )\n\n      const updatedAmountOfData = cond([\n        [always(isDate(untilDate)), always(amountOfData)],\n        [always(Number.isInteger(amountOfData)), always(amountOfData - 1)],\n        [alwaysTrue, getRemainingPageCount]\n      ])(data)\n\n      const nextPageInfo = {\n        prPagination: {\n          hasNextPage: false,\n          ...byType('pullRequests'),\n        },\n        issuesPagination: {\n          hasNextPage: false,\n          ...byType('issues'),\n        },\n      }\n\n      const hasNextPageKey = isDate(untilDate) ? 'hasNextPageForDate' : 'hasNextPage'\n      return  {\n          hasNextPage: Object.values(nextPageInfo).some(x => x[hasNextPageKey] === true),\n          nextPageInfo: {\n            ...nextPageInfo,\n            amountOfData: updatedAmountOfData,\n          },\n      }\n  },\n  hasMoreResults: [\n      prPagination.hasNextPage,\n      issuesPagination.hasNextPage,\n  ]\n      .some(x => x !== false),\n})\n\nconst batchedQuery = (untilDate) => ({\n    org,\n    repo,\n    sortDirection = 'DESC',\n    amountOfData,\n    issuesPagination = {},\n    releasesPagination = {},\n    prPagination = {},\n}) => ({\n    query: `{\n      result: repository(name: \"${repo}\" owner: \"${org}\") {\n        id\n        description\n        name\n        owner {\n          org: login\n        }${prPagination[untilDate ? 'hasNextPageForDate' : 'hasNextPage'] !== false ? pullRequests(sortDirection)(prPagination) : ''}\n        ${issuesPagination[untilDate ? 'hasNextPageForDate' : 'hasNextPage'] !== false ? issues(sortDirection)(issuesPagination) : ''}\n        ${releasesPagination[untilDate ? 'hasNextPageForDate' : 'hasNextPage'] !== false ? releases(sortDirection)(releasesPagination) : ''}\n      }\n    }`,\n    sortDirection,\n    resultInfo: (data) => {\n        const byType = getPaginationByType(\n            {\n                issuesPagination,\n                releasesPagination,\n                prPagination,\n            },\n            untilDate,\n            data,\n            sortDirection\n        )\n\n        const updatedAmountOfData = cond([\n          [always(isDate(untilDate)), always(amountOfData)],\n          [always(Number.isInteger(amountOfData)), always(amountOfData - 1)],\n          [alwaysTrue, getRemainingPageCount]\n        ])(data)\n\n        const nextPageInfo = {\n          prPagination: {\n            hasNextPage: false,\n            ...byType('pullRequests'),\n          },\n          issuesPagination: {\n            hasNextPage: false,\n            ...byType('issues'),\n          },\n          releasesPagination: {\n            hasNextPage: false,\n            ...byType('releases'),\n          },\n        }\n\n        const hasNextPageKey = isDate(untilDate) ? 'hasNextPageForDate' : 'hasNextPage'\n        return {\n            hasNextPage: Object.values(nextPageInfo).some(x => x[hasNextPageKey] === true),\n            nextPageInfo: {\n              ...nextPageInfo,\n              amountOfData: updatedAmountOfData,\n            },\n        }\n    },\n    fillerType: 'batchedQuery',\n    hasMoreResults: [\n        prPagination.hasNextPage,\n        issuesPagination.hasNextPage,\n        releasesPagination.hasNextPage,\n    ]\n        .some(x => x !== false),\n})\n\nconst commentsQuery = ({ nodeId, cursor }) => ({\n    query: `{\n      node(id:\"${nodeId}\") {\n          ... on PullRequest {\n            id\n            ${comments(cursor)}\n          }\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'node', 'comments', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'node', 'comments', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            nodeId: pathOr('', ['data', 'node', 'id'], data),\n            cursor: pathOr('', ['data', 'node', 'comments', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n})\n\nconst reviewsQuery = ({ nodeId, cursor }) => ({\n    query: `{\n      node(id:\"${nodeId}\") {\n          ... on PullRequest {\n            id\n            ${reviews(cursor)}\n          }\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'node', 'reviews', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'node', 'reviews', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            nodeId: pathOr('', ['data', 'node', 'id'], data),\n            cursor: pathOr('', ['data', 'node', 'reviews', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n    fillerType: 'pullRequestReviewComments',\n})\n\nconst reviewCommentsQuery = ({ nodeId, cursor }) => ({\n    query: `{\n      node(id:\"${nodeId}\") {\n          ... on PullRequestReview {\n            id\n            ${comments(cursor)}\n          }\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'node', 'comments', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'node', 'comments', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            nodeId: pathOr('', ['data', 'node', 'id'], data),\n            cursor: pathOr('', ['data', 'node', 'comments', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n})\n\nexport {\n    userQuery,\n    batchedQuery,\n    reviewCommentsQuery,\n    commentsQuery,\n    reviewsQuery,\n}","import { pathOr, propOr } from 'ramda'\nimport batch from './batch'\n\nimport {\n    commentsQuery,\n    reviewsQuery,\n    reviewCommentsQuery,\n} from './queries'\n\n// TODO: make this file more understandable\n// TODO: retry errored fill\nconst fillData = apiCall => {\n    const fillByType = (type) => {\n\n        const fillersByType = {\n            'pullRequests': [\n                pullRequestsComments,\n                pullRequestsReviews,\n            ],\n            'pullRequestReviewComments': [\n                allPullRequestReviewsComments,\n            ],\n            'batchedQuery': [\n                pullRequestsComments,\n                pullRequestsReviews,\n            ],\n        }\n\n        const fillers = fillersByType[type] || []\n\n        return (data) => fillers.length\n            ? Promise.all(\n                fillers\n                    .map((filler) => filler(data))\n            )\n                .then((resolvedFillers) => resolvedFillers\n                    .reduce((currentItem, applyFillerResult) => applyFillerResult(currentItem), data)\n                )\n            : data\n    }\n\n    const recursiveFiller = makeQuery => (queryInfo = {}) => async (currentResults = []) => {\n        const {\n            hasNextPage: currentHasNextPage,\n        } = queryInfo\n\n        const {\n            query,\n            resultInfo,\n            fillerType,\n        } = makeQuery(queryInfo)\n\n        const newResult = currentHasNextPage\n            ? await apiCall(query)\n            : {}\n\n        const {\n            results = [],\n            hasNextPage: newHasNextPage,\n            nextArgs,\n        } = resultInfo(newResult)\n\n        const updatedData = [\n            ...currentResults,\n            ...results,\n        ]\n\n        return newHasNextPage\n            ? recursiveFiller(makeQuery)(nextArgs)(updatedData)\n            : await fillByType(fillerType)(updatedData)\n    }\n\n    const updateRawData = (rawData = {}) => key => newData => {\n        const updatedNode = Object.assign(rawData.node, { [key]: newData })\n\n        return Object.assign(rawData, { node: updatedNode })\n    }\n\n    const getQueryInfo = key => data => ({\n        nodeId: pathOr('', ['node', 'id'], data),\n        cursor: pathOr('', ['node', key, 'pageInfo', 'endCursor'], data),\n        hasNextPage: pathOr(false, ['node', key, 'pageInfo', 'hasNextPage'], data),\n    })\n\n    const allPullRequestReviewsComments = async(data = []) => {\n        const getAllReviewComments = async(review) => {\n            const currentReviewComments = pathOr([], ['node', 'comments', 'edges'], review)\n            const reviewCommentsQueryInfo = getQueryInfo('comments')(review)\n\n            const allReviewComments = await recursiveFiller(reviewCommentsQuery)(reviewCommentsQueryInfo)(currentReviewComments)\n\n            return updateRawData(review)('comments')({ edges: allReviewComments })\n        }\n        const updatedReviewComments = await batch(data, getAllReviewComments, 5)\n\n        return () => updatedReviewComments\n    }\n\n    const pullRequestsReviews = async(data) => {\n        const pullRequests = pathOr([], ['data', 'result', 'pullRequests', 'edges'], data)\n\n        const getAllPullRequestReviews = async (pullRequest) => {\n            const currentReviews = pathOr([], ['node','reviews','edges'], pullRequest)\n            const reviewsQueryInfo = getQueryInfo('reviews')(pullRequest)\n\n            const allReviews = await recursiveFiller(reviewsQuery)(reviewsQueryInfo)(currentReviews)\n\n            return {\n                nodeId: pathOr('', ['node', 'id'], pullRequest),\n                results: { edges: allReviews },\n            }\n        }\n        const allPullRequestsReviews = await batch(pullRequests, getAllPullRequestReviews, 5)\n\n        return (data) => {\n            const updatedpullRequestsData = updatePullRequests(data)('reviews')(allPullRequestsReviews)\n\n            return {\n                data: Object.assign(propOr({}, 'data', data),\n                    {\n                        result: Object.assign(pathOr(\n                            {\n                                pullRequests: updatedpullRequestsData,\n                            },\n                            ['data', 'result'],\n                            data,\n                        )),\n                    }\n                ),\n            }\n        }\n    }\n\n    const updatePullRequests = data =>  key => pullRequestsItems => {\n        const pullRequestsData = pathOr({}, ['data', 'result', 'pullRequests'], data)\n        const currentPullRequests = pathOr([], ['data', 'result', 'pullRequests', 'edges'], data)\n\n        const mergedPullRequests = currentPullRequests\n            .map((currentPullRequest) => {\n                const nodeId = pathOr('', ['node', 'id'], currentPullRequest)\n                const item = pullRequestsItems\n                    .find(x => x.nodeId === nodeId)\n\n                return item\n                    ? updateRawData(currentPullRequest)(key)(item.results)\n                    : currentPullRequest\n\n            })\n\n        return Object.assign(pullRequestsData, { edges: mergedPullRequests })\n    }\n\n    const pullRequestsComments = async(data) => {\n        const pullRequests = pathOr([], ['data', 'result', 'pullRequests', 'edges'], data)\n\n        const getAllPullRequestComments = async (pullRequest) => {\n            const currentComments = pathOr([], ['node', 'comments', 'edges'], pullRequest)\n            const commentsQueryInfo = getQueryInfo('comments')(pullRequest)\n\n            const allComments = await recursiveFiller(commentsQuery)(commentsQueryInfo)(currentComments)\n\n            return {\n                nodeId: pathOr('', ['node','id'], pullRequest),\n                results: { edges: allComments },\n            }\n        }\n\n        const allPullRequestsComments = await batch(pullRequests, getAllPullRequestComments, 5)\n\n        return (data) => {\n            const updatedpullRequestsData = updatePullRequests(data)('comments')(allPullRequestsComments)\n\n            return {\n                data: Object.assign(propOr({}, 'data', data),\n                    {\n                        result: Object.assign(pathOr(\n                            {\n                                pullRequests: updatedpullRequestsData,\n                            },\n                            ['data', 'result'],\n                            data\n                        )),\n                    }\n                ),\n            }\n        }\n    }\n\n    return fillByType\n}\n\nexport default fillData\n","const types = {\n    SET_USER: 'SET_USER',\n    CLEAR_USER: 'CLEAR_USER',\n    SET_TEAM_NAME: 'SET_TEAM_NAME',\n    CLEAR_TEAM_NAME: 'CLEAR_TEAM_NAME',\n    STORE_ORG: 'STORE_ORG',\n    CLEAR_ORG: 'CLEAR_ORG',\n    STORE_TOKEN: 'STORE_TOKEN',\n    STORE_FORM_UNTIL_DATE: 'STORE_FORM_UNTIL_DATE',\n    CLEAR_FORM_UNTIL_DATE: 'CLEAR_FORM_UNTIL_DATE',\n    STORE_UNTIL_DATE: 'STORE_UNTIL_DATE',\n    CLEAR_UNTIL_DATE: 'CLEAR_UNTIL_DATE',\n    SET_PR_PAGINATION: 'SET_PR_PAGINATION',\n    CLEAR_PR_PAGINATION: 'CLEAR_PR_PAGINATION',\n    SET_RELEASES_PAGINATION: 'SET_RELEASES_PAGINATION',\n    CLEAR_RELEASES_PAGINATION: 'CLEAR_RELEASES_PAGINATION',\n    SET_ISSUES_PAGINATION: 'SET_ISSUES_PAGINATION',\n    CLEAR_ISSUES_PAGINATION: 'CLEAR_ISSUES_PAGINATION',\n    FETCH_STATUS: 'FETCH_STATUS',\n    FETCH_START: 'FETCH_START',\n    PRE_FETCH_ERROR: 'PRE_FETCH_ERROR',\n    CLEAR_PRE_FETCH_ERROR: 'CLEAR_PRE_FETCH_ERROR',\n    FETCH_ERROR: 'FETCH_ERROR',\n    CLEAR_FETCH_ERROR: 'CLEAR_FETCH_ERROR',\n    FETCH_END: 'FETCH_END',\n    STORE_REPOS: 'STORE_REPOS',\n    STORE_REPO: 'STORE_REPO',\n    CLEAR_REPO: 'CLEAR_REPO',\n    STORE_AMOUNT: 'STORE_AMOUNT',\n    STORE_SORT: 'STORE_SORT',\n    STORE_ENT_URL: 'STORE_ENT_URL',\n    STORE_EX_IDS: 'STORE_EX_IDS',\n    CLEAR_EX_IDS: 'CLEAR_EX_IDS',\n    STORE_USER_IDS: 'STORE_USER_IDS',\n    CLEAR_USER_IDS: 'CLEAR_USER_IDS',\n    ADD_PRS: 'ADD_PRS',\n    ADD_FILTERED_PRS: 'ADD_FILTERED_PRS',\n    CLEAR_PRS: 'CLEAR_PRS',\n    CLEAR_FILTERED_PRS: 'CLEAR_FILTERED_PRS',\n    ADD_ISSUES: 'ADD_ISSUES',\n    ADD_FILTERED_ISSUES: 'ADD_FILTERED_ISSUES',\n    CLEAR_FILTERED_ISSUES: 'CLEAR_FILTERED_ISSUES',\n    CLEAR_ISSUES: 'CLEAR_ISSUES',\n    ADD_RELEASES: 'ADD_RELEASES',\n    CLEAR_RELEASES: 'CLEAR_RELEASES',\n    TOGGLE_THEME: 'TOGGLE_THEME',\n    PREFETCHED_NAME: 'PREFETCHED_NAME',\n    CLEAR_PREFETCHED_NAME: 'CLEAR_PREFETCHED_NAME',\n    ADD_USERS_DATA: 'ADD_USERS_DATA',\n    CLEAR_USERS_DATA: 'CLEAR_USERS_DATA',\n}\n\nexport default types","// TODO: Think more about if this should maintain github api data structures\n// TODO: add tests\nimport {\n    always,\n    cond,\n    propOr,\n    pathOr,\n    propEq,\n    mergeDeepRight,\n    test,\n    T as alwaysTrue,\n    F as alwaysFalse,\n} from 'ramda'\nimport { compose } from 'redux'\n\nimport fillData from './fillers'\nimport types from '../state/types'\n\nconst parseJSON = response => new Promise((resolve, reject) => {\n    response.json()\n        .then(data => response.status === 200\n            ? resolve(data)\n            : reject(Object.assign(data, { status: response.status }))\n        )\n        .catch(error => {\n            console.log('-=-=--parseJSON error', error)\n            error.status = response.status\n            reject(error)\n        })\n})\n\nconst triggeredAbuseRate = ({ message = '' }) =>/(You have triggered an abuse detection mechanism|You have exceeded a secondary rate limit)/.test(message)\nconst triggeredJsonError = ({ message = '' }) =>/Unexpected end of JSON input/.test(message)\n\nconst apiCall = fetchInfo => query =>\n    fetch((fetchInfo.enterpriseAPI || 'https://api.github.com/graphql'), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${fetchInfo.token}`,\n        },\n        body: JSON.stringify({ query }),\n    })\n        .then(parseJSON)\n\nconst shouldGetNextPage = (hasNextPage, { amountOfData }) => cond([\n    [always(hasNextPage === false), alwaysFalse],\n    [always(hasNextPage && Number.isInteger(amountOfData) && amountOfData >= 1), alwaysTrue],\n    [always(hasNextPage && amountOfData === 'all'), alwaysTrue],\n    [alwaysTrue, alwaysFalse],\n])();\n\nconst pause = (ms = 30000) => new Promise(resolve => setTimeout(() => resolve(), ms))\nlet numRateTriggers = 0\n\nconst pauseThenRetry = async(apiInfo, results) => {\n    console.log('-=-=--paused', Date.now());\n    await pause();\n    console.log('-=-=--resume', Date.now());\n    ++numRateTriggers\n    return numRateTriggers <= 10\n        ? api(apiInfo, results)\n        : {\n            errorMessage: {\n                level: 'error',\n                message: 'Hit rate limit over ten times'\n            },\n            fetchInfo: apiInfo.fetchInfo,\n            results: results,\n        }\n}\n\nconst getCurrentItemsByType = (type = '', results = []) => {\n    const total = results\n        .reduce((acc, result) => {\n            const itemCount = pathOr([], ['data', 'result', type, 'edges'], result)\n                .length\n            return acc + itemCount\n        }, 0)\n\n    return total\n}\n\nconst getLatestDate = (type = '', results = []) => {\n    const latestResult = results.at(-1)\n    const latestResultItems = pathOr([], ['data', 'result', type, 'edges'], latestResult)\n\n    const targetItem = latestResultItems.at(-1)\n\n    const dateKey = type === 'pullRequests'\n        ? 'mergedAt'\n        : 'createdAt'\n\n    return pathOr('', ['node', dateKey], targetItem)\n}\n\nconst dateSort = (sortDirection) => (a, b) => sortDirection === 'DESC'\n    ? new Date(b).getTime() - new Date(a).getTime()\n    : new Date(a).getTime() - new Date(b).getTime()\n\nconst api = async({ fetchInfo, queryInfo, dispatch }, results = []) => {\n    const {\n        query,\n        resultInfo,\n        fillerType,\n        user,\n        sortDirection,\n    } = queryInfo(fetchInfo)\n\n    const [oldestItemWithNextPage] = [\n        fetchInfo.prPagination.hasNextPageForDate && getLatestDate('pullRequests', results),\n        fetchInfo.issuesPagination.hasNextPageForDate && getLatestDate('issues', results),\n        fetchInfo.releasesPagination.hasNextPageForDate && getLatestDate('releases', results),\n    ]\n        .filter(Boolean)\n        .sort(dateSort(sortDirection))\n\n    dispatch({\n        type: types.FETCH_STATUS,\n        payload: {\n            user,\n            prCount: getCurrentItemsByType('pullRequests', results),\n            latestItemDate: oldestItemWithNextPage,\n            issueCount: getCurrentItemsByType('issues', results),\n            releaseCount: getCurrentItemsByType('releases', results),\n        }\n    })\n\n    const apiCallWithToken = apiCall(fetchInfo)\n    try {\n        const result = await apiCallWithToken(query)\n        if (triggeredAbuseRate(result)) {\n            throw new Error('Abuse rate triggered');\n        }\n\n        const fullData = await fillData(apiCallWithToken)(fillerType)(result)\n        const updatedResults = [\n            ...results,\n            fullData\n        ]\n\n        const {\n            hasNextPage,\n            nextPageInfo,\n        } = resultInfo(result)\n\n        const updatedFetchInfo = mergeDeepRight(fetchInfo, nextPageInfo)\n\n        return shouldGetNextPage(hasNextPage, updatedFetchInfo)\n            ? api({ fetchInfo: updatedFetchInfo, queryInfo, dispatch }, updatedResults)\n            : {\n                fetchInfo: updatedFetchInfo,\n                results: updatedResults,\n            }\n    } catch (error) {\n        const hasTriggeredAbuse = cond([\n            [triggeredAbuseRate, alwaysTrue],\n            [triggeredJsonError, alwaysTrue],\n            [propEq('status', 500), alwaysTrue],\n            [propEq('status', 502), alwaysTrue],\n            [propEq('message', 'Abuse rate triggered'), alwaysTrue],\n            [compose(test(/ENOTFOUND|ECONNRESET/), propOr('', 'code')), alwaysTrue],\n            [compose(test(/fetch/i), propOr('', 'message')), alwaysTrue],\n            [alwaysTrue, alwaysFalse],\n        ])\n        const getErrorMessage = cond([\n            [\n                hasTriggeredAbuse,\n                always({\n                    level: 'warn',\n                    message: 'You may have triggered the api\\'s abuse detection, please wait a minute before trying again',\n                })\n            ],\n            [\n                compose(test(/50\\d/i), propOr('', 'status')),\n                always({\n                    level: 'error',\n                    message: 'GitHub API 500 error, could be CORS or rate limiting',\n                }),\n            ],\n            [\n                propEq('status', 401),\n                always({\n                    level: 'error',\n                    message: 'GitHub token does not have correct settings, please see README',\n                }),\n            ],\n            [\n                compose(test(/40\\d/i), propOr('', 'status')),\n                always({\n                    level: 'error',\n                    message: `Auth error: ${error.message || 'UNKOWN'}`,\n                })\n            ],\n            [\n                propEq('status', undefined),\n                always({\n                    level: 'error',\n                    message: 'Error while processing data after, please check the console',\n                })\n            ],\n            [\n                alwaysTrue,\n                always({\n                    level: 'error',\n                    message: `ERROR: ${error.message || 'UNKOWN'}`,\n                })\n            ]\n        ])\n\n        const errorMessage = getErrorMessage(error)\n\n        if (hasTriggeredAbuse(error)) {\n            return pauseThenRetry({ fetchInfo, queryInfo, dispatch }, results)\n        } else {\n            throw new Error(errorMessage.message)\n        }\n    }\n}\n\nexport default api","import { userQuery } from './queries'\nimport { mergeDeepRight, prop } from 'ramda'\nimport api from './api'\nimport batch from './batch'\n\nconst getUsersData = async({ fetchInfo, untilDate, dispatch }) => {\n    try {\n        const userIds = fetchInfo.userIds\n        const data = userIds\n            .map((user) => ({\n                fetchInfo: {\n                    ...fetchInfo,\n                    issuesPagination: fetchInfo.issuesPagination[user] || { hasNextPage: true },\n                    prPagination: fetchInfo.prPagination[user] || { hasNextPage: true },\n                    user,\n                },\n                queryInfo: userQuery(untilDate),\n                dispatch,\n            }))\n        const allUsersData = await batch(data, api, 1)\n\n        const paginationInfo = {\n            issuesPagination: {},\n            prPagination: {},\n        }\n\n        const allResults = []\n        allUsersData\n            .forEach(({ fetchInfo, results }) => {\n                allResults.push(results)\n\n                const user = prop('user', fetchInfo)\n\n                paginationInfo.issuesPagination[user] = prop('issuesPagination', fetchInfo)\n                paginationInfo.prPagination[user] = prop('prPagination', fetchInfo)\n            })\n\n        const finalFetchInfo = mergeDeepRight(fetchInfo, paginationInfo)\n\n        const usersData = {\n            fetchInfo: finalFetchInfo,\n            results: allResults.flat(),\n        }\n\n        return usersData\n    } catch (error) {\n        console.log('-=-=--getUsersData:error', error)\n        throw error\n    }\n}\n\nexport default getUsersData\n","import {\n    add,\n    sub,\n } from 'date-fns'\n\nimport {\n    allPass,\n    always,\n    compose,\n    prop,\n    propEq,\n    propOr,\n    path,\n    is,\n    isEmpty,\n    cond,\n    T as alwaysTrue,\n} from 'ramda'\n\nconst getPrDate = (sortDirection, allPrs = []) => {\n    const prIndex = sortDirection === 'DESC'\n        ? 0\n        : -1\n\n    const pr = allPrs.at(prIndex)\n\n    const currentEndDate = path(['node', 'mergedAt'], pr) || prop('mergedAt', pr)\n\n    return new Date(currentEndDate)\n}\n\nconst getUntilDate = (fetches = {}, allPrs = []) => {\n    const {\n        untilDate = '',\n        amountOfData = 0,\n    } = fetches\n    // get first item from each result, sort then use that as base date to calculate from\n    const changeBy = { months: amountOfData }\n\n    const amountOfDataIsString = compose(\n        is(String),\n        prop('amountOfData')\n    )\n\n    const isDesc = propEq('sortDirection', 'DESC')\n    const isAsc = propEq('sortDirection', 'ASC')\n\n    const noDateUntil = compose(\n        isEmpty,\n        prop('untilDate')\n    )\n\n    const subtractDate = compose(\n        x => sub(x, changeBy),\n        x => x ? new Date(x) : new Date(),\n        prop('untilDate'),\n    )\n\n    const dateFromPRs = compose(\n        ({ prDate, sortDirection }) => sortDirection === 'DESC'\n            ? sub(prDate, changeBy)\n            : add(prDate, changeBy),\n        sortDirection => ({\n            prDate: getPrDate(sortDirection, allPrs),\n            sortDirection\n        }),\n        propOr('', 'sortDirection'),\n    )\n\n    const newUntilDate = cond([\n        [amountOfDataIsString, always('')],\n        [allPass([noDateUntil, () => allPrs.length > 0]), dateFromPRs],\n        [isDesc, subtractDate],\n        [isAsc, () => add(new Date(untilDate), changeBy)],\n        [alwaysTrue, always('')],\n    ])(fetches)\n\n    return newUntilDate\n}\n\nexport default getUntilDate\n","const sumKeysValue = (key = '') => (items = []) => items\n    .reduce((acc, current = {}) => (current[key] || 0) + acc, 0)\n\nconst sumObjectKeys = (keys = []) => (obj = {}) => keys\n    .reduce((acc, key) => acc + (obj[key] || 0), 0)\n\nconst sortByKeys = (keys = []) => (a, b) => {\n    const sumKeysFrom = sumObjectKeys(keys)\n    const aTotal = sumKeysFrom(a)\n    const bTotal = sumKeysFrom(b)\n\n    return bTotal - aTotal\n}\n\nexport {\n    sumKeysValue,\n    sortByKeys,\n}","const slimValue = (value) => {\n    const newValue = (typeof value === 'string' && value.length && value) // picks defined string\n        || (/^-?[\\d.]+$/.test(`${value}`) && /^-?[^0]/.test(`${value}`) && value) // picks non 0 number\n        || (Array.isArray(value) && value.length && slimArray(value)) // picks defined array\n        || (value && Object.keys(value).length && slimObject(value)) // picks defiend object\n        || (typeof value === 'boolean' && value) // allows boolean, false will be ignored\n\n    return newValue\n}\n\nconst slimArray = arr => {\n    const newArray = []\n    arr\n        .forEach((item) => {\n            const value = slimValue(item)\n            value && newArray.push(value)\n        })\n\n    return newArray.length && newArray\n}\n\nconst slimObject = obj => {\n    const newObject = {}\n    Object.entries(obj)\n        .forEach(([key, value]) => {\n            const newValue = slimValue(value)\n            newValue && (newObject[key] = newValue)\n        });\n\n    return Object.keys(newObject).length && newObject\n}\n\nexport {\n    slimValue,\n    slimArray,\n    slimObject,\n}\n","\nimport { sum } from 'ramda'\nimport { sortByKeys } from '../utils'\n\nconst baseUserData = {\n    author: '',\n    approvalsGiven: 0,\n    approvalsByUser: {},\n    commentsGiven: 0,\n    commentsReceived: 0,\n    codeCommentsGiven: 0,\n    codeCommentsReceived: 0,\n    generalCommentsGiven: 0,\n    generalCommentsReceived: 0,\n    totalPRs: 0,\n    uniquePRsContributedTo: 0,\n    commentsByUser: {},\n}\n\nconst updateContributorCount = (currentData, objKey, obj, addition) => {\n    const contributorCount = {}\n    Object.entries(obj)\n        .forEach(([key, value]) => {\n            const prevData = currentData[key] || {}\n            const updated = {\n                ...baseUserData,\n                ...prevData,\n                user: key,\n                [objKey]: (prevData[objKey] || 0) + (addition || value),\n            }\n\n            contributorCount[key] = updated\n        })\n\n    return contributorCount\n}\n\nconst updateByUsersCount = (currentData, objKey, obj, author) => {\n    const byUsersCount = {}\n    Object.entries(obj)\n        .forEach(([key, value]) => {\n            const currentUserData = currentData[key] || {}\n            const currentKeyData = currentUserData[objKey] || {}\n            const updatedKeyData = {\n                ...currentKeyData,\n                [author]: (currentKeyData[author] || 0) + (value || 0),\n            }\n\n            const updated = {\n                ...baseUserData,\n                ...currentUserData,\n                author: key,\n                [objKey]: updatedKeyData,\n            }\n\n            byUsersCount[key] = updated\n        })\n\n    return byUsersCount\n}\n\nconst formatUserData = (data = []) => {\n    // TODO: This is too complex, break it down into something that makes more sense\n    const userData = data\n        .reduce((acc, prData) => {\n            const {\n                author,\n                prSize = 0,\n                age = 0,\n                approvals = 0,\n                approvers = {},\n                comments = 0,\n                commenters = {},\n                codeComments = 0,\n                codeCommenters = {},\n                generalComments = 0,\n                generalCommenters = {},\n            } = prData\n\n            const updatedCommentsByUser = updateByUsersCount(acc, 'commentsByUser', commenters, author)\n            Object.assign(acc, updatedCommentsByUser)\n\n            const updatedApprovalsByUser = updateByUsersCount(acc, 'approvalsByUser', approvers, author)\n            Object.assign(acc, updatedApprovalsByUser)\n\n            const updatedCommentsGiven = updateContributorCount(acc, 'commentsGiven', commenters)\n            Object.assign(acc, updatedCommentsGiven)\n\n            const updatedCodeCommentsGiven = updateContributorCount(acc, 'codeCommentsGiven', codeCommenters)\n            Object.assign(acc, updatedCodeCommentsGiven)\n\n            const updatedGeneralCommentsGiven = updateContributorCount(acc, 'generalCommentsGiven', generalCommenters)\n            Object.assign(acc, updatedGeneralCommentsGiven)\n\n            const updatedApprovalsGiven = updateContributorCount(acc, 'approvalsGiven', approvers)\n            Object.assign(acc, updatedApprovalsGiven)\n\n            const updatedUniquePRsApproved = updateContributorCount(acc, 'uniquePRsApproved', approvers, 1)\n            Object.assign(acc, updatedUniquePRsApproved)\n\n            const contrtibutors = [...new Set([\n                ...Object.keys(codeCommenters),\n                ...Object.keys(generalCommenters),\n                ...Object.keys(approvers),\n            ])]\n\n            contrtibutors\n                .forEach((key) => {\n                    const prevData = acc[key] || {}\n                    const updated = {\n                        ...baseUserData,\n                        ...prevData,\n                        author: key,\n                        uniquePRsContributedTo: (prevData.uniquePRsContributedTo || 0) + 1,\n                    }\n\n                    Object.assign(acc, { [key]: updated })\n                })\n\n\n            const prevData = acc[author] || {}\n\n            const prSizes = [...(prevData.prSizes || []), prSize]\n            const averagePrSize = Math.round(sum(prSizes) / prSizes.length)\n\n            const prAges = [...(prevData.prAges || []), age]\n            const averagePrAge = Math.round(sum(prAges) / prAges.length)\n\n            return Object.assign(acc, {\n                [author]: {\n                    ...baseUserData,\n                    ...prevData,\n                    author,\n                    user: author,\n                    approvalsReceived: (prevData.approvalsReceived || 0) + approvals,\n                    commentsReceived: (prevData.commentsReceived || 0) + comments,\n                    codeCommentsReceived: (prevData.codeCommentsReceived || 0) + codeComments,\n                    generalCommentsReceived: (prevData.generalCommentsReceived || 0) + generalComments,\n                    totalPRs: (prevData.totalPRs || 0) + 1,\n                    prSizes,\n                    prSize: averagePrSize,\n                    prAges,\n                    age: averagePrAge,\n                },\n            })\n\n        }, {})\n\n\n    const uniqueAuthors = [...new Set(data.map(x => x.author))]\n\n    const newUsersData = Object.values(userData)\n        .filter(({ author }) => uniqueAuthors.some(x => x === author))\n\n    const keys = [\n        'commentsGiven',\n        'commentsReceived',\n        'approvalsGiven',\n        'approvalsReceived',\n    ]\n\n    const sortedUsers = newUsersData\n        .sort(sortByKeys(keys))\n\n    return sortedUsers\n}\n\nexport default formatUserData","import {\n    anyPass,\n    assoc,\n    dissocPath,\n    equals,\n    filter,\n    is,\n    not,\n    map,\n    path,\n    pickAll,\n    pipe,\n    split,\n    trim,\n    propOr,\n    pick,\n    toPairs,\n    values,\n} from 'ramda'\nimport api from '../api/api'\nimport getUsersData from '../api/getUsersData'\nimport getUntilDate from '../api/getUntilDate'\nimport {\n    formatPullRequests,\n    filterSortPullRequests,\n    formatIssues,\n    filterSortIssues,\n    formatReleases,\n} from '../format/rawData'\nimport { slimObject } from '../format/lightenData'\nimport { batchedQuery } from '../api/queries'\nimport formatUserData from '../format/userData'\nimport types from './types'\n\nconst setUser = (user = '') => ({\n    type: types.SET_USER,\n    payload: user,\n})\n\nconst toggleTheme = () => ({\n    type: types.TOGGLE_THEME,\n})\n\nconst clearUser = () => ({\n    type: types.CLEAR_USER,\n})\n\nconst storeToken = (token = '') => ({\n    type: types.STORE_TOKEN,\n    payload: token,\n})\n\nconst storeOrg = (org = '') => (dispatch) => dispatch({\n    type: types.STORE_ORG,\n    payload: org,\n})\n\nconst storeEnterpriseAPI = (enterpriseAPI = '') => (dispatch) => dispatch({\n    type: types.STORE_ENT_URL,\n    payload: enterpriseAPI,\n})\n\nconst storeTeamName = (teamName = '') => (dispatch) => dispatch({\n    type: types.SET_TEAM_NAME,\n    payload: teamName,\n})\n\nconst userIdsFromString = pipe(\n    split(','),\n    map(trim),\n    filter(Boolean)\n)\n\nconst storeUserIds = (userIds = '') => (dispatch) => {\n    const userIdsArray = userIdsFromString(userIds)\n\n    return dispatch({\n        type: types.STORE_USER_IDS,\n        payload: userIdsArray,\n    })\n}\n\nconst storeExcludeIds = (excludeIds = '') => (dispatch) => {\n    const excludeArray = userIdsFromString(excludeIds)\n\n    return dispatch({\n        type: types.STORE_EX_IDS,\n        payload: excludeArray,\n    })\n}\n\nconst storeRepo = (repo = '') => (dispatch) => dispatch({\n    type: types.STORE_REPO,\n    payload: repo,\n})\n\nconst storeAmountOfData = (amountOfData = '') => (dispatch) => dispatch({\n    type: types.STORE_AMOUNT,\n    payload: amountOfData,\n})\n\nconst storeFormUntilDate = (amountOfData = '') => (dispatch, getState) => {\n    const {\n        fetches  = {},\n        pullRequests = [],\n    } = getState();\n\n    const formUntilDate = getUntilDate(\n        {\n            ...fetches,\n            amountOfData\n        },\n        pullRequests\n    )\n\n    dispatch({\n        type: types.STORE_FORM_UNTIL_DATE,\n        payload: formUntilDate,\n    })\n}\n\nconst storeUntilDate = (untilDate = '') => (dispatch) => dispatch({\n    type: types.STORE_UNTIL_DATE,\n    payload: untilDate,\n})\n\nconst storeSortDirection = (sortDirection = 'DESC') => (dispatch) => dispatch({\n    type: types.STORE_SORT,\n    payload: sortDirection,\n})\n\n\nconst notSameStringValues = (formValues = {}) => (key = '') => (fetches = {}) =>\n    formValues[key] && fetches[key] && formValues[key] !== fetches[key]\nconst notSameArrayValues = (formValues = {}) => (key = '') => (fetches = {}) => {\n    const idsString = propOr('', key, formValues)\n    const formIds = userIdsFromString(idsString)\n\n    const currentIds = fetches[key]\n    return currentIds.length && not(equals(currentIds, formIds))\n}\n\n// TODO: regression test\nconst clearPastSearch = (values) => (dispatch, getState) => {\n    const {\n        fetches = {}\n    } = getState()\n\n    const notSameValues = notSameStringValues(values)\n    const notSameIds = notSameArrayValues(values)\n\n    const isNewSearch = anyPass([\n        notSameValues('org'),\n        notSameValues('repo'),\n        notSameValues('teamName'),\n        notSameValues('enterpriseAPI'),\n        notSameIds('userIds'),\n        notSameIds('excludeIds'),\n    ])(fetches)\n\n    isNewSearch\n        && clearData(dispatch)\n}\n\nconst clearData = (dispatch) => {\n    dispatch({ type: types.CLEAR_ORG })\n    dispatch({ type: types.CLEAR_REPO })\n    dispatch({ type: types.CLEAR_USER })\n    dispatch({ type: types.CLEAR_PRS })\n    dispatch({ type: types.CLEAR_FILTERED_PRS })\n    dispatch({ type: types.CLEAR_PR_PAGINATION })\n    dispatch({ type: types.CLEAR_PREFETCHED_NAME })\n    dispatch({ type: types.CLEAR_UNTIL_DATE })\n    dispatch({ type: types.CLEAR_FORM_UNTIL_DATE })\n    dispatch({ type: types.CLEAR_USER_IDS })\n    dispatch({ type: types.CLEAR_EX_IDS })\n    dispatch({ type: types.CLEAR_USERS_DATA })\n    dispatch({ type: types.CLEAR_TEAM_NAME })\n    dispatch({ type: types.CLEAR_RELEASES })\n    dispatch({ type: types.CLEAR_RELEASES_PAGINATION })\n    dispatch({ type: types.CLEAR_ISSUES })\n    dispatch({ type: types.CLEAR_FILTERED_ISSUES })\n    dispatch({ type: types.CLEAR_ISSUES_PAGINATION })\n    dispatch({ type: types.CLEAR_FETCH_ERROR })\n    dispatch({ type: types.CLEAR_PRE_FETCH_ERROR })\n}\n\nconst clearAllData = clearData\n\n// Hmm: full users format per new pr results\nconst updateUsersData = (dispatch, getState) => {\n    const { pullRequests } = getState()\n\n    dispatch({\n        type: types.ADD_USERS_DATA,\n        payload: formatUserData(pullRequests),\n    })\n}\n\nconst getErrorMessage = state => {\n    const {\n        fetches: {\n            org,\n            repo,\n            token,\n            userIds = [],\n        } = {},\n    } = state\n\n    const noUserIds = userIds.length < 1\n\n    const missing = [\n        noUserIds && !org && 'Organization',\n        noUserIds && !repo && 'Repository',\n        !token &&'GitHib token',\n        !org && !repo && noUserIds && 'GitHub Ids',\n    ]\n        .filter(Boolean)\n\n    const prepend = (i) => {\n        const maxIndex = missing.length - 1\n\n        return [\n            i === 0\n            && (() => 'Missing '),\n            i === maxIndex\n            && (() => ' and '),\n            i > 0\n            && (() => ', '),\n        ].find(Boolean)()\n    }\n\n    const message = missing\n        .reduce((acc, current, i) => acc + prepend(i) + current, '')\n\n    return message\n}\n\nconst validateRequest = state => {\n    const {\n        fetches: {\n            org,\n            repo,\n            token,\n            userIds = [],\n        } = {},\n    } = state\n\n    const stringArgs = userIds.length\n        ? [token]\n        : [org, repo, token]\n\n    const validStringArgs = stringArgs\n        .every(item => typeof item === 'string' && item.length > 0)\n\n    const arrayArgs = userIds.length\n        ? [userIds]\n        : []\n\n    const validArraygArgs = arrayArgs\n        .every(item => item.length > 0)\n\n    const isValid = validStringArgs && validArraygArgs\n\n    return {\n        isValid,\n        error: !isValid\n            ? {\n                level: 'error',\n                message: getErrorMessage(state),\n            }\n            : null,\n    }\n}\n\nconst getAPIData = ({ appendData = false } = {}) => async (dispatch, getState) => {\n    const state = getState();\n\n    const { isValid: isValidRequest, error = {}} = validateRequest(state);\n\n    !isValidRequest && dispatch({\n        type: types.FETCH_ERROR,\n        payload: error,\n    })\n\n    isValidRequest && dispatch({\n        type: types.CLEAR_FETCH_ERROR,\n    })\n\n    isValidRequest && dispatch({\n        type: types.FETCH_START,\n    })\n\n    try {\n        const {\n            fetches,\n            filteredPRs = [],\n            pullRequests = [],\n            issues = [],\n            filteredIssues = [],\n            formUntilDate = '',\n        } = getState();\n        const userIds = propOr([], 'userIds', fetches)\n\n        const untilDate = formUntilDate\n\n        const { fetchInfo, results } = userIds.length\n            ? await getUsersData({ fetchInfo: fetches, untilDate, dispatch })\n            : await api({ fetchInfo: fetches, queryInfo: batchedQuery(untilDate), dispatch })\n\n        const newPullrequests = formatPullRequests(fetches, results)\n        // Get all prs together so then can be cleanly filtered and sorted\n        const allPullrequests = pullRequests.concat(filteredPRs).concat(newPullrequests)\n        const [newRemainingPRs, newFilteredPRs] = filterSortPullRequests(fetches, untilDate, allPullrequests)\n\n        const releases = formatReleases(results)\n\n        const newIssues = formatIssues(results)\n        const allIssues = issues.concat(filteredIssues).concat(newIssues)\n        const [newRemainingIssues, newFilteredIssues] = filterSortIssues(fetches, untilDate, allIssues)\n\n        dispatch({\n            type: types.ADD_PRS,\n            payload: newRemainingPRs,\n        })\n\n        dispatch({\n            type: types.ADD_FILTERED_PRS,\n            payload: newFilteredPRs,\n        })\n\n        dispatch(updateUsersData)\n\n        dispatch({\n            type: types.ADD_RELEASES,\n            payload: releases,\n        })\n\n        dispatch({\n            type: types.ADD_ISSUES,\n            payload: newRemainingIssues,\n        })\n\n        dispatch({\n            type: types.ADD_FILTERED_ISSUES,\n            payload: newFilteredIssues,\n        })\n\n        dispatch({\n            type: types.STORE_UNTIL_DATE,\n            payload: formUntilDate,\n        })\n\n        const pageInfo = (info = {}) => {\n            const picks = pick(['newest', 'oldest'])\n\n            const nextLevel = {}\n            toPairs(info)\n                .filter(([, value]) => is(Object, value) && values(picks(value)).length > 0)\n                .forEach(([key, value]) => {\n                    nextLevel[key] = picks(value)\n                })\n\n            return {\n                ...picks(info),\n                ...nextLevel,\n            }\n        }\n\n        dispatch({\n            type: types.SET_PR_PAGINATION,\n            payload: pageInfo(fetchInfo.prPagination),\n        })\n\n        dispatch({\n            type: types.SET_ISSUES_PAGINATION,\n            payload: pageInfo(fetchInfo.issuesPagination),\n        })\n\n        dispatch({\n            type: types.SET_RELEASES_PAGINATION,\n            payload: pageInfo(fetchInfo.releasesPagination),\n        })\n\n        dispatch({ type: types.FETCH_END })\n\n    } catch (error) {\n        dispatch({\n            type: types.FETCH_ERROR,\n            payload: {\n                level: 'error',\n                message: error.message || 'Unknown error',\n            },\n        })\n        dispatch({ type: types.FETCH_END })\n    }\n}\n\nconst setPreFetchedData = (repoData = {}, dispatch) => {\n    const {\n        fetches = {},\n        preFetchedName = '',\n        pullRequests = [],\n        usersData= [],\n        issues = [],\n        releases = [],\n    } = repoData\n\n    const {\n        teamName = '',\n        userIds = [],\n        excludeIds = [],\n    } = fetches\n\n    clearData(dispatch)\n\n    const fetchesInfo = [\n        ['token', 'STORE_TOKEN'],\n        ['org', 'STORE_ORG'],\n        ['repo', 'STORE_REPO'],\n        ['enterpriseAPI', 'STORE_ENT_URL'],\n        ['prPagination', 'SET_PR_PAGINATION', {}],\n        ['releasesPagination', 'SET_RELEASES_PAGINATION', {}],\n        ['issuesPagination', 'SET_ISSUES_PAGINATION', {}]\n    ];\n\n    fetchesInfo.forEach(([payload, type, fallback = '']) => {\n        dispatch({\n            type: types[type],\n            payload: fetches[payload] || fallback,\n        })\n    });\n\n    dispatch({\n        type: types.PREFETCHED_NAME,\n        payload: preFetchedName,\n    })\n\n    dispatch({\n        type: types.SET_TEAM_NAME,\n        payload: teamName,\n    })\n\n    dispatch({\n        type: types.STORE_USER_IDS,\n        payload: userIds,\n    })\n\n    dispatch({\n        type: types.STORE_EX_IDS,\n        payload: excludeIds,\n    })\n\n    dispatch({\n        type: types.ADD_PRS,\n        payload: pullRequests,\n    })\n    dispatch({\n        type: types.ADD_USERS_DATA,\n        payload: usersData.length\n            ? usersData\n            : formatUserData(pullRequests),\n    })\n\n    dispatch({\n        type: types.ADD_ISSUES,\n        payload: issues,\n    })\n\n    dispatch({\n        type: types.ADD_RELEASES,\n        payload: releases,\n    })\n\n    dispatch({\n        type: types.FETCH_END,\n    })\n}\n\nconst parseJSON = response => new Promise((resolve, reject) => {\n    response.json()\n        .then(data => response.status === 200\n            ? resolve(data)\n            : reject(new Error(`Error status code ${response.status}`))\n        )\n        .catch(error => {\n            console.log('-=-=--parseJSON error', error)\n            error.status = response.status\n            reject(error)\n        })\n})\n\nconst getPreFetched = ({ name = '', file = '' }) => async (dispatch) => {\n    clearData(dispatch)\n    dispatch({\n        type: types.CLEAR_PRE_FETCH_ERROR,\n    })\n    dispatch({ type: types.FETCH_START })\n    dispatch({\n        type: types.FETCH_STATUS,\n        payload: { savedReportName: name }\n    })\n\n    try {\n        const reportData = await fetch(`https://n07734.github.io/community-health/data/${file}.json`)\n            .then(parseJSON)\n\n        setPreFetchedData(reportData, dispatch)\n\n    } catch (error) {\n        console.log('-=-=--api data error', error, error.status)\n\n        const message = error.status !== 200\n            ? `Error status code ${error.status} loading ${file}`\n            : `${error.message} loading ${file}`\n\n        dispatch({\n            type: types.PRE_FETCH_ERROR,\n            payload: {\n                level: 'error',\n                message: message || 'Unknown error',\n            },\n        })\n        dispatch({ type: types.FETCH_END })\n    }\n}\n\nconst getDownloadProps = (dispatch, getState) => {\n    const state = getState()\n\n    const repo = path(['fetches', 'repo'], state)\n    const teamName = path(['fetches', 'teamName'], state)\n    const fileName = teamName\n        ? teamName\n        : `${path(['fetches', 'org'], state)}-${repo}`\n\n    const getReportData = pipe(\n        pickAll(['fetches', 'pullRequests', 'filteredPRs', 'userData', 'issues', 'filteredIssues', 'releases', 'teamName']),\n        dissocPath(['fetches', 'token']),\n        dissocPath(['fetches', 'amountOfData']),\n        // TODO: strip hasNextPage from user's pagination data\n        dissocPath(['fetches', 'prPagination', 'hasNextPage']),\n        dissocPath(['fetches', 'issuesPagination', 'hasNextPage']),\n        dissocPath(['fetches', 'releasesPagination', 'hasNextPage']),\n        assoc('preFetchedName', fileName),\n        slimObject\n    )\n\n    const reportData = getReportData(state)\n    const json = JSON.stringify(reportData, null, 2)\n    const blob = new Blob([json], { type: \"application/json\" })\n    const href  = URL.createObjectURL(blob)\n\n    return {\n        href,\n        download: `${fileName}.json`,\n    }\n}\n\nconst checkUntilDate = (newSortDirection = '') => (dispatch, getState) => {\n    const {\n        sortDirection = '',\n    } = getState();\n\n    sortDirection !== newSortDirection\n        && dispatch({ type: types.CLEAR_UNTIL_DATE })\n        && dispatch({ type: types.CLEAR_FORM_UNTIL_DATE })\n}\n\nexport {\n    setUser,\n    clearAllData,\n    clearUser,\n    clearPastSearch,\n    storeOrg,\n    storeToken,\n    storeRepo,\n    storeTeamName,\n    storeEnterpriseAPI,\n    storeUserIds,\n    storeExcludeIds,\n    storeAmountOfData,\n    storeFormUntilDate,\n    storeUntilDate,\n    storeSortDirection,\n    getAPIData,\n    getPreFetched,\n    toggleTheme,\n    getDownloadProps,\n    checkUntilDate,\n}\n","import React from 'react'\nimport {\n    Button as CoreButton,\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst Button = ({\n    className,\n    classes,\n    onClick,\n    key,\n    value,\n    text,\n    type = 'submit',\n    color = 'inherit',\n} = {}) => (\n    <CoreButton\n        className={[classes.root, (className || '')].join(' ')}\n        variant=\"contained\"\n        size=\"small\"\n        type={type}\n        color={color}\n        value={value}\n        key={key}\n        onClick={onClick}\n    >\n        {text || value}\n    </CoreButton>\n)\n\nconst styles = theme => ({\n    root: {\n        marginRight: theme.mySpacing.x.small,\n        marginBottom: theme.mySpacing.y.small,\n    },\n})\nexport default withStyles(styles)(Button)","import React from 'react'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { P } from '../shared/StyledTags'\n\nconst variant = {\n    'warn': <WarningIcon />,\n    'error': <ErrorIcon />,\n}\n\nconst Message = ({\n    error: {\n        level,\n        message,\n    },\n    classes,\n    className,\n} = {}) => (\n    <div className={`${classes[level]} ${classes.root} ${className}`} >\n        {variant[level]}\n        <P className={classes.copy}>{message}</P>\n    </div>\n)\n\nconst styles = theme => ({\n    root: {\n        padding: '0.8rem',\n        display: 'flex',\n        alignItems: 'center',\n        borderRadius: '4px',\n    },\n    copy: {\n        margin: 0,\n        marginLeft: theme.mySpacing.y.medium,\n        padding: 0,\n        color: '#000',\n    },\n    error: {\n        backgroundColor: '#e02e2e',\n    },\n    warn: {\n        backgroundColor: '#dc7e09',\n    },\n})\nexport default withStyles(styles)(Message)","const styles = theme => ({\n    inputGrid: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        marginBottom: '1rem',\n        columnGap: '8px',\n        rowGap: '8px', // BUG: theme.spacing.unit does not have px for row but does for column, odd\n        '@media (max-width: 768px)': {\n            gridTemplateColumns: 'repeat(1, 1fr)',\n        },\n        '& button': {\n            minHeight: '3rem',\n        },\n        '& .tokenText' : {\n            gridColumn:'1 / -1'\n        }\n    },\n    typeOptions: {\n        display: 'flex',\n        '& button': {\n            flexGrow: 1,\n            fontSize: '1.3rem',\n            textTransform: 'none',\n        },\n    },\n    link: {\n        color: theme.palette.link,\n    },\n    fullRow: {\n        gridColumn:'1 / -1',\n    },\n    formDescription: {\n        marginBottom: '0',\n    },\n    dataPaper: {\n        display: 'block',\n    },\n    child: {\n        margin: 0,\n        width: '100%'\n    },\n    copy: {\n        display: 'inline',\n    },\n    preFetched: {\n        marginBottom: '1rem',\n    },\n})\n\nexport default styles\n","const preFetchedRepos = [\n    {\n        name: 'React',\n        file: 'facebook-react',\n    },\n    {\n        name: 'Vite',\n        file: 'vitejs-vite',\n    },\n    {\n        name: 'Typescript',\n        file: 'microsoft-typescript'\n    },\n    {\n        name: 'Jest',\n        file: 'facebook-jest',\n    },\n    {\n        name: 'Vitest',\n        file: 'vitest-dev-vitest',\n    },\n    {\n        name: 'Prettier',\n        file: 'prettier-prettier',\n    },\n    {\n        name: 'Cypress',\n        file: 'cypress-io-cypress',\n    },\n    {\n        name: 'Playwright',\n        file: 'microsoft-playwright',\n    },\n    {\n        name: 'React Testing Library',\n        file: 'testing-library-react-testing-library',\n    },\n    {\n        name: 'vscode',\n        file: 'microsoft-vscode',\n    },\n    {\n        name: 'Material',\n        file: 'mui-org-material',\n    },\n    {\n        name: 'Remix',\n        file: 'remix-run-remix',\n    },\n    {\n        name: 'Node',\n        file: 'nodejs-node',\n    },\n    {\n        name: 'Deno',\n        file: 'denoland-deno',\n    },\n    {\n        name: 'Swift',\n        file: 'apple-swift',\n    },\n    {\n        name: 'Kotlin',\n        file: 'JetBrains-Kotlin',\n    },\n    {\n        name: 'Babel',\n        file: 'babel-babel',\n    },\n]\n\nconst preFetchedTeams = [\n    {\n        name: 'ReactCore',\n        file: 'ReactCore',\n    },\n    {\n        name: 'ViteCore',\n        file: 'ViteCore',\n    },\n    {\n        name: 'SvelteCore',\n        file: 'SvelteCore',\n    },\n    {\n        name: 'TypeScriptCore',\n        file: 'TypeScriptCore',\n    },\n]\n\nexport {\n    preFetchedRepos,\n    preFetchedTeams,\n}\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\nimport { pathOr } from 'ramda'\n\nimport Button from '../../shared/Button'\nimport Message from '../Message'\nimport { P } from '../../shared/StyledTags'\nimport styles from './styles'\nimport { getPreFetched } from '../../../state/actions'\nimport {\n    preFetchedRepos,\n    preFetchedTeams,\n} from '../../../preFetchedInfo'\n\nconst PrefetchedOptions = (props = {}) => {\n    const {\n        classes,\n        error,\n        preFetchedName = '',\n        getPreFetchedReport,\n    } = props\n\n    useEffect(() => {\n        const quertString = pathOr('', ['location', 'search'], window)\n        const urlParams = new URLSearchParams(quertString);\n        const repo = urlParams.get('repo') || 'facebook-react';\n\n        const allItems = [\n            ...preFetchedRepos,\n            ...preFetchedTeams,\n        ]\n        const repoInfo = allItems\n            .find(x => x.file === repo)\n\n        getPreFetchedReport(repoInfo)\n    }, [getPreFetchedReport])\n\n    const preFetchButton = ({ name, file }, i) => <Button\n        value={name}\n        key={i}\n        color={preFetchedName === file ? 'primary' : 'secondary'}\n        onClick={(e) => {\n            e.preventDefault()\n            getPreFetchedReport({ name, file })\n        }}\n    />\n    // TODO: ajax prefetched on load? or have first in bundle\n    return (\n        <div className={classes.preFetched}>\n            <P>\n                See community contribution health of some popular Open Source repositories.\n            </P>\n            {\n                preFetchedRepos\n                    .map(preFetchButton)\n            }\n                <P>See contribution health of some popular OSS teams</P>\n                {\n                    preFetchedTeams\n                        .map(preFetchButton)\n                }\n                {\n                    error\n                        && <Message\n                            error={error}\n                            className={classes.fullRow}\n                        />\n                }\n            </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    preFetchedName: state.preFetchedName,\n    error: state.preFetchedError,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getPreFetchedReport: (x) => dispatch(getPreFetched(x)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(PrefetchedOptions))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Select,\n    MenuItem,\n} from '@material-ui/core'\n\nconst SelectAmountData = (props = {}) => {\n    const {\n        setValue,\n        amountOfData,\n        pullRequests = [],\n        preFetchedName = '',\n    } = props\n\n    const hasTeamData = !preFetchedName && pullRequests.length > 0\n\n    const itemText = (amount) => `Get ${amount} ${amount === 1 ? 'month' : 'months'} ${hasTeamData ? 'more ' : ''}data`\n\n    return (<Select\n            value={amountOfData}\n            onChange={(e) => setValue('amountOfData', e.target.value)}\n            inputProps={{ 'aria-label': 'Amount of data' }}\n        >\n        <MenuItem value={1} default>{itemText(1)}</MenuItem>\n        <MenuItem value={3} >{itemText(3)}</MenuItem>\n        <MenuItem value={6} >{itemText(6)}</MenuItem>\n        <MenuItem value={12} >{itemText(12)}</MenuItem>\n        <MenuItem value={24} >{itemText(24)}</MenuItem>\n        <MenuItem value=\"all\">Get it all!</MenuItem>\n    </Select>)\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    preFetchedName: state.preFetchedName,\n})\n\nexport default connect(mapStateToProps)(SelectAmountData)\n","import {\n    always,\n    equals,\n    cond,\n    join,\n    keys,\n    T as alwaysTrue,\n} from 'ramda'\n\nconst inputLabels = {\n    org: 'Organization',\n    repo: 'Repository',\n    token: 'Token*',\n    excludeIds: \"Exclude GitHub users e.g. remove bot PRs and comments, ',' separated\",\n    enterpriseAPI: 'Enterprise API full url',\n    userIds: 'Comma separated list GitHub users',\n    teamName: 'Team name',\n}\n\nconst validate = ({ key, value }) => {\n    const isValid = cond([\n        [equals('enterpriseAPI'), always(/^(https:\\/\\/.+\\..+|^$)/.test(value))],\n        [equals('excludeIds'), always(/^([\\w-.,\\s]+|)$/.test(value))],\n        [equals('userIds'), always(/^([\\w-.,\\s]+)$/.test(value))],\n        [alwaysTrue, always(/^[\\w-.]+$/.test(value))],\n    ])(key)\n    return isValid\n}\n\n\nconst validateForm = (formInfo) => {\n    const getErrorValue = errorValue(formInfo)\n\n    const validationErrors = {}\n    keys(formInfo)\n        .forEach(key => validationErrors[key] = getErrorValue(key))\n\n    const isValid = Object.values(validationErrors)\n        .every(x => !x)\n\n    return {\n        isValid,\n        validationErrors\n    }\n}\n\nconst buttonText = (fetching, pullRequests = []) => [\n    fetching && 'fetching',\n    pullRequests.length && 'Get more data',\n    'Get data',\n].find(Boolean)\n\nconst errorValue = formInfo => key => {\n    const value = formInfo[key]\n    const isValid = validate({ key, value })\n\n    return isValid ? false : true\n}\n\nconst formValue = (data, key) => {\n    const value = data[key]\n    return Array.isArray(value)\n        ? join(', ', value)\n        : value\n}\n\nexport {\n    buttonText,\n    errorValue,\n    inputLabels,\n    validate,\n    formValue,\n    validateForm,\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Button from '../../shared/Button'\nimport Message from '../Message'\nimport { buttonText } from './utils'\nimport styles from './styles'\n\nconst ButtonWithMessage = (props) => {\n    const {\n        fetching,\n        error,\n        pullRequests = [],\n        classes,\n    } = props\n\n    return (<div className={classes.inputGrid}>\n        <Button\n            className={`${classes.child} ${classes.fullRow}`}\n            type={fetching ? 'disabled' : 'submit'}\n            variant=\"contained\"\n            color=\"primary\"\n            value={buttonText(fetching, '', pullRequests)}\n        />\n        {\n            error\n                && <Message\n                    error={error}\n                    className={classes.fullRow}\n                />\n        }\n    </div>)\n}\n\nconst mapStateToProps = (state) => ({\n    fetching: state.fetching,\n    error: state.error,\n    pullRequests: state.pullRequests,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(ButtonWithMessage))\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { pathOr } from 'ramda'\n\nimport styles from './styles'\nimport {\n    inputLabels,\n    formValue,\n    validate,\n} from './utils'\n\nconst TextInput = (props) => {\n    const {\n        type,\n        classes,\n        inputError,\n        setInputError,\n        formInfo,\n        setValue,\n    } = props\n\n    const inputProps = {\n        label: inputLabels[type],\n        className: classes.child,\n        error: inputError[type] || false,\n        value: formValue(formInfo, type),\n        variant: 'outlined',\n        margin: 'normal',\n        helperText: inputError[type] && 'Invalid input',\n        onBlur: (event) => {\n            const value = pathOr('', ['target', 'value'], event)\n\n            const isValid = validate({ key: type, value })\n            setInputError({\n                ...inputError,\n                [type]: isValid ? false : true\n            })\n\n            isValid\n                && setValue(type, value)\n        },\n        onChange: (event) => {\n            const value = pathOr('', ['target', 'value'], event)\n            setInputError({\n                ...inputError,\n                [type]: false,\n            })\n\n            setValue(type, value)\n        },\n        onFocus: () => setInputError({\n            ...inputError,\n            [type]: false,\n        })\n    }\n\n\n    return <TextField\n        {...inputProps }\n    />\n}\n\nexport default withStyles(styles)(TextInput)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport styles from './styles'\nimport {\n    getDownloadProps,\n} from '../../../state/actions'\nimport { P } from '../../shared/StyledTags'\n\nconst Download = ({\n    fetching,\n    preFetchedName,\n    pullRequests,\n    classes,\n    getDownloadInfo,\n} = {}) =>\n    !fetching && !preFetchedName && pullRequests.length > 0\n        ? <P><a className={classes.link} {...getDownloadInfo()}>Download report data</a></P>\n        : null\n\nconst mapStateToProps = (state) => ({\n    fetching: state.fetching,\n    pullRequests: state.pullRequests,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getDownloadInfo: () => dispatch(getDownloadProps),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Download))\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { keys } from 'ramda'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport ChartDescription from '../../shared/ChartDescription'\nimport SelectAmountData from './SelectAmountData'\nimport ButtonWithMessage from './ButtonWithMessage'\nimport TextInput from './TextInput'\n\nimport Download from './Download'\nimport { P, H } from '../../shared/StyledTags'\nimport styles from './styles'\nimport { validateForm } from './utils'\n\nimport {\n    clearPastSearch,\n    storeOrg,\n    storeRepo,\n    storeToken,\n    storeUserIds,\n    storeTeamName,\n    storeEnterpriseAPI,\n    storeExcludeIds,\n    storeAmountOfData,\n    storeFormUntilDate,\n    storeSortDirection,\n    getAPIData,\n} from '../../../state/actions'\n\nconst FormSection = (props) => {\n    const {\n        setValues,\n        getData,\n        fetching,\n        reportType = 'repo',\n        classes,\n    } = props\n\n    const commonInputs = {\n        sortDirection: 'DESC',\n        amountOfData: 1,\n        token: '',\n        excludeIds: '',\n        enterpriseAPI: '',\n    }\n\n    const primaryInputs = reportType === 'repo'\n        ? {\n            org: '',\n            repo: '',\n        }\n        : {\n            userIds: '',\n            teamName: '',\n        }\n\n    const defaultInputs = {\n        ...commonInputs,\n        ...primaryInputs,\n    }\n\n    const [inputError, setInputError] = useState({})\n    const [formInfo, setFormInfo] = useState(defaultInputs)\n\n    const setValue = (key, value) => setFormInfo({\n        ...formInfo,\n        [key]: value\n    })\n\n    const inputStates = {\n        inputError,\n        setInputError,\n        formInfo,\n        setValue,\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        const {\n            isValid,\n            validationErrors,\n        } = validateForm(formInfo)\n\n        setInputError(validationErrors)\n\n        isValid && !fetching\n            && setValues(formInfo)\n\n        isValid && !fetching\n            && getData()\n    }\n\n    return (\n        <div className={classes.formDescription} >\n            <H level={3}>Get community data for any Team(list of users)</H>\n            <form\n                onSubmit={handleSubmit}\n            >\n                <div className={classes.inputGrid}>\n                    <SelectAmountData setValue={setValue} amountOfData={formInfo.amountOfData} />\n                    {\n                        keys(primaryInputs)\n                            .map((inputKey) => <TextInput\n                                key={inputKey}\n                                type={inputKey}\n                                { ...inputStates }\n                            />)\n                    }\n                    <TextInput\n                        type=\"token\"\n                        { ...inputStates }\n                    />\n                    <P className=\"tokenText\">\n                        * To create a token go to your GitHub <a className={classes.link} href=\"https://github.com/settings/tokens\">tokens</a> page, click on 'generate new token', choose the settings 'repo' (all) and 'read:org' then click 'Generate token'.\n                    </P>\n                </div>\n\n                <ChartDescription\n                    className={`${classes.formDescription} ${classes.fullRow}`}\n                    title=\"\"\n                    expandText=\"add this\"\n                    intro=\"Advanced options\"\n                >\n                    <div className={classes.inputGrid}>\n                        <TextInput\n                            type=\"excludeIds\"\n                            { ...inputStates }\n                        />\n                        <TextInput\n                            type=\"enterpriseAPI\"\n                            { ...inputStates }\n                        />\n                    </div>\n                </ChartDescription>\n\n                <ButtonWithMessage />\n            </form>\n            <Download />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    fetching: state.fetching,\n    error: state.error,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setValues: (values) => {\n        const {\n            org,\n            repo,\n            token,\n            amountOfData,\n            sortDirection,\n            teamName,\n            userIds,\n            enterpriseAPI,\n            excludeIds,\n        } = values\n\n        dispatch(clearPastSearch(values))\n\n        dispatch(storeToken(token))\n        dispatch(storeAmountOfData(amountOfData))\n        dispatch(storeSortDirection(sortDirection))\n        dispatch(storeFormUntilDate(amountOfData))\n\n        org && dispatch(storeOrg(org))\n        repo && dispatch(storeRepo(repo))\n        userIds && dispatch(storeUserIds(userIds))\n        teamName && dispatch(storeTeamName(teamName))\n\n        dispatch(storeEnterpriseAPI(enterpriseAPI))\n        dispatch(storeExcludeIds(excludeIds))\n    },\n    getData: (x) => dispatch(getAPIData(x)),\n})\n\nexport default connect(mapStateToProps,\n    mapDispatchToProps)(withStyles(styles)(FormSection))\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    cond,\n    always,\n    equals,\n} from 'ramda'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { clearAllData } from '../../../state/actions'\n\nimport Paper from '../../shared/Paper'\nimport Button from '../../shared/Button'\n\nimport PrefetchedOptions from './PrefetchedOptions'\nimport FormSection from './FormSection'\nimport styles from './styles'\n\nconst FetchForm = ({ classes, clearReport }) => {\n     const [selectedOption, setLocalOption] = useState('oss')\n\n     const setOption = (option = '') => {\n        option !== selectedOption\n            && clearReport()\n        setLocalOption(option)\n     }\n\n     return (\n        <Paper className={classes.dataPaper} >\n            <div className={classes.typeOptions}>\n                {\n                    [\n                        ['Popular repos/teams', 'oss'],\n                        ['Make repo report', 'repo'],\n                        ['Make team report', 'team'],\n                    ]\n                        .map(([text, type], i) => <Button\n                            value={text}\n                            key={i}\n                            color={selectedOption === type ? 'primary' : 'secondary'}\n                            onClick={(e) => {\n                                e.preventDefault()\n                                setOption(type)\n                            }}\n                        />)\n                }\n            </div>\n            {\n                cond([\n                    [equals('oss'), always(<PrefetchedOptions />)],\n                    [equals('repo'), always(<FormSection reportType=\"repo\" />)],\n                    [equals('team'), always(<FormSection reportType=\"team\" />)],\n                ])(selectedOption)\n            }\n        </Paper>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    clearReport: () => dispatch(clearAllData),\n})\n\nexport default connect(() => ({}), mapDispatchToProps)(withStyles(styles)(FetchForm))\n","const colors = ['#E82573', '#8b4ff0', '#1F77B4', '#4ECC7A', '#DBD523', '#EB9830', '#D14B41']\n\nexport default colors\n","import React, { Fragment } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { H } from '../shared/StyledTags'\n\nconst ChartHeading = ({ className, items = [], text = '', type = '' } = {}) => {\n    const prepend = (i) => {\n        const maxIndex = items.length - 1\n\n        return [\n            i === 0\n            && (() => ''),\n            i === maxIndex\n            && (() => ' and '),\n            i > 0\n            && (() => ', '),\n        ].find(Boolean)()\n    }\n\n    const useStyles = makeStyles(theme => ({\n        root: props => ({\n            color: props.color,\n            borderBottom: `solid 2px ${props.color}`,\n            display: 'inline-block',\n            lineHeight: '2rem',\n            position: 'relative',\n            '&:before': {\n                lineHeight: '0',\n                content: '\"•\"',\n                position: 'absolute',\n                bottom: '-1px',\n                left: '-3px',\n            },\n            '&:after': {\n                lineHeight: '0',\n                content: '\"•\"',\n                position: 'absolute',\n                bottom: '-1px',\n                right: '-3px',\n            }\n        }),\n    }))\n\n    const LineItem = ({ color, label}) => {\n        const classes = useStyles({ color });\n        return (\n            <span\n                className={classes.root}\n            >\n                {label}\n            </span>\n        )\n    }\n\n    const Item = ({ color, label}) => (\n        <span\n            style={{ color }}\n        >\n            {label}\n        </span>\n    )\n\n    const mathTypeMap = {\n        average: 'Average',\n        sum: 'Total',\n        count: 'Total',\n        multiple: '',\n    }\n\n    const uniqueLinesMaths = [\n        ...new Set(items.map(x => x.groupMath))\n    ]\n\n    const singleMathType = items.length > 0\n        && type === 'line'\n        && uniqueLinesMaths.length < 2\n            ? uniqueLinesMaths[0] || 'average'\n            : 'multiple'\n\n    return (\n        <H level={3} className={className}>\n            {`${text} `}\n            {`${mathTypeMap[singleMathType]} `}\n            {\n                items\n                    .map((item, i) => <Fragment key={i}>\n                        {prepend(i)}\n                        {\n                            type === 'line'\n                                ? <LineItem {...item} />\n                                : <Item {...item} />\n                        }\n                        </Fragment>)\n            }\n        </H>\n    )\n}\n\nexport default ChartHeading\n","import { withStyles } from '@material-ui/core/styles'\n\nconst styles = () => ({\n    centerHeading: {\n        textAlign: 'center',\n    },\n    headingWrap: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    barChartComponentWrap: {\n        width: '50%',\n        maxWidth: '1200px',\n        margin: '0 0 1rem 0',\n        '@media (max-width: 950px)': {\n            width: '100%',\n        },\n    },\n    lineChartComponentWrap: {\n        zIndex: 10,\n        width: '100%',\n        maxWidth: '1200px',\n    },\n    chordWrap: {\n        width: '450px',\n        height: '450px',\n        '@media (max-width: 668px)': {\n            width: '370px',\n            height: '370px',\n            '& svg text': {\n                fontSize: '10px !important'\n            },\n        },\n    },\n    pieWrap: {\n        width: '100%',\n        height: '350px',\n        marginBottom: '20px',\n        '@media (max-width: 750px)': {\n            height: '300px',\n        },\n        '@media (max-width: 650px)': {\n            height: '250px',\n        },\n    },\n    chartWrap: {\n        width: '100%',\n        height: '500px',\n        '& svg g line': {\n            opacity: '0.6'\n        },\n        '@media (max-width: 768px)': {\n            height: '350px',\n            '& svg g line': {\n                opacity: '0.2'\n            },\n            '& svg g line:first-child': {\n                opacity: '1'\n            },\n        },\n        '@media (max-width: 668px)': {\n            height: '300px',\n            '& svg g circle': {\n                display: 'none'\n            },\n            '& svg path': {\n                opacity: '1'\n            },\n            '& svg text': {\n                fontSize: '10px !important'\n            },\n        },\n    },\n})\n\nconst styledCharts = (Chart) => withStyles(styles)(Chart)\n\nexport default styledCharts","import {\n    cond,\n    always,\n    T,\n} from 'ramda'\n const {\n    getMonth,\n    getWeek,\n    getDay,\n    differenceInMonths,\n } = require('date-fns')\n\n const isNewDay = (prev, current) => {\n    const prevItemsDay = prev && getDay(new Date(prev))\n    const currentItemsDay = current && getDay(new Date(current))\n\n    return (prevItemsDay && currentItemsDay) && prevItemsDay !== currentItemsDay\n}\n\nconst isNewWeek = (prev, current) => {\n    const prevItemsWeek = prev && getWeek(new Date(prev))\n    const currentItemsWeek = current && getWeek(new Date(current))\n\n    return (prevItemsWeek && currentItemsWeek) && prevItemsWeek !== currentItemsWeek\n}\n\nconst isNewNthWeek = mod => (prev, current) => {\n    const prevItemsWeek = prev && getWeek(new Date(prev))\n    const currentItemsWeek = current && getWeek(new Date(current))\n\n    return (prevItemsWeek && currentItemsWeek) && (prevItemsWeek % mod) > 0 && (currentItemsWeek % mod) === 0\n}\n\nconst isNewMonth = (prev, current) => {\n    const prevItemsWeek = prev && getMonth(new Date(prev))\n    const currentItemsWeek = current && getMonth(new Date(current))\n\n    return (prevItemsWeek && currentItemsWeek) && prevItemsWeek !== currentItemsWeek\n}\n\nconst isNew = {\n    '1day': isNewDay,\n    '1week': isNewWeek,\n    '2week': isNewNthWeek(2),\n    '3week': isNewNthWeek(3),\n    '1month': isNewMonth,\n}\n\n\nconst batchByType = (key, batchType) => data => {\n    const batchedData = []\n    data\n        .forEach((item) => {\n            const currentWeek = batchedData.at(-1) || []\n            const prevItem = currentWeek.at(-1) || {}\n\n            !prevItem[key] || isNew[batchType](prevItem[key], item[key])\n                ? batchedData\n                    .push([item])\n                : batchedData.at(-1)\n                    .push(item)\n        })\n\n    return batchedData;\n}\n\nconst batchByData = key => (data = []) => {\n    const { mergedAt: startDate } = data.at(0)\n    const { mergedAt: endDate } = data.at(-1)\n    const totalMonths = differenceInMonths(new Date(endDate), new Date(startDate))\n\n    return cond([\n        [always(totalMonths >= 200), batchByType(key, '1month')],\n        [always(totalMonths >= 60), batchByType(key, '3week')],\n        [always(totalMonths >= 12), batchByType(key, '2week')],\n        [always(totalMonths >= 6), batchByType(key, '1week')],\n        [T, batchByType(key, '1day')],\n    ])(data)\n}\n\nconst batchBy = key => (data = []) => data.length < 1\n    ? []\n    : batchByData(key)(data)\n\nexport {\n    batchBy,\n    batchByType,\n}","import { apply } from 'ramda'\nimport differenceInDays from 'date-fns/differenceInDays'\n\nimport { batchBy } from './batchBy'\nimport { sumKeysValue } from '../../utils'\n\nconst getAllYValues = data => {\n    const allValues = []\n    data\n        .forEach(({ data }) => {\n            const values = data\n                .map(x => x.y)\n\n            allValues.push(...values)\n        })\n\n    return allValues\n}\n\nconst getMaxYValue = (data) => {\n    const allValues = getAllYValues(data)\n\n    const maxValue = allValues.length > 0\n        ? apply(Math.max, allValues)\n        : 0\n\n    return maxValue\n}\n\nconst getMinYValue = (data) => {\n    const allValues = getAllYValues(data)\n\n    const minValue = allValues.length > 0\n        ? apply(Math.min, allValues)\n        : 0\n\n    return minValue > 0\n        ? 0\n        : minValue\n}\n\nconst dateSort = (\n    { mergedAt: dateA = '' },\n    { mergedAt: dateB = '' },\n) => new Date(dateA).getTime() - new Date(dateB).getTime()\n\nconst formatDate = (date) => {\n    const info = new Date(date)\n    const month = info.getMonth() + 1\n    const dayM = info.getDate()\n    return `${info.getFullYear()}-${month < 10 ? `0${month}` : month}-${dayM < 10 ? `0${dayM}` : dayM}`\n}\n\nconst formatBatches = batches => dataKey => groupMath => batches\n    .map((batch) => {\n        const value = sumKeysValue(dataKey)(batch)\n\n        const valueByTypes = {\n            'average': Math.round(value / batch.length),\n            'sum': value,\n            'count': batch.length,\n        }\n\n        return {\n            y: valueByTypes[groupMath],\n            x: formatDate(batch[0].mergedAt),\n        }\n    })\n\nconst formatLineData = ({ data, dataKey, groupMath = 'average' }) => {\n    const filteredData = data\n        .filter(item => item.mergedAt && /\\d+/.test(item[dataKey]))\n\n    const sortedData = filteredData\n        .sort(dateSort)\n\n    const batchedData = batchBy('mergedAt')(sortedData)\n    const formattedData = formatBatches(batchedData)(dataKey)(groupMath)\n\n    return formattedData\n}\n\nconst formatLinesData = (axix) => axix.lines\n    .map(({ label, color, dataKey, groupMath, data: lineData }) => {\n        const data = lineData || axix.data || []\n        const formattedData = formatLineData({ data, dataKey, groupMath })\n\n        return formattedData.length\n            && ({\n                id: label,\n                color,\n                data: formattedData,\n            })\n    })\n    .filter(Boolean)\n\nconst formatGraphMarkers = (markers, theme, lineData) => {\n    let dateStart\n    let dateEnd\n    lineData\n        .forEach(({ data = [] } = {}) => {\n            const currentStart = data[0].x\n            const currentEnd = data[data.length - 1].x\n\n            if (!dateStart || new Date(currentStart) < dateStart) {\n                dateStart = new Date(currentStart)\n            }\n\n            if (!dateEnd || new Date(currentEnd) > dateEnd) {\n                dateEnd = new Date(currentEnd)\n            }\n        })\n\n    const markerType = (type) => ({\n        MAJOR: 'primary',\n        MINOR: 'secondary',\n    })[type] || 'tertiary'\n\n    const formattedMarkers = markers\n        .filter(({ date } = {}) => {\n            const currentDate = new Date(date)\n\n            return currentDate > dateStart && currentDate < dateEnd\n        })\n        .map((item) => ({\n            axis: 'x',\n            value: new Date(item.date).getTime(),\n            legend: item.releaseType === 'MAJOR'\n                ? item.description\n                : '',\n            ...(theme.charts.markers[markerType(item.releaseType)] || {}),\n        }))\n\n    return formattedMarkers\n}\n\nconst smoothNumber = (ruffledNumber) => {\n    const stringNumber = `${ruffledNumber}`\n    const roundTo = Math.ceil(stringNumber.length * 0.4)\n\n    const [backwards] = stringNumber\n        .split('')\n        .reduceRight(([acc = '', increment = false], item, index) => {\n            var number = parseInt(item)\n\n            const updatedItem = increment\n                ? number + 1\n                : number\n\n\n            const round = index !== 0 && (updatedItem > 9 || (index > roundTo && updatedItem > 4))\n\n            const newValue = round || index > roundTo\n                ? 0\n                : updatedItem\n\n            return [\n                [\n                    ...acc,\n                    newValue,\n                ],\n                round,\n            ]\n        }, [])\n\n    const smooth = backwards.reverse().join('')\n\n    return smooth\n}\n\nconst chunkData = (data = []) => {\n    const startDate = data.at(0) && new Date(data.at(0)?.mergedAt)\n    const endDate = data.at(-1)  && new Date(data.at(-1)?.mergedAt)\n\n    const totalDays = startDate && endDate\n        ? differenceInDays(endDate,startDate)\n        : 0\n\n    const daysPerChunk = Math.ceil(totalDays/10)\n\n    const chunkyData = []\n    data\n        .forEach((itemData, i) => {\n            itemData.id = i\n            const prDate = new Date(itemData.mergedAt)\n            const { mergedAt: prevMergedAt = '' } = chunkyData.length > 0\n                ? chunkyData.at(-1).at(0)\n                : {}\n\n            const daysFromChunkStart = prevMergedAt\n                ? differenceInDays(prDate,new Date(prevMergedAt))\n                : 0\n\n            daysFromChunkStart > daysPerChunk || chunkyData.length < 1\n                ? chunkyData.push([itemData])\n                : chunkyData.at(-1).push(itemData)\n        })\n\n    return chunkyData\n}\n\nexport {\n    getMaxYValue,\n    getMinYValue,\n    formatLinesData,\n    formatGraphMarkers,\n    smoothNumber,\n    dateSort,\n    chunkData,\n    sumKeysValue,\n}","import React from 'react'\nimport { pathOr, propOr } from 'ramda'\nimport { ResponsiveLine as NivoLine } from '@nivo/line'\nimport { TableTooltip } from '@nivo/tooltip'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\n\nimport {\n    getMaxYValue,\n    getMinYValue,\n    formatLinesData,\n    formatGraphMarkers,\n    smoothNumber,\n} from './lineHelpers'\n\nconst ToolTip = convertedRightLines => data => {\n    // NOTE: this is needed to use the original Y value for the tool tip\n    const getYValue = (point) => {\n        const yCurrentValue = point.data.yFormatted\n        const originalY = point.data.originalY\n\n        return /[\\d.]/.test(originalY)\n            ? originalY\n            : yCurrentValue\n    }\n\n    const Chip = ({ color }) => <span\n        style={{\n            display: 'block',\n            width: '12px',\n            height: '12px',\n            background: color,\n        }}\n    />\n\n    const points = pathOr([], ['slice', 'points'], data)\n    return (\n        <TableTooltip\n            rows={\n                points\n                    .map((point) => [\n                        <Chip color={point.serieColor} />,\n                        point.serieId,\n                        <strong>{getYValue(point)}</strong>,\n                    ])\n            }\n        />\n    )\n}\n\nconst Line = styledCharts(({\n    title,\n    blockHeading = false,\n    data = [],\n    markers = [],\n    showLegends = false,\n    legends = [],\n    classes,\n} = {}) => {\n    const theme = useTheme();\n    // TODO: function to see time gap in data to help format date e.g. should add year\n    const leftAxis = data\n        .find(({ xAxis } = {}) => xAxis === 'left') || { data: [], lines: [] }\n    const leftLinesData = formatLinesData(leftAxis)\n    const minLeftValue = getMinYValue(leftLinesData)\n\n    const rightAxis = data\n        .find(({ xAxis } = {}) => xAxis === 'right') || { data: [], lines: [] }\n    const rightLinesData = formatLinesData(rightAxis)\n    const maxRightValue = getMaxYValue(rightLinesData)\n    const minRightValue = getMinYValue(rightLinesData)\n\n    // if no left try right mas as there may be a right line being used\n    const maxLeftValue = getMaxYValue(leftLinesData) || maxRightValue\n\n    const minValue = minLeftValue > minRightValue\n        ? minRightValue\n        : minLeftValue\n\n    // As Nivo Line does not have right axis lines need to convert right line data to left line data\n    const convertedRightLines = rightLinesData\n        .map((item = {}) => {\n            const formattedData = item.data\n                .map((dataItem) => ({\n                    y: dataItem.y < 0\n                        ? dataItem.y\n                        : Math.round(dataItem.y * (maxLeftValue / maxRightValue)),\n                    x: dataItem.x,\n                    originalY: dataItem.y,\n                }))\n\n            return formattedData.length && ({\n                ...item,\n                data: formattedData,\n            })\n        })\n        .filter(Boolean)\n\n    const leftHeadingItems = title || blockHeading\n        ? []\n        : leftAxis.lines\n\n    const rightHeadingItems = rightAxis.lines\n\n    const legendsArray = legends.length\n        ? legends\n        : [\n            {\n                anchor: 'top-right',\n                direction: 'column',\n                justify: false,\n                translateX: -10,\n                translateY: 10,\n                itemsSpacing: 0,\n                itemDirection: 'right-to-left',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 1,\n                symbolSize: 12,\n                symbolShape: 'square',\n                symbolBorderColor: 'rgba(0, 0, 0, .9)',\n                toggleSerie: true,\n                itemTextColor: theme.palette.text.primary,\n            },\n        ]\n\n    const lineData = leftLinesData.concat(convertedRightLines)\n\n    const formattedMarkers = formatGraphMarkers(markers, theme, lineData)\n\n    const hasData = (items) => items.some(x => propOr([], 'data', x).length)\n\n    return hasData(lineData) && (\n        <div className={classes.lineChartComponentWrap}>\n            <div className={classes.headingWrap}>\n                <ChartHeading type='line' text={title} items={leftHeadingItems} />\n                {\n                    !blockHeading && rightHeadingItems.length > 0\n                        && <ChartHeading type='line' items={rightHeadingItems} />\n                }\n            </div>\n\n            <div className={classes.chartWrap}>\n                <NivoLine\n                    margin={{ top: 14, right: 50, bottom: 50, left: 50 }}\n                    data={lineData}\n                    colors={[\n                        ...leftAxis.lines.map(x => x.color),\n                        ...rightAxis.lines.map(x => x.color),\n                    ]}\n                    lineWidth={2}\n                    curve='monotoneX'\n                    animate={false}\n                    toggleSerie={showLegends && true}\n                    xScale={{\n                        type: 'time',\n                        format: '%Y-%m-%d',\n                    }}\n                    xFormat=\"time:%Y-%m-%d\"\n                    yScale={{\n                        type: 'linear',\n                        min: minValue,\n                        max: maxLeftValue,\n                    }}\n                    axisBottom={{\n                        format: '%y/%m',\n                        tickSize: 0,\n                        tickPadding: 10,\n                        tickRotation: -45,\n                    }}\n                    legends={showLegends ? legendsArray : []}\n                    axisLeft={{\n                        tickSize: 0,\n                        tickValues: 8,\n                    }}\n                    pointLabelYOffset={0}\n                    {...(\n                        formattedMarkers.length\n                        && { markers: formattedMarkers }\n\n                    )}\n                    {...(\n                        convertedRightLines.length\n                        && {\n                            axisRight: {\n                                tickSize: 0,\n                                tickValues: 8,\n                                format: (rawLeftValue) => {\n                                    const realRightValue = Math.round(rawLeftValue * (maxRightValue / maxLeftValue))\n                                    return rawLeftValue < 0 // to allow minus values, minus values are currently raw not aligned like positive numbers\n                                        ? rawLeftValue\n                                        : smoothNumber(realRightValue)\n                                },\n                            },\n                        }\n                    )}\n                    enableGridX={false}\n                    enableSlices=\"x\"\n                    sliceTooltip={ToolTip(convertedRightLines)}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Line","import React, { useState } from 'react'\nimport { DataGrid } from '@material-ui/data-grid'\nimport { withStyles } from '@material-ui/core/styles'\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\n\nimport { format } from 'date-fns'\n\nimport { A } from '../shared/StyledTags'\n\nconst zeroOut = {\n    renderCell: (params) => params.value || '0',\n    sortComparator: (v1 = 0, v2 = 0) => v1 - v2,\n}\n\nconst columnMap = {\n    comments: {\n        field: 'comments',\n        headerName: 'All comments',\n        flex: 1,\n        ...zeroOut,\n    },\n    codeComments: {\n        field: 'codeComments',\n        headerName: 'Code comments',\n        flex: 1,\n        ...zeroOut,\n    },\n    generalComments: {\n        field: 'generalComments',\n        headerName: 'Review comments',\n        flex: 1,\n        ...zeroOut,\n    },\n    approvals: {\n        field: 'approvals',\n        headerName: 'Approvals',\n        flex: 1,\n        ...zeroOut,\n    },\n    prSize: {\n        field: 'prSize',\n        headerName: 'PR Size',\n        flex: 1,\n        ...zeroOut,\n    },\n    additions: {\n        field: 'additions',\n        headerName: 'PR additions',\n        flex: 1,\n        ...zeroOut,\n    },\n    deletions: {\n        field: 'deletions',\n        headerName: 'PR deletions',\n        flex: 1,\n        ...zeroOut,\n    },\n    age: {\n        field: 'age',\n        headerName: 'Age (days)',\n        flex: 1,\n    },\n    mergedAt: {\n        field: 'mergedAt',\n        headerName: 'Date',\n        flex: 1,\n        renderCell: (params) => format(new Date(params.value), 'do MMM yy')\n    },\n    commentSentimentScore: {\n        field: 'commentSentimentScore',\n        headerName: 'To team',\n        flex: 1,\n        ...zeroOut,\n    },\n    commentAuthorSentimentScore: {\n        field: 'commentAuthorSentimentScore',\n        headerName: 'From team',\n        flex: 1,\n        ...zeroOut,\n    },\n    commentSentimentTotalScore: {\n        field: 'commentSentimentTotalScore',\n        headerName: 'Sentiment',\n        flex: 1,\n        ...zeroOut,\n    },\n    commentsGiven: {\n        field: 'commentsGiven',\n        headerName: 'Comments given',\n        flex: 1,\n        ...zeroOut,\n    },\n    url: {\n        field: 'url',\n        headerName: 'Link',\n        flex: 1,\n        renderCell: (params) => {\n            const url = params.value\n            const number = url.split('/').at(-1)\n            return <A href={url}>\n                {number}\n            </A>\n        },\n    },\n    author: {\n        field: 'author',\n        headerName: 'author',\n        flex: 1,\n    },\n    repo: {\n        field: 'repo',\n        headerName: 'repo',\n        flex: 1,\n    },\n    isBug: {\n        field: 'isBug',\n        headerName: 'Bug',\n        flex: 1,\n        renderCell: (params) => params.value\n            ? 'true'\n            : 'false'\n    },\n}\n\nconst makeColumns = dataKeys => {\n    const allkeys = [\n        ...dataKeys,\n        ...['mergedAt', 'url'],\n    ]\n\n    const columns = allkeys\n        .map(key => columnMap[key])\n\n    return columns\n}\n\nconst selectedClass = (classes, selectedIndex, tableVisible) => (itemsIndex) => itemsIndex === selectedIndex\n    ? `${classes.selected} ${tableVisible ? classes.hasTable : ''}`\n    : classes.chunk\n\nconst ChunkIcon = ({\n    classes,\n    tableShowing\n}) =>  tableShowing\n    ? <RemoveCircleIcon className={classes.arrow} />\n    : <AddCircleIcon className={classes.arrow} />\n\nconst ItemsTable = ({\n    data = [],\n    dataKeys = [],\n    classes = {},\n} = {}) => {\n    const [dataIndex, setIndex] = useState(data.length - 1);\n    const [showTable, setShowTable] = useState(false);\n\n    const selectedClassFor = selectedClass(classes, dataIndex, showTable)\n\n    return <div className={classes.wrapper}>\n        <div className={classes.bar}>\n            {\n                data\n                    .map((item = [],i) => <div\n                        key={i}\n                        className={selectedClassFor(i)}\n                        onClick={() => {\n                            dataIndex === i\n                                && setShowTable(!showTable)\n\n                            dataIndex !== i\n                                && !showTable\n                                && setShowTable(true)\n\n                            setIndex(i)\n                        }}\n                    >\n                        {\n                            dataIndex === i\n                                && <ChunkIcon tableShowing={showTable} classes={classes} />\n                        }\n                    </div>)\n            }\n        </div>\n        {\n            showTable && <DataGrid\n                rows={data[dataIndex]}\n                columns={makeColumns(dataKeys)}\n                pageSize={5}\n                rowsPerPageOptions={[5]}\n                disableColumnFilter\n                disableColumnMenu\n                autoHeight={true}\n            />\n        }\n    </div>\n}\n\nconst chunksRules = {\n    flexGrow: 1,\n    marginRight: '4px',\n    borderRadius: '8px',\n}\n\nconst styles = theme => ({\n    bar: {\n        width: '100%',\n        height: '30px',\n        display: 'flex',\n        paddingBottom: '4px',\n        marginBottom: '0px',\n        '& > div:last-child': {\n            marginRight: '0px',\n        },\n    },\n    'chunk': {\n        ...chunksRules,\n        backgroundColor: theme.palette.secondary.main,\n        cursor: 'pointer',\n    },\n    hasTable: {\n        '&:before': {\n            content: '\"\"',\n            display: 'block',\n            width: '100%',\n            height:'11px',\n            position: 'absolute',\n            bottom: '-5px',\n            backgroundColor: theme.palette.primary.main,\n        },\n    },\n    'selected': {\n        ...chunksRules,\n        cursor: 'pointer',\n        backgroundColor: theme.palette.primary.main,\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            display: 'block',\n            width: '100%',\n            height:'500px',\n            position: 'absolute',\n            bottom: '0px',\n            background: 'linear-gradient(0deg, rgba(232,37,115,.12) 16%,rgba(232,37,115,.55) 16%, rgba(232,37,115,0) 90%)',\n            '@media (max-width: 768px)': {\n                height: '400px',\n                background: 'linear-gradient(0deg, rgba(232,37,115,.12) 20%,rgba(232,37,115,.55) 16%, rgba(232,37,115,0) 90%)',\n            },\n            '@media (max-width: 668px)': {\n                height: '320px',\n                background: 'linear-gradient(0deg, rgba(232,37,115,.12) 25%,rgba(232,37,115,.55) 16%, rgba(232,37,115,0) 90%)',\n            },\n        }\n    },\n    arrow: {\n        fontSize: '25px',\n        color: theme.palette.background.default,\n        position: 'absolute',\n        top: '3px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n    },\n    wrapper: {\n        padding: '0 50px',\n        marginBottom: theme.mySpacing.y.medium,\n        width: '100%',\n        display: 'flex',\n        flexGrow: 1,\n        flexWrap: 'wrap',\n        maxWidth: '1100px',\n        '& .MuiDataGrid-root': {\n            borderColor: theme.palette.primary.main,\n            borderWidth: '2px',\n        },\n    },\n})\n\nexport default withStyles(styles)(ItemsTable)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport { P } from '../shared/StyledTags'\nimport colors from '../colors'\nimport Line from '../charts/Line'\nimport ItemsTable from './ItemsTable'\nimport { chunkData } from '../charts/lineHelpers'\n\nconst getByAuthorData = (pullRequests = []) => {\n    const authorsPrs = {}\n    pullRequests\n        .forEach((pr) => {\n            const { author } = pr\n            const theirPrs = authorsPrs[author] || []\n            theirPrs.push(pr)\n\n            authorsPrs[author] = theirPrs\n        })\n\n    const byAuthorLines = Object.entries(authorsPrs)\n        .map(([author = '', prs = []], i) => {\n            const data = prs\n                .map(pr => ({\n                    value: 1,\n                    mergedAt: pr.mergedAt,\n                }))\n\n            return {\n                label: author,\n                color: colors[i % colors.length],\n                dataKey: 'value',\n                groupMath: 'count',\n                data,\n            }\n        })\n\n    const byAuthor = {\n        lines: byAuthorLines,\n        xAxis: 'left',\n    }\n\n    return [byAuthor]\n}\n\nconst PullRequestTrends = ({\n    pullRequests = [],\n    releases = [],\n    userIds = [],\n} = {}) => {\n    const { type } = useTheme();\n\n    const isTeamPage = userIds.length > 0\n    const byAuthorData = isTeamPage\n        ? getByAuthorData(pullRequests)\n        : []\n\n    const chunkyData = chunkData(pullRequests)\n\n    return pullRequests.length > 0 && (\n        <Paper>\n            <ChartDescription\n                title=\"Pull Request trends\"\n            >\n                {\n                    releases.length > 1 && <div>\n                        <P>Vertical lines are releases: Green is a Major release, solid purple is Minor and dotted purple is Patch or Alpha</P>\n                    </div>\n                }\n            </ChartDescription>\n            {\n                isTeamPage && <>\n                    <Line\n                        title=\"Merged PRs by author\"\n                        markers={releases}\n                        showLegends={true}\n                        data={byAuthorData}\n                    />\n                    <ItemsTable\n                        data={chunkyData}\n                        dataKeys={['author']}\n                    />\n                </>\n            }\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Comments',\n                                color: '#1f77b4',\n                                dataKey: 'comments',\n                            },\n                            {\n                                label: 'Approvals',\n                                color: '#e82573',\n                                dataKey: 'approvals',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data: pullRequests,\n                    },\n                    {\n                        lines: [\n                            {\n                                label: 'PR Size',\n                                color: type === 'dark' ? '#e2e2e2' : '#777',\n                                dataKey: 'prSize',\n                            },\n                        ],\n                        xAxis: 'right',\n                        data: pullRequests,\n                    },\n                ]}\n            />\n            <ItemsTable\n                dataKeys={['comments', 'approvals', 'prSize', 'author']}\n                data={chunkyData}\n            />\n\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Age (days)',\n                                color: '#e82573',\n                                dataKey: 'age',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data: pullRequests,\n                    },\n                    {\n                        lines: [\n                            {\n                                label: 'PR Size',\n                                color: type === 'dark' ? '#e2e2e2' : '#777',\n                                dataKey: 'prSize',\n                            },\n                        ],\n                        xAxis: 'right',\n                        data: pullRequests,\n                    },\n                ]}\n            />\n            <ItemsTable\n                dataKeys={['age', 'prSize', 'author']}\n                data={chunkyData}\n            />\n        </Paper>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    releases: state.releases,\n    userIds: state.fetches.userIds,\n})\n\nexport default connect(mapStateToProps)(PullRequestTrends)\n","import React, { useState } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n    Select,\n    MenuItem,\n    RadioGroup,\n    Radio,\n    FormLabel,\n} from '@material-ui/core'\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\n\nimport colors from '../colors'\nimport { P } from '../shared/StyledTags'\nimport Button from '../shared/Button'\n\nconst lineOptions = [\n    {\n        label: 'All comments',\n        dataKey: 'comments',\n    },\n    {\n        label: 'Code comments',\n        dataKey: 'codeComments',\n    },\n    {\n        label: 'Review comments',\n        dataKey: 'generalComments',\n    },\n    {\n        label: 'Approvals',\n        dataKey: 'approvals',\n    },\n    {\n        label: 'Additions',\n        dataKey: 'additions'\n    },\n    {\n        label: 'Deletions',\n        dataKey: 'deletions'\n    },\n    {\n        label: 'PR size',\n        dataKey: 'prSize',\n    },\n    {\n        label: 'Age(days)',\n        dataKey: 'age',\n    },\n    {\n        label: 'Sentiment',\n        dataKey: 'commentSentimentTotalScore',\n    },\n    {\n        label: 'Sentiment to team',\n        dataKey: 'commentSentimentScore',\n    },\n    {\n        label: 'Sentiment from team',\n        dataKey: 'commentAuthorSentimentScore',\n    },\n]\n\nconst mathWords = {\n    average: 'Average',\n    sum: 'Total',\n}\n\nconst addedLine = (removeLine, classes) => ({\n    color = '',\n    label = '',\n    dataKey = '',\n    groupMath = 'average',\n} = {}, i) => <div key={i}>\n        <P className={`${classes.savedLine} ${classes[color]}`}>{mathWords[groupMath]} {label} </P>\n        <RemoveCircleIcon\n            className={`${classes.remove} ${classes[color]}`}\n            onClick={event => {\n                event.preventDefault()\n                removeLine(dataKey)\n            }}\n        />\n    </div>\n\nconst getRemainingLines = (graphInfo = {}) => {\n    const activeLines = [\n        ...(graphInfo.left || []),\n        ...(graphInfo.right || []),\n    ]\n\n    const remainingLines = lineOptions\n        .filter(({ dataKey = '' } = {}) => activeLines.every(x => x.dataKey !== dataKey))\n\n    return remainingLines\n}\n\nconst GraphUi = ({\n    graphInfo = {},\n    setGraph = () => {},\n    graphs = [],\n    classes = {},\n}) =>  {\n    const remainingLines = getRemainingLines(graphInfo)\n\n    const [formInfo, setFormInfo] = useState({\n        label: remainingLines[0]?.label || 'Comments',\n        dataKey: remainingLines[0]?.dataKey || 'comments',\n        color: graphs.length > 1\n            ? colors[0]\n            : colors[1],\n        lineSide: 'left',\n        groupMath: 'average',\n    })\n\n    const setValue = (newValue = {}) => {\n        setFormInfo({\n            ...formInfo,\n            ...newValue,\n        })\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const side = formInfo.lineSide\n        const lines = graphInfo[side] || []\n        lines.push(formInfo)\n\n        const graphItem = {\n            ...graphInfo,\n            [side]: lines,\n        }\n\n        const updatedGraphs = graphs\n            .map(x => graphItem.graphId === x.graphId\n                ? graphItem\n                : x\n            )\n\n        setGraph(updatedGraphs)\n\n        const [firstline = {}] = getRemainingLines(graphItem)\n\n        const chosenColorIndex = colors\n            .findIndex(x => x === formInfo.color)\n\n        setFormInfo({\n            label: firstline.label,\n            dataKey: firstline.dataKey,\n            color: colors[(chosenColorIndex + 1) % colors.length],\n            lineSide: 'left',\n            groupMath: 'average',\n        })\n    }\n\n    const removeLine = (side) => (dataKey) => {\n        const lines = graphInfo[side] || []\n        const updatedLines = lines\n            .filter(x => x.dataKey !== dataKey)\n\n        const removedLine = lines\n            .find(x => x.dataKey === dataKey)\n\n        const graphItem = {\n            ...graphInfo,\n            [side]: updatedLines,\n        }\n\n        const updatedGraphs = graphs\n            .map(x => graphItem.graphId === x.graphId\n                ? graphItem\n                : x\n            )\n        setGraph(updatedGraphs)\n\n        const [firstline = {}] = getRemainingLines(graphItem)\n        setFormInfo({\n            label: firstline.label,\n            dataKey: firstline.dataKey,\n            color: removedLine.color,\n            lineSide: 'left',\n            groupMath: 'average',\n        })\n    }\n\n    return <div className={classes.graphForm}>\n        {\n            remainingLines.length > 0 && <form className={classes.graphLine} onSubmit={handleSubmit}>\n                <Select\n                    onChange={(e) => {\n                        const value = e.target.value\n                        const { label } = remainingLines.find(x => x.dataKey === value)\n                        setValue({\n                            dataKey: value,\n                            label\n                        })\n\n                    }}\n                    value={formInfo.dataKey}\n                    inputProps={{ 'aria-label': 'choose a line' }}\n                >\n                    {\n                        remainingLines\n                            .map(({label, dataKey} = {}) => <MenuItem key={dataKey} value={dataKey} >\n                                {label}\n                            </MenuItem>)\n                    }\n                </Select>\n                <Select\n                    onChange={(e) => setValue({ color: e.target.value })}\n                    value={formInfo.color}\n                    inputProps={{ 'aria-label': 'Choose a color' }}\n                >\n                    {\n                        colors\n                            .map((color, i) => <MenuItem key={color} value={color} >\n                                <div style={{\n                                    backgroundColor: color,\n                                    width: '70px',\n                                    height: '10px',\n                                    marginTop: '5px',\n                                }}></div>\n                            </MenuItem>)\n                    }\n                </Select>\n                <RadioGroup\n                    value={formInfo.lineSide}\n                    onChange={(e) => setValue({ lineSide: e.target.value })}\n                    row name=\"side\"\n                >\n                    <FormLabel>Axis: Left<Radio name=\"side\" value=\"left\" /></FormLabel>\n                    <FormLabel>Right<Radio name=\"side\" value=\"right\" /></FormLabel>\n                </RadioGroup>\n                <RadioGroup\n                    value={formInfo.groupMath}\n                    onChange={(e) => setValue({ groupMath: e.target.value })}\n                    row\n                    name=\"lineMaths\"\n                >\n                    <FormLabel>Line points: Averaged<Radio name=\"lineMaths\" value=\"average\" /></FormLabel>\n                    <FormLabel>Totaled<Radio name=\"lineMaths\" value=\"sum\" /></FormLabel>\n                </RadioGroup>\n                <Button value={\"Add to graph\"} color=\"primary\" type='submit'/>\n            </form>\n        }\n        <div className={classes.customLines}>\n            <div>\n            {\n                (graphInfo.left || [])\n                    .map(addedLine(removeLine('left'), classes))\n            }\n            </div>\n            <div>\n            {\n                (graphInfo.right || [])\n                    .map(addedLine(removeLine('right'), classes))\n            }\n            </div>\n        </div>\n    </div>\n}\n\nconst colorClasses = {}\ncolors\n    .forEach((color) => {\n        colorClasses[color] = {color: color, borderColor: color}\n    })\n\nconst styles = theme => ({\n    graphLine: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        borderRadius: '15px',\n        paddingTop:' 0.5em',\n        justifyContent: 'center',\n        backgroundImage: 'linear-gradient(0deg, rgba(102,102,102,0) 80%, rgba(102,102,102,1) 100%)',\n        '& p': {\n            margin: '0'\n        },\n        '& > *': {\n            marginRight: '20px',\n            marginBottom: '15px',\n        },\n        '& .MuiFormLabel-root': {\n            color: theme.palette.mainCopy.color,\n        },\n    },\n    graphForm: {\n        width: '100%',\n        maxWidth: '1200px',\n    },\n    remove: {\n        fontSize: '22px',\n        marginLeft: '5px',\n        marginBottom: '-5px',\n    },\n    savedLine: {\n        fontSize: '1.3em',\n        borderBottom: `solid 2px`,\n        display: 'inline-block',\n        lineHeight: '2rem',\n        position: 'relative',\n        '&:before': {\n            lineHeight: '0',\n            content: '\"•\"',\n            position: 'absolute',\n            bottom: '-1px',\n            left: '-3px',\n        },\n        '&:after': {\n            lineHeight: '0',\n            content: '\"•\"',\n            position: 'absolute',\n            bottom: '-1px',\n            right: '-3px',\n        },\n    },\n    customLines: {\n        width: '100%',\n        display: 'flex',\n        flexWrap: 'nowrap',\n        justifyContent: 'space-between',\n        '& > div': {\n            columnGap: '20px',\n            display: 'flex',\n            flexWrap: 'wrap',\n            maxWidth: '50%',\n            justifyContent: 'flex-start',\n            flexDirection: 'column',\n        },\n        '& > div:nth-child(2)': {\n            justifyContent: 'flex-end',\n            textAlign: 'right',\n        },\n    },\n    ...colorClasses,\n})\n\nexport default withStyles(styles)(GraphUi)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport { P } from '../shared/StyledTags'\nimport Button from '../shared/Button'\nimport Line from '../charts/Line'\nimport GraphUi from '../charts/GraphUi'\nimport ItemsTable from './ItemsTable'\nimport { chunkData } from '../charts/lineHelpers'\n\nconst formatGraphData = (pullRequests = []) => (data = {}) => {\n    const {\n        left = [],\n        right = [],\n    } = data\n\n    const leftLines = {\n        lines: left,\n        xAxis: 'left',\n        data: pullRequests,\n    }\n\n    const rightLines = {\n        lines: right,\n        xAxis: 'right',\n        data: pullRequests,\n    }\n\n    const formData = [\n        ...(\n            left.length > 0\n                ? [leftLines]\n                : []\n        ),\n        ...(\n            right.length > 0\n                ? [rightLines]\n                : []\n        ),\n    ]\n\n    return formData\n}\n\nconst getTableKeys = (graphInfo = {}) => {\n    const activeKeys = [\n        ...(graphInfo.left || []),\n        ...(graphInfo.right || []),\n    ]\n        .map(x => x.dataKey)\n\n    const keys = activeKeys.length > 0\n        ? [...activeKeys, 'author']\n        : ['comments', 'approvals', 'age', 'prSize', 'author']\n\n    return keys\n}\n\nlet id = 1\nconst getGraphId = () => ++id\n\nconst PullRequestCustom = ({\n    pullRequests: rawPullRequests = [],\n    releases = [],\n    classes = {},\n} = {}) => {\n    const defaultState = [{\n        graphId: 1,\n        left: [\n            {\n                label: 'Comments',\n                color: '#E82573',\n                dataKey: 'comments',\n            },\n        ],\n        right: []\n    }]\n    const [graphs, setGraph] = useState(defaultState)\n\n    const pullRequests = rawPullRequests\n        .map((pr = {}) => ({\n            ...pr,\n            commentSentimentTotalScore: (pr.commentSentimentScore || 0) + (pr.commentAuthorSentimentScore || 0)\n        }))\n\n    const chunkyData = chunkData(pullRequests)\n\n    const makeGraphData = formatGraphData(pullRequests)\n\n    return pullRequests.length > 0 && (\n        <Paper className={classes.block}>\n            <ChartDescription\n                title=\"Pull Requests: build your own graphs\"\n            >\n                {\n                    releases.length > 1 && <div>\n                        <P>Vertical lines are releases: Green is a Major release, solid purple is Minor and dotted purple is Patch or Alpha</P>\n                    </div>\n                }\n            </ChartDescription>\n            {\n                graphs\n                    .map((graphInfo, i) => <div className={classes.addedGraph} key={i}>\n                        <GraphUi\n                            graphInfo={graphInfo}\n                            setGraph={setGraph}\n                            graphs={graphs}\n                        />\n                        <Line\n                            blockHeading={true}\n                            markers={releases}\n                            data={makeGraphData(graphInfo)}\n                        />\n                        {\n                            (graphInfo.left.length > 0 || graphInfo.right.length > 0) && <ItemsTable\n                                dataKeys={getTableKeys(graphInfo)}\n                                data={chunkyData}\n                            />\n                        }\n                    </div>)\n            }\n            <div className={classes.buttons}>\n                {\n                    graphs.length > 1\n                        && <Button\n                            value=\"Remove above graph\"\n                            color=\"secondary\"\n                            onClick={(event) => {\n                                event.preventDefault()\n                                setGraph(graphs.slice(0, -1))\n                            }}\n                        />\n                }\n                <Button\n                    value={\"Make another graph\"}\n                    color=\"primary\"\n                    onClick={(event) => {\n                        event.preventDefault()\n                        setGraph([\n                            ...graphs,\n                            {\n                                graphId: getGraphId(),\n                                left: [],\n                                right: [],\n                            },\n                        ])\n                    }}\n                />\n            </div>\n        </Paper>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    releases: state.releases,\n})\n\nconst styles = theme => ({\n    addedGraph: {\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'top left',\n        backgroundSize: '100% 20px',\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    },\n    buttons: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n    },\n    block: {\n        display: 'block',\n    },\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(PullRequestCustom))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { P } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport Line from '../charts/Line'\nimport ItemsTable from './ItemsTable'\nimport { chunkData } from '../charts/lineHelpers'\n\n\nconst formatIssueData = (data = []) => data\n    .map((item) => ({\n        mergedAt: item.mergedAt,\n        ...(\n            item.isBug\n                ? { bug: 1 }\n                : { issue: 1 }\n        ),\n    }))\n\n\nconst IssuesTrends = ({\n    issues = [],\n    releases = [],\n    classes,\n} = {}) => {\n    const data = formatIssueData(issues)\n    const chunkyData = chunkData(issues)\n\n    return data && data.length > 0 && (\n        <Paper>\n            <ChartDescription\n                title=\"Feature and bug trends\"\n            />\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Issues',\n                                color: '#1f77b4',\n                                dataKey: 'issue',\n                                groupMath: 'count',\n                            },\n                            {\n                                label: 'Bugs*',\n                                color: '#e82573',\n                                dataKey: 'bug',\n                                groupMath: 'count',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data,\n                    },\n                ]}\n            />\n            <ItemsTable\n                dataKeys={['isBug']}\n                data={chunkyData}\n            />\n            <P className={classes.fullP}>*Bugs in this graph are issues that have a title or a label that contains the word 'bug'</P>\n        </Paper>\n    )\n}\n\nconst styles = theme => ({\n    'fullP': {\n        width: '100%',\n        textAlign: 'center',\n    },\n})\n\nconst mapStateToProps = (state) => ({\n    issues: state.issues,\n    releases: state.releases,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(IssuesTrends))\n","const hasChartData = dataArray => keys => keys\n    .some(key => dataArray\n        .some(dataItem => dataItem[key])\n    )\n\nexport default hasChartData\n","import React from 'react'\nimport { filter } from 'ramda'\nimport { ResponsiveBar as NivoBar } from '@nivo/bar'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\nimport hasChartData from './hasChartData'\n\nconst Bar = styledCharts(({\n    data = [],\n    bars = [],\n    sortBy = 'comments',\n    indexBy = 'user',\n    max = 20,\n    classes,\n    layout = \"vertical\",\n    titlePrefix = ''\n} = {}) => {\n    const theme = useTheme();\n    const trimmedData = filter(item => bars.some(x => item[x.dataKey]), data)\n\n    const byPropDesc = prop => (a, b) =>\n        +((a[prop] || 0) < (b[prop] || 0)) || +((a[prop] || 0) === (b[prop] || 0)) - 1\n\n    const sortedData = sortBy\n        ? trimmedData.sort(byPropDesc(sortBy))\n        : trimmedData\n\n    const finalData = max\n        ? sortedData.slice(0, max)\n        : sortedData\n\n    const keys = bars.map(x => x.dataKey)\n\n    return hasChartData(data)(keys) && (\n        <div className={classes.barChartComponentWrap}>\n            <ChartHeading text={titlePrefix} items={bars} />\n            <div className={classes.chartWrap}>\n                <NivoBar\n                    data={finalData}\n                    keys={keys}\n                    indexBy={indexBy}\n                    margin={{ top: 5, right: 50, bottom: 60, left: 50 }}\n                    padding={0.3}\n                    groupMode=\"grouped\"\n                    layout={layout}\n                    valueFormat={(value) => layout === 'horizontal'\n                        ? `${Math.abs(value)}`\n                        : value}\n                    colors={bars.map(x => x.color)}\n                    axisBottom={{\n                        tickSize: 0,\n                        tickRotation: -45,\n                    }}\n                    axisLeft={{\n                        tickSize: 0,\n                    }}\n                    enableLabel={false}\n                    animate={false}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Bar","const { path, prop, sum } = require('ramda');\n\nconst getNameList = (data, key) => {\n    const scoredData = {}\n    data\n        .forEach((userData) => {\n            const author = userData.author\n            const keyData = userData[key] || {}\n            const given = sum(Object.values(keyData))\n\n            scoredData[author] = given\n        })\n\n    const sortedValues = Object.entries(scoredData)\n        .sort(([, a], [, b]) => b - a)\n\n    const total = sum(Object.values(scoredData))\n\n    const percentageOfTotal = (value) => {\n        const percentPerUnit = 100 / total\n        const percentOf = value * percentPerUnit\n\n        return percentOf\n    }\n\n    const showNames = []\n    sortedValues\n        .forEach(([author, value]) => {\n            const itemsPercent = percentageOfTotal(value)\n\n            value > 0\n                && itemsPercent > 5\n                && showNames.push(author)\n        })\n\n    // We do not want only one user going into the \"Other\" group\n    return showNames.length === data.length - 1\n        ? sortedValues.map(([x]) => x)\n        : showNames\n}\n\nconst otherTotal = (ignoreNames = [], data = {}) => {\n    const otherAuthors = Object.entries(data)\n        .filter(([name]) => !ignoreNames.some(x => x === name))\n\n    const total =  sum(otherAuthors.map(x => x[1]))\n    return total\n}\n\nconst getMatrix = (\n    data = [],\n    key = '',\n    showNames = [],\n    otherAppened = false,\n) => {\n    const martixRow = (item) => [\n        ...showNames.map(x => path([key, x], item) || 0),\n        ...(\n            otherAppened\n                ? [otherTotal(showNames, prop(key, item))]\n                : []\n        ),\n    ]\n\n    const matrixRowsForNamed = showNames\n        .map((name) => {\n            const nameData = data.find(x => x.author === name)\n            return martixRow(nameData)\n        })\n\n    const matrixRowForOther = data\n        .filter(({ author }) => !showNames.some(x => x === author))\n        .reduce((acc, item) => {\n            const currentMatrix = martixRow(item)\n\n            const mergedMatrix = currentMatrix\n                .map((value, i) => value + (acc[i] || 0))\n\n            // Matrix other row can not have data to self logged, must be 0\n            return [\n                ...mergedMatrix.slice(0, mergedMatrix.length - 1),\n                0,\n            ]\n        }, [])\n\n    return [\n        ...matrixRowsForNamed,\n        ...(\n            matrixRowForOther.length\n                ? [matrixRowForOther]\n                : []\n        ),\n    ]\n}\n\nconst formatChordData = (data, key) => {\n    const showNames = getNameList(data, key)\n    const otherAppened = showNames.length < data.length\n\n    const matrix = getMatrix(data, key, showNames, otherAppened)\n\n    const names = [\n        ...showNames,\n        ...(\n            otherAppened\n                ? ['Others']\n                : []\n        ),\n    ]\n\n    return {\n        names,\n        matrix,\n    }\n}\n\nexport default formatChordData\n","import React from 'react'\nimport { ResponsiveChord as NivoChord } from '@nivo/chord'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport formatChordData from '../../format/chordData'\nimport styledCharts from './styledCharts'\nimport colors from '../colors'\n\nconst Chord = styledCharts(({\n    title,\n    data = [],\n    dataKey = '',\n    classes,\n} = {}) => {\n    const theme = useTheme();\n    const {\n        names,\n        matrix,\n    } = formatChordData(data, dataKey)\n\n    const hasMatrixData = (matrix) => matrix\n        .some(row => row\n            .some(Boolean)\n        )\n\n    return hasMatrixData(matrix) && (\n        <div>\n            <ChartHeading text={title} className={classes.centerHeading} />\n            <div className={classes.chordWrap}>\n                <NivoChord\n                    label=\"id\"\n                    data={matrix}\n                    keys={names}\n                    margin={{ top: 0, right: 10, bottom: 10, left: 10 }}\n                    arcBorderColor={{ from: 'color', modifiers: [['darker', 0.4]] }}\n                    ribbonOpacity={0.5}\n                    ribbonBorderWidth={0.5}\n                    ribbonBorderColor={{ from: 'color', modifiers: [['darker', 0.4]] }}\n                    innerRadiusRatio={0.85}\n                    labelRotation={0}\n                    padAngle={0.06}\n                    innerRadiusOffset={0.03}\n                    labelOffset={-23}\n                    labelTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\n                    colors={colors}\n                    isInteractive={true}\n                    arcHoverOpacity={1}\n                    arcHoverOthersOpacity={0.25}\n                    ribbonHoverOpacity={0.75}\n                    ribbonHoverOthersOpacity={0.25}\n                    animate={false}\n                    motionStiffness={90}\n                    motionDamping={7}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Chord","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { P } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport Bar from '../charts/Bar'\nimport Chord from '../charts/Chord'\n\nconst TeamTrends = ({\n    usersData = [],\n    userIds = [],\n    classes,\n} = {}) => {\n    const maxAuthors = userIds.length || 7\n    return usersData.length > 0 && (\n        <Paper>\n            <ChartDescription\n                title=\"Contribution distribution\"\n            />\n\n            <div className={classes.groupedCharts}>\n                <P>These chord charts show how contributions are given and received, the dominant colours indicate the higher contributions</P>\n                <Chord data={usersData} dataKey=\"commentsByUser\" title=\"Comment contributions\" />\n                <Chord data={usersData} dataKey=\"approvalsByUser\" title=\"Approval contributions\" />\n            </div>\n            <Bar\n                data={usersData}\n                indexBy=\"author\"\n                titlePrefix=\"Comments\"\n                sortBy=\"commentsGiven\"\n                max={maxAuthors}\n                bars={[\n                    {\n                        dataKey: 'commentsGiven',\n                        color: '#1f77b4',\n                        label: 'given*',\n                    },\n                    {\n                        dataKey: 'commentsReceived',\n                        color: '#e82573',\n                        label: 'received',\n                    },\n                ]}\n            />\n            <Bar\n                data={usersData}\n                indexBy=\"author\"\n                titlePrefix=\"PRs\"\n                sortBy=\"uniquePRsApproved\"\n                max={maxAuthors}\n                bars={[\n                    {\n                        dataKey: 'uniquePRsApproved',\n                        color: '#1f77b4',\n                        label: 'approved*',\n                    },\n                    {\n                        dataKey: 'totalPRs',\n                        color: '#e82573',\n                        label: 'opened',\n                    },\n                ]}\n            />\n            <P>*Given comments and approvals are taken from the PRs in the dataset, i.e. not all comments/approvals that user has many given over the same time period.</P>\n        </Paper>\n    )\n}\n\nconst styles = theme => ({\n    groupedCharts: {\n        ...theme.palette.groupedCharts,\n        '& p': {\n            flexBasis: '100%',\n            textAlign: 'center',\n        },\n    },\n})\n\nconst mapStateToProps = (state) => ({\n    usersData: state.usersData,\n    userIds: state.fetches.userIds,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(TeamTrends))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\nimport { useTheme } from '@material-ui/core/styles';\nimport { splitAt } from 'ramda'\n\nimport Line from '../charts/Line'\nimport Paper from '../shared/Paper'\nimport colors from '../colors'\nimport ChartDescription from '../shared/ChartDescription'\nimport { P } from '../shared/StyledTags'\nimport ItemsTable from './ItemsTable'\n\nimport { chunkData } from '../charts/lineHelpers'\n\n\nconst Sentiment = ({\n    pullRequests = [],\n    releases = [],\n    userIds = [],\n    classes = {}\n} = {}) => {\n    const theme = useTheme();\n\n    const sentPRData = pullRequests.map(prData => ({\n        ...prData,\n        [`${prData.author}-commentsSentimentScore`]: prData.commentSentimentScore,\n        [`${prData.author}-commentAuthorSentimentScore`]: prData.commentAuthorSentimentScore,\n    }))\n\n    const chunkyData = chunkData(sentPRData)\n\n    const lines = userIds\n        .map((userId, i) => ([\n            {\n                label: `To ${userId}`,\n                color: colors[i % colors.length],\n                dataKey: `${userId}-commentsSentimentScore`,\n            },\n            {\n                label: `From ${userId}`,\n                color: colors[i % colors.length],\n                dataKey: `${userId}-commentAuthorSentimentScore`,\n            }\n        ]))\n        .flat()\n\n    const [leftLines, rightLines] = lines.length > 10\n        ? splitAt(Math.ceil(lines.length/2),lines)\n        :[lines, []]\n\n    const showLegends = userIds.length > 10\n        ? false\n        : true\n\n    const legends = showLegends\n        ? [\n            {\n                data: leftLines,\n                anchor: 'top-left',\n                direction: 'column',\n                justify: false,\n                translateX: 10,\n                translateY: 10,\n                itemsSpacing: 0,\n                itemDirection: 'left-to-right',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 1,\n                symbolSize: 12,\n                symbolShape: 'square',\n                symbolBorderColor: 'rgba(0, 0, 0, .9)',\n                toggleSerie: true,\n                itemTextColor: theme.palette.text.primary,\n            },\n            {\n                data: rightLines,\n                anchor: 'top-right',\n                direction: 'column',\n                justify: false,\n                translateX: -10,\n                translateY: 10,\n                itemsSpacing: 0,\n                itemDirection: 'right-to-left',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 1,\n                symbolSize: 12,\n                symbolShape: 'square',\n                symbolBorderColor: 'rgba(0, 0, 0, .9)',\n                toggleSerie: true,\n                itemTextColor: theme.palette.text.primary,\n            }\n        ]\n        : []\n\n    return sentPRData.length > 0 && (<>\n        <Paper>\n            <ChartDescription\n                title=\"Sentiment analysis*\"\n            >\n                <div>\n                    <P>*Adding this is an experiment to see if it can provide useful insights.</P>\n                    <P>Uses npm package <a className={classes.link} href=\"https://github.com/thisandagain/sentiment\" alt=\"sentiment github package\">sentiment</a> which uses AFINN-165 word list and Emoji ranking to perform sentiment analysis.</P>\n                </div>\n            </ChartDescription>\n            <Line\n                markers={releases}\n                showLegends={true}\n                title=\"Sentiment in PRs between team and reviewers\"\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'To team',\n                                color: colors[0],\n                                dataKey: 'commentSentimentScore',\n                            },\n                            {\n                                label: 'From team',\n                                color: colors[2],\n                                dataKey: 'commentAuthorSentimentScore',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data: sentPRData,\n                    },\n                ]}\n            />\n            <ItemsTable\n                dataKeys={['commentSentimentScore', 'commentAuthorSentimentScore', 'author']}\n                data={chunkyData}\n            />\n\n            {\n                userIds.length > 0 && <>\n                    <Line\n                        showLegends={showLegends}\n                        legends={legends}\n                        title=\"Sentiment in PRs between authors and reviewers\"\n                        data={[\n                            {\n                                lines,\n                                xAxis: 'left',\n                                data: sentPRData,\n                            },\n                        ]}\n                    />\n                    <ItemsTable\n                        dataKeys={['commentSentimentScore', 'commentAuthorSentimentScore', 'author']}\n                        data={chunkyData}\n                    />\n                </>\n            }\n        </Paper>\n    </>)\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    releases: state.releases,\n    userIds: state.fetches.userIds,\n})\n\nconst styles = theme => ({\n    link: {\n        color: theme.palette.link,\n    },\n})\nexport default connect(mapStateToProps)(withStyles(styles)(Sentiment))\n","import React from 'react'\nimport { Radar as NivoRadar } from '@nivo/radar'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\nimport hasChartData from './hasChartData'\n\nconst radarSliceTooltip = fullData => ({ index, data }) => {\n    const matched = fullData.find(x => x.area === index);\n    const rows = data.map(({ id, color }) => [\n        <Chip key={id} color={color} />,\n        id,\n        matched[`${id}Original`],\n    ])\n\n    return <TableTooltip title={<strong>{index}</strong>} rows={rows} />\n}\n\nconst Radar = styledCharts(({\n    title = '',\n    titleItems = [],\n    data = [],\n    keys = [],\n    width = 410,\n    height = 300,\n    classes,\n} = {}) => {\n    const theme = useTheme();\n\n    return hasChartData(data)(keys) && (\n        <div>\n            <ChartHeading className={classes.centerHeading} items={\n                titleItems.length\n                    ? titleItems\n                    : [{ label: title }]\n            } />\n            <NivoRadar\n                width={width}\n                height={height}\n                margin={{ top: 0, bottom: 0, right: 100, left: 100 }}\n                dotSize={8}\n                dotBorderColor={theme.charts.dotColor}\n                dotBorderWidth={2}\n                colors={['#1f77b4', '#e82573']}\n                gridShape=\"linear\"\n                enableDotLabel={false}\n                gridLabelOffset={10}\n                gridLevels={3}\n                animate={false}\n                indexBy='area'\n                keys={keys}\n                data={data}\n                maxValue={100}\n                theme={theme.charts}\n                gridAngleStep={200}\n                angleStep={200}\n                sliceTooltip={radarSliceTooltip(data)}\n            />\n        </div>\n    )\n})\n\nexport default Radar","import { sortByKeys } from '../utils'\nconst formatRadarData = (userData, filterAuthor) => {\n\n    const defaultValues = {\n        age: 0,\n        approvalsGiven: 0,\n        approvalsReceived: 0,\n        codeCommentsGiven: 0,\n        codeCommentsReceived: 0,\n        commentsGiven: 0,\n        commentsReceived: 0,\n        generalCommentsGiven: 0,\n        generalCommentsReceived: 0,\n        prSize: 0,\n        totalPRs: 0,\n        uniquePRsApproved: 0,\n        uniquePRsContributedTo: 0,\n    }\n\n    const filteredContributors = userData\n        .filter(x => filterAuthor\n            ? x.author !== filterAuthor\n            : true)\n        .filter(({\n            commentsGiven,\n            commentsReceived,\n            approvalsGiven,\n            approvalsReceived,\n        }) => [\n            commentsGiven,\n            commentsReceived,\n            approvalsGiven,\n            approvalsReceived,\n        ].some(x => x > 1))\n\n    const keys = [\n        'commentsGiven',\n        'commentsReceived',\n        'approvalsGiven',\n        'approvalsReceived',\n    ]\n\n    const sortedUsers = filteredContributors\n        .sort(sortByKeys(keys))\n\n    const p10 = Math.ceil(sortedUsers.length / 100 * 10)\n    const topUsers = p10 > 10\n        ? sortedUsers.slice(0, p10)\n        : sortedUsers\n\n    const totalled = {}\n    topUsers\n        .filter(x => !filterAuthor || x.author !== filterAuthor)\n        .forEach((user) => {\n            Object.entries(user)\n                .filter(([, value]) => !Array.isArray(value) && /^\\d+$/.test(value) && value > 0)\n                .forEach(([key, value]) => {\n                    const current = totalled[key] || 0\n                    totalled[key] = value + current\n                })\n        })\n\n    const userCount = topUsers.length\n    const averagedData = { ...defaultValues, user: 'Peers', userCount }\n    Object.entries(totalled)\n        .forEach(([key, value]) => {\n            averagedData[key] = Math.round(value / userCount)\n        })\n\n    const usersData = userData\n        .find(x => x.author === filterAuthor) || { approvalsGivenByTeam: {} }\n\n    const maxValues = defaultValues\n    userData\n        .forEach((user) => {\n            const withNumberValue = Object.entries(user)\n                .filter(([, value]) => !Array.isArray(value) && /^\\d+$/.test(value))\n\n            withNumberValue\n                .forEach(([key, value]) => {\n                    const accVaue = maxValues[key] || 0\n\n                    maxValues[key] = accVaue > value\n                        ? accVaue\n                        : value\n                })\n        })\n\n    return {\n        averagedData,\n        maxValues,\n        users: userData,\n        user: filterAuthor\n            ? usersData\n            : {},\n    }\n}\n\nexport default formatRadarData","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { H } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport Radar from '../charts/Radar'\nimport formatRadarData from '../../format/radarData'\nimport { sortByKeys } from '../../utils'\n\nconst radialChartsContributions = ({ maxValues = {}, users = [] }, isTeamPage) => {\n    const keys = [\n        'commentsGiven',\n        'commentsReceived',\n        'approvalsGiven',\n        'approvalsReceived',\n    ]\n\n    const topXUsers = isTeamPage\n        ? users\n        : users\n            .sort(sortByKeys(keys))\n            .slice(0, 6)\n\n    const items = [\n        {\n            area: 'Code comments',\n            given: 'codeCommentsGiven',\n            received: 'codeCommentsReceived',\n        },\n        {\n            area: 'PR comments',\n            given: 'generalCommentsGiven',\n            received: 'generalCommentsReceived',\n        },\n        {\n            area: 'Approvals',\n            given: 'approvalsGiven',\n            received: 'approvalsReceived',\n        },\n    ]\n\n    const radarData = topXUsers\n        .map(user => {\n            const data = items\n                .map(({ area, given, received}) => {\n                    const givenOriginal = user[given] || 0\n                    const receivedOriginal = user[received] || 0\n\n                    return {\n                        area,\n                        given: givenOriginal\n                            ? (givenOriginal / (maxValues[given] || 0)) * 100\n                            : 0,\n                        received: receivedOriginal\n                            ? (receivedOriginal / (maxValues[received] || 0)) * 100\n                            : 0,\n                        givenOriginal,\n                        receivedOriginal,\n                    }\n                })\n\n            return {\n                title: user.author,\n                data,\n                keys: ['given', 'received'],\n            }\n        })\n\n    return radarData\n}\n\nconst UserTrends = ({\n    usersData = [],\n    userIds = [],\n} = {}) => {\n    const radarData = formatRadarData(usersData)\n    // const prRadars = radialChartsPRs(radarData)\n    const contributionsRadar = radialChartsContributions(radarData, userIds.length > 0)\n\n    return contributionsRadar.length > 0 && (\n        <Paper>\n            <ChartDescription\n                title={(\n                    <>\n                        <H level={2}>User's contributions</H>\n                        <H level={3}>Comments and approvals, <span style={{ color: '#1f77b4' }}>given</span> and <span style={{ color:'#e82573'}}>received</span></H>\n                    </>\n                )}\n                intro=\"This section shows how given and received metrics compare for the top contributors.\"\n            >\n            </ChartDescription>\n            {\n                contributionsRadar\n                    .map((info, i) => <Radar key={i} {...info} />)\n            }\n        </Paper>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    usersData: state.usersData,\n    userIds: state.fetches.userIds,\n})\n\nexport default connect(mapStateToProps)(UserTrends)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Paper from '../shared/Paper'\nimport Button from '../shared/Button'\nimport { H } from '../shared/StyledTags'\n\n\nimport { setUser as setUserAction } from '../../state/actions'\n\nconst UserList = ({\n    usersData = [],\n    setUser,\n    classes,\n} = {}) => usersData.length > 0 && (<>\n    <Paper className=\"justify\">\n        <H level={2} className={classes.fullW}>\n            User pages\n        </H>\n        <div className={classes.allButons}>\n            {\n                usersData\n                    .map(({ author }, i) => (\n                        <Button\n                            value={author}\n                            key={i}\n                            color=\"secondary\"\n                            onClick={(e) => {\n                                e.preventDefault()\n                                setUser(e.currentTarget.value)\n                                window && window.scrollTo(0, 0)\n                            }}\n                        />\n                    ))\n            }\n        </div>\n    </Paper>\n</>)\n\nconst mapDispatchToProps = dispatch => ({\n    setUser: (x) => dispatch(setUserAction(x)),\n})\n\nconst styles = theme => ({\n    'allButons': {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n        '& button': {\n            flexGrow: 1\n        }\n    },\n    'fullW': {\n        width: '100%',\n    },\n})\n\nconst mapStateToProps = (state) => ({\n    usersData: state.usersData,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UserList))","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { pick } from 'ramda'\nimport {\n    Select,\n    MenuItem,\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport ButtonWithMessage from './ButtonWithMessage'\nimport SelectAmountData from './SelectAmountData'\nimport TextInput from './TextInput'\n\nimport Download from './Download'\nimport ChartDescription from '../../shared/ChartDescription'\nimport { P } from '../../shared/StyledTags'\nimport styles from './styles'\nimport {\n    inputLabels,\n    formValue,\n    validateForm,\n} from './utils'\n\nimport {\n    storeToken,\n    storeAmountOfData,\n    storeFormUntilDate,\n    storeSortDirection,\n    getAPIData,\n    getDownloadProps,\n    checkUntilDate,\n} from '../../../state/actions'\n\nconst PrefetchedForm = (props) => {\n    const {\n        setValues,\n        getData,\n        fetches = {},\n        fetching,\n        classes,\n        userIds = [],\n    } = props\n\n    const reportType = userIds.length > 0\n        ? 'team'\n        : 'repo'\n\n    const inputKeys = [\n        'sortDirection',\n        'amountOfData',\n        'token',\n    ]\n\n    const inputs = pick(inputKeys, fetches)\n\n    const [formInfo, setFormInfo] = useState(inputs)\n    const [inputError, setInputError] = useState({})\n\n    const setValue = (key, value) => setFormInfo({\n        ...formInfo,\n        [key]: value\n    })\n\n    const inputStates = {\n        inputError,\n        setInputError,\n        formInfo,\n        setValue,\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        const {\n            isValid,\n            validationErrors,\n        } = validateForm(formInfo)\n\n        setInputError(validationErrors)\n\n        isValid && !fetching\n            && setValues(formInfo)\n\n        isValid && !fetching\n            && getData()\n    }\n\n    const reportKeys = reportType === 'repo'\n        ? ['org', 'repo']\n        : ['userIds', 'teamName']\n\n    const hardCodedKeys = [\n        ...reportKeys,\n        'excludeIds',\n        'enterpriseAPI',\n    ]\n\n    return (\n        <ChartDescription\n            className={`${classes.formDescription} ${classes.fullRow}`}\n            title=\"\"\n            expandText=\"here\"\n            intro=\"Top up this report's data\"\n        >\n            <div className={classes.formDescription} >\n                <form\n                    onSubmit={handleSubmit}\n                >\n                    <div className={classes.inputGrid}>\n                        <Select\n                            value={formInfo.sortDirection}\n                            onChange={(e) => setValue('sortDirection', e.target.value)}\n                            inputProps={{ 'aria-label': 'Starting point' }}\n                        >\n                            <MenuItem value=\"DESC\" >Prepend data</MenuItem>\n                            <MenuItem value=\"ASC\">Append data</MenuItem>\n                        </Select>\n                        <SelectAmountData setValue={setValue} amountOfData={formInfo.amountOfData} />\n                        <TextInput\n                            type=\"token\"\n                            { ...inputStates }\n                        />\n                        <P className=\"tokenText\">\n                            * To create a token go to your GitHub <a className={classes.link} href=\"https://github.com/settings/tokens\">tokens</a> page, click on 'generate new token', choose the settings 'repo' (all) and 'read:org' then click 'Generate token'.\n                        </P>\n                        {\n                            hardCodedKeys\n                                .filter((inputKey) => formValue(fetches, inputKey))\n                                .map((inputKey) => <P key={inputKey}>{inputLabels[inputKey]}: <b>{formValue(fetches, inputKey) || 'N/A'}</b></P>)\n                        }\n                    </div>\n                    <ButtonWithMessage />\n                </form>\n                <Download />\n            </div>\n        </ChartDescription>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    fetches: state.fetches,\n    fetching: state.fetching,\n    error: state.error,\n    pullRequests: state.pullRequests,\n    userIds: state.fetches.userIds,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setValues: (values) => {\n        const {\n            token,\n            amountOfData,\n            sortDirection\n        } = values\n\n        dispatch(checkUntilDate(sortDirection))\n        dispatch(storeToken(token))\n        dispatch(storeAmountOfData(amountOfData))\n        dispatch(storeSortDirection(sortDirection))\n        dispatch(storeFormUntilDate(amountOfData))\n    },\n    getData: (x) => dispatch(getAPIData(x)),\n    getDownloadInfo: () => dispatch(getDownloadProps),\n})\n\nexport default connect(mapStateToProps,\n    mapDispatchToProps)(withStyles(styles)(PrefetchedForm))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\nimport { always, cond, T, propSatisfies, where } from 'ramda'\n\nimport { H, P } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport PretetchedForm from '../home/DataOptions/PretetchedForm'\n\nconst RepoOrgCopy = ({ repo, org } = {}) => org === repo\n    ? (<span style={{ color: '#e82573' }}>{repo}</span>)\n    : (\n        <>\n            <span style={{ color: '#1f77b4' }}>{org}</span>/<span style={{ color: '#e82573' }}>{repo}</span>\n        </>\n    )\n\nconst TeamName = ({ teamName }) => <span style={{ color: '#e82573' }}>{teamName}</span>\n\nconst titleCopy = cond([\n    [\n        where({\n            org: Boolean,\n            repo: Boolean,\n        }),\n        RepoOrgCopy,\n    ],\n    [\n        propSatisfies(Boolean,'teamName'),\n        TeamName,\n    ],\n    [\n        T,\n        always('Report'),\n    ],\n])\n\nconst ReportDescription = ({\n    fetches = {},\n    preFetchedName = '',\n    pullRequests = [],\n    issues = [],\n    releases = [],\n    userIds = [],\n    classes\n} = {}) => {\n    const releaseCount = releases.length\n\n    const hasReportData = pullRequests.length > 0 || issues.length > 0\n\n    return hasReportData && (<Paper className={classes.root}>\n            <H className={classes.heading} level={2}>\n                {\n                    titleCopy(fetches)\n                }\n            </H>\n            {\n                userIds.length > 0\n                    && <P>\n                        {\n                            userIds.join(', ')\n                        }\n                    </P>\n            }\n            <P>{pullRequests.length > 0 && `Pull requests: ${pullRequests.length}`}{ issues.length > 0 && `, Issues: ${issues.length}`}{ releaseCount > 0 && `, Releases: ${releaseCount}`}</P>\n           {\n              preFetchedName.length > 0\n                && <PretetchedForm />\n           }\n        </Paper>)\n}\n\nconst mapStateToProps = (state) => ({\n    fetches: state.fetches,\n    preFetchedName: state.preFetchedName,\n    pullRequests: state.pullRequests,\n    issues: state.issues,\n    releases: state.releases,\n    userIds: state.fetches.userIds,\n})\n\nconst styles = theme => ({\n    root: {\n        display: 'block'\n    },\n    heading: theme.copy.h1,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(ReportDescription))\n","import React from 'react'\n\nimport PullRequestTrends from './sections/PullRequestTrends'\nimport PullRequestCustom from './sections/PullRequestCustom'\nimport IssuesTrends from './sections/IssuesTrends'\nimport TeamTrends from './sections/TeamTrends'\nimport Sentiment from './sections/Sentiment'\nimport UserTrends from './sections/UserTrends'\nimport UserList from './sections/UserList'\nimport ReportDescription from './sections/ReportDescription'\n\nconst RepoView = () => <>\n    <ReportDescription />\n    <TeamTrends />\n    <PullRequestCustom />\n    <Sentiment />\n    <PullRequestTrends />\n    <IssuesTrends />\n    <UserTrends />\n    <UserList />\n</>\n\nexport default RepoView\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { H } from './shared/StyledTags'\nimport ChartDescription from './shared/ChartDescription'\nimport Button from './shared/Button'\nimport Paper from './shared/Paper'\nimport Radar from './charts/Radar'\nimport Bar from './charts/Bar'\nimport Line from './charts/Line'\nimport ItemsTable from './sections/ItemsTable'\nimport { chunkData } from './charts/lineHelpers'\n\nimport colors from './colors'\nimport { clearUser } from '../state/actions'\nimport formatRadarData from '../format/radarData'\n\nconst colourA = '#1f77b4'\nconst colourB = '#e82573'\n\nconst userRadars = (\n    {\n        averagedData,\n        maxValues,\n        user,\n    },\n    userName\n) => {\n    const items = [\n        {\n            area: 'Code comments',\n            dataKey: 'codeCommentsGiven',\n        },\n        {\n            area: 'PR comments',\n            dataKey: 'generalCommentsGiven',\n        },\n        {\n            area: 'Approvals',\n            dataKey: 'approvalsGiven',\n        },\n        {\n            area: 'Merged PRs',\n            dataKey: 'totalPRs',\n        },\n        {\n            area: 'PR size',\n            dataKey: 'prSize',\n        },\n    ]\n\n    const getRadarData = items => items\n        .map(({ area, dataKey }) => {\n            const originalUser = user[dataKey] || 0\n            const peersOriginal = averagedData[dataKey] || 0\n            const maxValue = maxValues[dataKey] || 0\n\n            return {\n                area,\n                [userName]: (originalUser / maxValue) * 100,\n                peers: (peersOriginal / maxValue) * 100,\n                [`${userName}Original`]: originalUser,\n                peersOriginal,\n            }\n        })\n\n    const radars = [\n        {\n            data: getRadarData(items),\n            titleItems: [\n                { label: userName, color: colourA },\n                { label: 'Peers', color: colourB },\n            ],\n            keys: [userName, 'peers'],\n            width: 400,\n            height: 235,\n        },\n    ]\n\n    return radars\n}\n\nconst userBars = ({\n    averagedData,\n    user,\n}) => {\n    const averageAndUserData = [user, averagedData]\n\n    return [\n        {\n            bars:[\n                {\n                    dataKey: 'commentsGiven',\n                    color: colourA,\n                    label: 'Comments given',\n                },\n                {\n                    dataKey: 'commentsReceived',\n                    color: colourB,\n                    label: 'Comments received',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'approvalsGiven',\n                    color: colourA,\n                    label: 'Approvals given',\n                },\n                {\n                    dataKey: 'approvalsReceived',\n                    color: colourB,\n                    label: 'Approvals received',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'totalPRs',\n                    color: colourA,\n                    label: 'Opened PRs',\n                },\n                {\n                    dataKey: 'uniquePRsApproved',\n                    color: colourB,\n                    label: 'PRs approved',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'prSize',\n                    color: colourA,\n                    label: 'PR size',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'age',\n                    color: colourB,\n                    label: 'PR age',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n    ]\n}\n\nconst userGraphs = (data = [], releases = [], userName) => {\n    const mergedPrData = data\n        .filter(({ mergedAt } = {}) => mergedAt)\n\n    const peerPrData = mergedPrData\n        .filter(({ author }) => author !== userName)\n\n    const userPrData = mergedPrData\n        .filter(({ author }) => author === userName)\n\n    const chunkyData = chunkData(userPrData)\n    console.log('-=-=--userPrData', userPrData)\n\n    return [\n        [\n            {\n                dataKeys:['commentSentimentScore', 'commentAuthorSentimentScore'],\n                data: chunkyData,\n            },\n            {\n                markers: releases,\n                showLegends: true,\n                title: 'Sentiments in PR',\n                data: [{\n                    lines: [\n                        {\n                            label: `${userName} received`,\n                            color: colors[2],\n                            dataKey: 'commentSentimentScore',\n                            data: userPrData,\n                        },\n                        {\n                            label: `${userName} given`,\n                            color: colors[1],\n                            dataKey: 'commentAuthorSentimentScore',\n                            data: userPrData,\n                        },\n                        {\n                            label: 'Peer received',\n                            color: colors[4],\n                            dataKey: 'commentSentimentScore',\n                            data: peerPrData,\n                        },\n                        {\n                            label: 'Peer given',\n                            color: colors[5],\n                            dataKey: 'commentAuthorSentimentScore',\n                            data: peerPrData,\n                        },\n                    ],\n                    xAxis: 'left',\n                }],\n            },\n        ],\n        [\n            {\n                dataKeys:['prSize'],\n                data: chunkyData,\n            },\n            {\n                markers: releases,\n                data: [{\n                    lines: [\n                        {\n                            label: 'User PR size',\n                            color: colourA,\n                            dataKey: 'prSize',\n                            data: userPrData,\n                        },\n                        {\n                            label: 'Peer PR size',\n                            color: colourB,\n                            dataKey: 'prSize',\n                            data: peerPrData,\n                        },\n                    ],\n                    xAxis: 'left',\n                }],\n            },\n        ],\n        [\n            {\n                dataKeys:['age'],\n                data: chunkyData,\n            },\n            {\n                markers: releases,\n                data: [{\n                    lines: [\n                        {\n                            label: 'User PR age',\n                            color: colourA,\n                            dataKey: 'age',\n                            data: userPrData,\n                        },\n                        {\n                            label: 'Peer PR age',\n                            color: colourB,\n                            dataKey: 'age',\n                            data: peerPrData,\n                        },\n                    ],\n                    xAxis: 'left',\n                }],\n            },\n        ],\n    ]\n}\n\nconst UserView = ({\n    pullRequests = [],\n    releases = [],\n    usersData = [],\n    user,\n    removeUser,\n    classes,\n} = {}) => {\n    const radarData = formatRadarData(usersData, user)\n    const radars = userRadars(radarData, user)\n    const bars = userBars(radarData)\n    const graphs = userGraphs(pullRequests, releases, user)\n\n    return (\n        <>\n            <Paper>\n                <ChartDescription\n                    title={\n                        <H level={2}>\n                            <span style={{ color: colourA }}>{user}</span>\n                            <Button\n                                className={classes.topButton}\n                                variant=\"outlined\"\n                                size=\"small\"\n                                value=\"Back to main view\"\n                                color=\"secondary\"\n                                onClick={(e) => {\n                                    e.preventDefault()\n                                    removeUser()\n                                }} />\n                        </H>\n                    }\n                    intro={`A collection of charts showing ${user} and average data from the top ${radarData.averagedData.userCount} peers`}\n                />\n\n                {\n                    radars.length\n                        && (\n                            <div className={classes.groupedCharts}>\n                                {\n                                    radars\n                                        .map((info, i) => <Radar key={i} {...info} />)\n                                 }\n                            </div>\n                        )\n                }\n                {\n                    bars.length\n                        && bars\n                            .map((info, i) => <Bar key={i} {...info} />)\n                }\n                {\n                    graphs.length\n                        && graphs\n                            .map(([itemsInfo, lineInfo], i) => <>\n                                <Line key={i} {...lineInfo} />\n                                <ItemsTable key={i + graphs.length} {...itemsInfo} />\n                            </>)\n                }\n\n                <Button\n                    className={classes.fill}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value=\"Back to main view\"\n                    color=\"secondary\"\n                    onClick={(e) => {\n                        e.preventDefault()\n                        removeUser()\n                        window && window.scrollTo(0, 0)\n                    }} />\n            </Paper>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    releases: state.releases,\n    usersData: state.usersData,\n    user: state.user,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    removeUser: (x) => dispatch(clearUser(x)),\n})\n\nconst styles = theme => ({\n    'groupedCharts': {\n        width: '100%',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n    },\n    fill: {\n        flexBasis: '100%',\n    },\n    topButton: {\n        marginLeft: theme.mySpacing.y.large,\n    },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UserView))","import React from 'react'\nimport { ResponsivePie } from '@nivo/pie'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\n\nconst Pie = styledCharts(({\n    title,\n    data = [],\n    classes,\n} = {}) => {\n    const theme = useTheme();\n\n    return data.length && (\n        <div className={classes.lineChartComponentWrap}>\n            <div className={classes.headingWrap}>\n                <ChartHeading type='line' text={title} />\n            </div>\n\n            <div className={classes.pieWrap}>\n                <ResponsivePie\n                    data={data}\n                    colors={{ datum: 'data.color' }}\n                    margin={{ top: 5, right: 80, bottom: 5, left: 80 }}\n                    animate={false}\n                    innerRadius={0.65}\n                    padAngle={1}\n                    cornerRadius={4}\n                    activeOuterRadiusOffset={5}\n                    borderWidth={1}\n                    startAngle={-90}\n                    endAngle={90}\n                    enableArcLabels={false}\n                    arcLinkLabelsSkipAngle={4}\n                    arcLinkLabelsThickness={2}\n                    arcLinkLabelsColor={{ from: 'color' }}\n                    arcLabelsSkipAngle={10}\n                    arcLinkLabelsDiagonalLength={10}\n                    arcLinkLabelsStraightLength={15}\n                    arcLinkLabelsTextColor={theme.palette.text.primary}\n                    // legends={legends}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Pie","import React from 'react'\nimport { connect } from 'react-redux'\nimport { includes, splitAt } from 'ramda'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartDescription from '../shared/ChartDescription'\nimport Line from '../charts/Line'\nimport Pie from '../charts/Pie'\nimport Paper from '../shared/Paper'\nimport ItemsTable from './ItemsTable'\nimport colors from '../colors'\nimport { chunkData } from '../charts/lineHelpers'\n\n\nconst RepoSplit = ({\n    pullRequests = [],\n} = {}) => {\n    const theme = useTheme();\n\n    const allRepos = {}\n    const allPRdata = pullRequests.map(prData => {\n        allRepos[prData.repo] =  (allRepos[prData.repo] || 0) + 1\n        return ({\n            ...prData,\n            [`repo-${prData.repo}`]: 1,\n        })\n    })\n\n    const sortedRepoData = Object.entries(allRepos)\n        .sort(([,a],[,b]) => a - b)\n\n    const topRepos = sortedRepoData.slice(-20)\n\n    const uniqueRepos = sortedRepoData.length > 19\n        ? topRepos.map(([repo]) => repo)\n        : Object.keys(allRepos)\n\n    const pieData = topRepos\n        .map(([repo, value], i) => ({\n            id: repo,\n            label: repo,\n            color: colors[i % colors.length],\n            value: value,\n        }))\n\n    const filteredPRData = allPRdata\n        .filter(({ repo = ''} = {}) => includes(repo, uniqueRepos))\n\n    const sectionTitle = sortedRepoData.length > uniqueRepos.length\n        ? `PRs split by top 20 of ${sortedRepoData.length} repositories`\n        : `PRs split by repository (${uniqueRepos.length} repos)`\n\n    const lines = uniqueRepos\n        .map((repo, i) => ({\n            label: repo,\n            color: colors[i % colors.length],\n            dataKey: `repo-${repo}`,\n            groupMath: 'count',\n        }))\n\n    const [leftData, rightData] = lines.length > 10\n        ? splitAt(Math.ceil(lines.length/2),lines)\n        :[lines, []]\n\n    const legends = [\n        {\n            data: leftData,\n            anchor: 'top-left',\n            direction: 'column',\n            justify: false,\n            translateX: 10,\n            translateY: 10,\n            itemsSpacing: 0,\n            itemDirection: 'left-to-right',\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 1,\n            symbolSize: 12,\n            symbolShape: 'square',\n            symbolBorderColor: 'rgba(0, 0, 0, .9)',\n            toggleSerie: true,\n            itemTextColor: theme.palette.text.primary,\n        },\n        {\n            data: rightData,\n            anchor: 'top-right',\n            direction: 'column',\n            justify: false,\n            translateX: -10,\n            translateY: 10,\n            itemsSpacing: 0,\n            itemDirection: 'right-to-left',\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 1,\n            symbolSize: 12,\n            symbolShape: 'square',\n            symbolBorderColor: 'rgba(0, 0, 0, .9)',\n            toggleSerie: true,\n            itemTextColor: theme.palette.text.primary,\n        }\n    ]\n\n    const chunkyData = chunkData(pullRequests)\n\n    return filteredPRData.length > 0 && (<>\n        <Paper>\n            <ChartDescription title={sectionTitle} />\n            <Pie\n                data={pieData}\n                title=\"PR repository rainbow\"\n            />\n            <Line\n                title=\"Repository PRs over time\"\n                legends={legends}\n                showLegends={true}\n                data={[\n                    {\n                        lines,\n                        xAxis: 'left',\n                        data: filteredPRData,\n                    },\n                ]}\n            />\n            <ItemsTable\n                dataKeys={['repo', 'author']}\n                data={chunkyData}\n            />\n        </Paper>\n    </>)\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n})\n\nexport default connect(mapStateToProps)(RepoSplit)\n","import React from 'react'\n\nimport PullRequestTrends from './sections/PullRequestTrends'\nimport PullRequestCustom from './sections/PullRequestCustom'\nimport IssuesTrends from './sections/IssuesTrends'\nimport TeamTrends from './sections/TeamTrends'\nimport UserTrends from './sections/UserTrends'\nimport UserList from './sections/UserList'\nimport RepoSplit from './sections/RepoSplit'\nimport Sentiment from './sections/Sentiment'\nimport ReportDescription from './sections/ReportDescription'\n\nconst Team = () => <>\n    <ReportDescription />\n    <TeamTrends />\n    <PullRequestCustom />\n    <Sentiment />\n    <RepoSplit />\n    <PullRequestTrends />\n    <IssuesTrends />\n    <UserTrends />\n    <UserList />\n</>\n\nexport default Team\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n    cond,\n    always,\n    propSatisfies,\n    T as alwaysTrue,\n} from 'ramda'\nimport RepoView from '../Repo'\nimport UserView from '../User'\nimport TeamView from '../Team'\n\nconst Visualisation = (props) => (\n    <div>\n        {\n            cond([\n                [propSatisfies(Boolean, 'user'), always(<UserView />)],\n                [propSatisfies(Boolean, 'teamName'), always(<TeamView />)],\n                [alwaysTrue, always(<RepoView />)],\n            ])(props)\n        }\n    </div>\n)\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    teamName: state.fetches.teamName,\n})\n\nexport default connect(mapStateToProps)(Visualisation)","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst CoreWrapper = ({ classes, children }) => <div className={classes.wrapper}>{children}</div>\n\nconst styles = theme => ({\n    '@global': {\n        'body': {\n            margin: 0,\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    wrapper: {\n        padding: 0,\n        backgroundColor: theme.palette.background.default,\n        overflow: 'auto',\n    },\n})\n\nexport default withStyles(styles)(CoreWrapper)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Brightness3 from '@material-ui/icons/Brightness3';\nimport WbSunny from '@material-ui/icons/WbSunny';\n\nimport { toggleTheme } from '../../state/actions'\n\nconst Links = ({ classes, themeType, themeToggle }) => {\n    return (\n        <div className={classes.wrapper} >\n            <a alt=\"My Twitter page\" className={classes.link} href=\"https://twitter.com/chris_07734\">\n                <TwitterIcon className={classes.icon} />\n            </a>\n            <a alt=\"Github repo page\" className={classes.link} href=\"https://github.com/n07734/community-health\">\n                <GitHubIcon className={classes.icon} />\n            </a>\n            <a\n                href=\"#theme\"\n                alt=\"Change theme\"\n                onClick={(e) => {\n                    e.preventDefault()\n                    themeToggle()\n                }}\n                className={themeType}\n            >\n                <WbSunny className={`${classes.icon} sun`} />\n                <Brightness3 className={`${classes.icon} moon`} />\n            </a>\n        </div>\n    );\n};\n\nconst styles = theme => ({\n    wrapper: {\n        position: 'absolute',\n        top: theme.mySpacing.x.small,\n        right: theme.mySpacing.x.small,\n        '& > a': {\n            marginLeft: theme.mySpacing.x.small\n        },\n        '& a:hover $icon': {\n            color: theme.palette.iconHover\n        },\n        '& .dark .moon': {\n            display: 'none'\n        },\n        '& .dark:hover .moon': {\n            display: 'inline'\n        },\n        '& .dark:hover .sun': {\n            display: 'none'\n        },\n        '& .light .sun': {\n            display: 'none'\n        },\n        '& .light:hover .sun': {\n            display: 'inline'\n        },\n        '& .light:hover .moon': {\n            display: 'none'\n        },\n    },\n    icon: {\n        color: theme.palette.text.primary,\n    }\n})\n\nconst mapStateToProps = (state) => ({\n    themeType: state.themeType,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    themeToggle: (x) => dispatch(toggleTheme(x)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Links))\n","import React from 'react'\n\nimport { H, P } from '../shared/StyledTags'\nimport ChartDescription from '../shared/ChartDescription'\nimport Paper from '../shared/Paper'\nimport DataOptions from './DataOptions'\nimport Visualisation from './Visualisation'\nimport PageWrapper from './PageWrapper'\nimport Links from './Links'\n\nconst Page = () => (\n    <PageWrapper>\n        <Paper className=\"bg-none\">\n            <Links />\n            <ChartDescription\n                title={(\n                    <H level={1}>Code Community Health</H>\n                )}\n                intro=\"The aim of this tool is to help teams learn from their contribution trends. Also to see the contribution trends of popular repositories and teams\"\n            >\n                <div>\n                    <P>This tool is not a 'lines of code' metric, it contains in depth contribution based metrics meant to help teams find good and bad trends. Also helps show if changes to ways of working have an impact over time. Understanding of the team's way of working is needed to get the full value from this data.</P>\n                    <P>Context is king, data that looks 'good' might be 'bad' and data that looks 'bad' might be 'good'. For example little feedback in PRs may be expected if the team is doing small changes in an established code base or not getting enough feedback working on a greenfield project.</P>\n                </div>\n            </ChartDescription>\n        </Paper>\n        <>\n            <DataOptions />\n            <Visualisation />\n        </>\n    </PageWrapper>\n)\n\nexport default Page\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport { H, P } from './shared/StyledTags'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport {\n    always,\n    cond,\n    equals,\n    T as alwaysTrue\n} from 'ramda'\n\nconst styles = theme => ({\n    'root': {\n        position: 'relative',\n    },\n    'modal': {\n        position: 'fixed',\n        width: '80%',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        zIndex: 1000,\n        backgroundColor: theme.palette.background.paper,\n        padding: `${theme.mySpacing.x.large} ${theme.mySpacing.y.large}`,\n        '& .MuiLinearProgress-dashed': {\n            background: 'none',\n            backgroundColor: '#b10e4f',\n            animation: 'none',\n        },\n        '& .MuiLinearProgress-root': {\n            height: '14px',\n            marginBottom: theme.mySpacing.y.large,\n        }\n    },\n    'overlay': {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 999,\n        backgroundColor: '#b10e4f',\n        animation: 'pulse 1s infinite alternate',\n        opacity: 0.6,\n    },\n    '@keyframes pulse': {\n        '100%': {\n            opacity: 0.9,\n        },\n    }\n})\n\nconst daysRemainingText = cond([\n    [equals(1), x => `${x} day remaining`],\n    [x => x > 1 , x => `${x} days remaining`],\n    [x => x < 0 , always('Wrapping up')],\n    [alwaysTrue, always('')],\n])\n\nconst Loader = ({\n    fetches = {},\n    fetching = false,\n    fetchStatus = {},\n    pullRequests: pastPRs = [],\n    formUntilDate = '',\n    classes = {},\n} = {}) => {\n    const {\n        userIds = [],\n        sortDirection = '',\n    } = fetches\n\n    const {\n        user = '',\n        prCount = 0,\n        latestItemDate = '',\n        issueCount = 0,\n        savedReportName = '',\n    } = fetchStatus\n\n    const isTeamSearch = userIds.length > 0\n\n    const dayDiff = (a,b) => sortDirection === 'DESC'\n        ? differenceInDays(a, b)\n        : differenceInDays(b, a)\n\n    const prIndex = sortDirection === 'DESC'\n        ? 0\n        : -1\n\n    const startDate = pastPRs.length > 0\n        ? new Date(pastPRs.at(prIndex).mergedAt)\n        : new Date()\n\n    const uptoDate = latestItemDate\n        ? new Date(latestItemDate)\n        : startDate\n\n    const untilDate = new Date(formUntilDate)\n\n    const daysTotal = dayDiff(startDate, untilDate)\n    const daysLoaded = dayDiff(startDate, uptoDate)\n    const daysRemaining = daysTotal - daysLoaded\n    const oneDayPercent = 100 / (daysTotal || 10)\n    const loadedPercent = (daysLoaded * oneDayPercent)\n\n    const usersPosition = user\n        ? userIds.findIndex(x => x === user)\n        : 0\n\n    const loadedUsers = usersPosition > 0\n        ? userIds.slice(0, usersPosition)\n        : []\n\n    const oneUserPercent = 100 / (userIds.length || 10)\n    const loadedUserPercent = (usersPosition * oneUserPercent)\n\n    return (\n        fetching && <div>\n            <div className={ classes.overlay }></div>\n            <div className={ classes.modal }>\n                {\n                    isTeamSearch\n                        && <>\n                            <H level={2}>\n                                Loading {usersPosition + 1} of {userIds.length} {userIds.length === 1 ? 'user' : 'users'}\n                            </H>\n                            <LinearProgress className={classes.dashed} variant=\"determinate\" value={loadedUserPercent} valueBuffer={oneUserPercent + loadedUserPercent}/>\n                        </>\n                }\n                <H level={2}>\n                    {daysRemainingText(daysRemaining)}\n                </H>\n                {\n                    savedReportName\n                        && <>\n                            <H level={2}>\n                                Fetching {savedReportName}\n                            </H>\n                        </>\n                }\n                <LinearProgress className={classes.dashed} variant=\"determinate\" value={loadedPercent} valueBuffer={oneDayPercent + loadedPercent}/>\n                {\n                    !savedReportName\n                        && !isTeamSearch\n                        && <>\n                            <H level={2}>\n                                {prCount} Pull Requests\n                            </H>\n                            <H level={2}>\n                                {issueCount} Issues\n                            </H>\n                        </>\n                }\n                {\n                    isTeamSearch\n                        && loadedUsers.length > 0\n                        && <>\n                            <P>\n                                Loaded users: {loadedUsers.join(', ')}\n                            </P>\n                        </>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    fetches: state.fetches,\n    fetching: state.fetching,\n    fetchStatus: state.fetchStatus,\n    pullRequests: state.pullRequests,\n    formUntilDate: state.formUntilDate,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(Loader))\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport { pathOr } from 'ramda'\n\nimport theme from './theme'\nimport Page from './components/home/Page'\nimport Loader from './components/Loader'\nimport * as actions from './state/actions'\nimport './fonts.css'\n\nconst App = ({\n    themeType,\n    setReposUserId\n} = {}) => {\n    useEffect(() => {\n        const quertString = pathOr('', ['location', 'search'], window)\n        const urlParams = new URLSearchParams(quertString);\n        const user = urlParams.get('user') || '';\n\n        setReposUserId(user)\n    }, [setReposUserId])\n\n    return (\n        <MuiThemeProvider theme={theme(themeType)}>\n            <Loader />\n            <Page />\n        </MuiThemeProvider>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    themeType: state.themeType,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setReposUserId: (x) => dispatch(actions.setUser(x)),\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App)\n","import { combineReducers } from 'redux'\nimport types from './types'\n\nconst setClear = startValue => (storKey, clearKey) => (current = startValue, action) => {\n    const newValue = ({\n        [types[storKey]]: () => action.payload,\n        [types[clearKey]]: () => startValue,\n    })[action.type]\n\n    return newValue\n        ? newValue()\n        : current\n}\n\nconst setClearString = setClear('')\nconst setClearArray = setClear([])\nconst setClearPagination = setClear({ hasNextPage: true })\n\nconst reducers = combineReducers({\n    user: setClearString('SET_USER', 'CLEAR_USER'),\n    fetches: combineReducers({\n        token: (token = '', action) => (action.type === types.STORE_TOKEN)\n            ? action.payload\n            : token,\n        org: setClearString('STORE_ORG', 'CLEAR_ORG'),\n        repo: setClearString('STORE_REPO', 'CLEAR_REPO'),\n        teamName: setClearString('SET_TEAM_NAME', 'CLEAR_TEAM_NAME'),\n        untilDate: setClearString('STORE_UNTIL_DATE', 'CLEAR_UNTIL_DATE'),\n        amountOfData: (amountOfData = 1, action) => (action.type === types.STORE_AMOUNT)\n            ? action.payload\n            : amountOfData,\n        sortDirection: (sortDirection = 'DESC', action) => (action.type === types.STORE_SORT)\n            ? action.payload\n            : sortDirection,\n        enterpriseAPI: (enterpriseAPI = '', action) => (action.type === types.STORE_ENT_URL)\n            ? action.payload\n            : enterpriseAPI,\n        userIds: setClearArray('STORE_USER_IDS', 'CLEAR_USER_IDS'),\n        excludeIds: setClearArray('STORE_EX_IDS', 'CLEAR_EX_IDS'),\n        prPagination: setClearPagination('SET_PR_PAGINATION', 'CLEAR_PR_PAGINATION'),\n        releasesPagination: setClearPagination('SET_RELEASES_PAGINATION', 'CLEAR_RELEASES_PAGINATION'),\n        issuesPagination: setClearPagination('SET_ISSUES_PAGINATION', 'CLEAR_ISSUES_PAGINATION'),\n    }),\n    formUntilDate: setClearString('STORE_FORM_UNTIL_DATE', 'CLEAR_FORM_UNTIL_DATE'),\n    fetching: (fetching = false, action) => [\n        action.type === types.FETCH_START\n            && (() => true),\n        action.type === types.FETCH_END\n            && (() => false),\n        () => fetching,\n    ]\n        .find(Boolean)(),\n    fetchStatus: (fetchStatus = {}, action) => action.type === types.FETCH_STATUS\n        ? action.payload\n        : fetchStatus,\n    error: setClearString('FETCH_ERROR', 'CLEAR_FETCH_ERROR'),\n    preFetchedError: setClearString('PRE_FETCH_ERROR', 'CLEAR_PRE_FETCH_ERROR'),\n    preFetchedName: setClearString('PREFETCHED_NAME', 'CLEAR_PREFETCHED_NAME'),\n    pullRequests: (prs = [], action) => [\n        action.type === types.ADD_PRS\n            && action.payload,\n        action.type === types.CLEAR_PRS && [],\n        prs,\n    ].find(Boolean),\n    filteredPRs: (filteredPRs = [], action) => [\n        action.type === types.ADD_FILTERED_PRS\n            && action.payload,\n        action.type === types.CLEAR_FILTERED_PRS && [],\n        filteredPRs,\n    ].find(Boolean),\n    usersData: (users = [], action) => [\n        action.type === types.ADD_USERS_DATA\n            && action.payload,\n        action.type === types.CLEAR_USERS_DATA && [],\n        users,\n    ].find(Boolean),\n    issues: (issues = [], action) => [\n        action.type === types.ADD_ISSUES\n            && action.payload,\n        action.type === types.CLEAR_ISSUES && [],\n        issues,\n    ].find(Boolean),\n    filteredIssues: (filteredIssues = [], action) => [\n        action.type === types.ADD_FILTERED_ISSUES\n            && action.payload,\n        action.type === types.CLEAR_FILTERED_ISSUES && [],\n        filteredIssues,\n    ].find(Boolean),\n    releases: (releases = [], action) => [\n        action.type === types.ADD_RELEASES\n            && releases.concat(action.payload),\n        action.type === types.CLEAR_RELEASES && [],\n        releases,\n    ].find(Boolean),\n    themeType: (themeType = 'dark', action) =>\n        action.type === types.TOGGLE_THEME\n            ? (themeType === 'dark' ? 'light' : 'dark')\n            : themeType,\n})\n\nexport default reducers\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createStore, applyMiddleware, compose } from 'redux'\n\nimport App from './App'\nimport reducers from './state/reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunk)\n))\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}