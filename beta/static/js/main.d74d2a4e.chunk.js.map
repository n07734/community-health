{"version":3,"sources":["../node_modules/sentiment/languages sync /^/.//.*//index$","prefetchedData sync /^/.//.*/.json$","format/rawData.js","theme.js","components/shared/StyledTags.js","components/shared/ChartDescription.js","components/shared/Paper.js","components/shared/Button.js","components/home/DataOptions/styles.js","api/batch.js","format/filterByUntilDate.js","api/queries.js","api/fillers.js","state/types.js","api/api.js","api/getUsersData.js","api/getUntilDate.js","format/lightenData.js","format/userData.js","state/actions.js","components/home/DataOptions/PrefetchedOptions.js","components/home/Message.js","components/home/DataOptions/FormSection.js","components/home/DataOptions/index.js","components/colors.js","components/charts/ChartHeading.js","components/charts/styledCharts.js","components/charts/batchBy.js","components/charts/lineHelpers.js","components/charts/Line.js","components/sections/PullRequestTrends.js","components/sections/IssuesTrends.js","components/charts/hasChartData.js","components/charts/Bar.js","format/chordData.js","components/charts/Chord.js","components/sections/TeamTrends.js","components/charts/Radar.js","format/radarData.js","components/sections/UserTrends.js","components/sections/UserList.js","components/sections/ReportDescription.js","components/Repo.js","components/User.js","components/charts/Pie.js","components/sections/RepoSplit.js","components/sections/Sentiment.js","components/Team.js","components/home/Visualisation.js","components/home/PageWrapper.js","components/home/Links.js","components/home/Page.js","components/Loader.js","App.js","state/reducers.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","paths","themeColor","type","light","dark","themeColorBg","fontFamily","fontSize","defaultCopy","color","marginTop","marginBottom","fontWeight","markerSettings","legendOrientation","legendPosition","height","legendOffsetX","legendOffsetY","spacing","x","tiny","small","medium","large","y","theme","createTheme","palette","secondary","contrastText","main","primary","mainCopy","groupedCharts","width","display","flexWrap","justifyContent","iconHover","text","link","background","default","paper","shadow","switch","typography","useNextVariants","mySpacing","copy","body","lineHeight","list","listItem","h4","h3","h2","h1","charts","textColor","crosshair","line","stroke","axis","legend","fill","ticks","legends","hidden","symbol","opacity","legendsTextFill","dotColor","tooltip","container","boxShadow","grid","markers","lineStyle","strokeWidth","textStyle","tertiary","strokeDasharray","styles","p","P","withStyles","className","classes","children","UL","LI","H","level","styleAs","props","hClassName","Tag","root","flexGrow","alignItems","rootRows","flexBasis","linkMargin","marginLeft","wrapperFlex","title","intro","expandText","useState","toggle","setCount","href","onClick","preventDefault","Collapse","in","padding","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","position","flexDirection","classNames","marginRight","key","value","join","variant","size","inputGrid","gridTemplateColumns","columnGap","rowGap","minHeight","gridColumn","typeOptions","textTransform","fullRow","formDescription","dataPaper","child","margin","preFetched","runBatchQueue","batches","job","resolved","Promise","reject","currentBatch","remainingBatches","all","j","then","results","length","more","concat","catch","batch","argsList","batchSize","splitEvery","filterByUntilDate","datePath","order","untilDate","item","itemsDateValue","pathOr","itemsDate","Date","until","isAfter","isBefore","cursorQ","cursor","getCursor","oldest","newest","pageInfo","comments","pullRequests","pagination","reviews","issues","releases","getPaginationByType","oldFetchInfo","data","hasNextPage","startCursor","endCursor","items","dateKey","filteredItems","isDate","filter","typeStateMap","oldestDefault","oldestCurrent","newestDefault","newestCurrent","dateFilteredLength","tryNextpage","cond","always","alwaysFalse","alwaysTrue","hasNextPageForDate","getRemainingPageCount","sort","a","b","maxItems","Math","ceil","userQuery","user","amountOfData","issuesPagination","prPagination","query","resultInfo","byType","updatedAmountOfData","Number","isInteger","nextPageInfo","hasNextPageKey","values","some","fillerType","hasMoreResults","batchedQuery","org","repo","releasesPagination","commentsQuery","nodeId","rawData","nextArgs","reviewsQuery","reviewCommentsQuery","fillData","apiCall","fillByType","fillers","pullRequestsComments","pullRequestsReviews","allPullRequestReviewsComments","filler","resolvedFillers","reduce","currentItem","applyFillerResult","recursiveFiller","makeQuery","queryInfo","currentResults","currentHasNextPage","newResult","newHasNextPage","updatedData","updateRawData","newData","updatedNode","assign","node","getQueryInfo","getAllReviewComments","review","currentReviewComments","reviewCommentsQueryInfo","allReviewComments","edges","updatedReviewComments","getAllPullRequestReviews","pullRequest","currentReviews","reviewsQueryInfo","allReviews","allPullRequestsReviews","updatedpullRequestsData","updatePullRequests","propOr","result","pullRequestsItems","pullRequestsData","mergedPullRequests","currentPullRequest","find","getAllPullRequestComments","currentComments","commentsQueryInfo","allComments","allPullRequestsComments","types","SET_USER","CLEAR_USER","SET_TEAM_NAME","CLEAR_TEAM_NAME","STORE_ORG","CLEAR_ORG","STORE_TOKEN","STORE_FORM_UNTIL_DATE","STORE_UNTIL_DATE","SET_PR_PAGINATION","CLEAR_PR_PAGINATION","SET_RELEASES_PAGINATION","CLEAR_RELEASES_PAGINATION","SET_ISSUES_PAGINATION","CLEAR_ISSUES_PAGINATION","FETCH_STATUS","FETCH_START","FETCH_ERROR","CLEAR_FETCH_ERROR","FETCH_END","STORE_REPOS","STORE_REPO","CLEAR_REPO","STORE_AMOUNT","STORE_SORT","STORE_ENT_URL","STORE_EX_IDS","STORE_USER_IDS","ADD_PRS","ADD_FILTERED_PRS","CLEAR_PRS","CLEAR_FILTERED_PRS","ADD_ISSUES","ADD_FILTERED_ISSUES","CLEAR_FILTERED_ISSUES","CLEAR_ISSUES","ADD_RELEASES","CLEAR_RELEASES","TOGGLE_THEME","PREFETCHED_NAME","ADD_USERS_DATA","CLEAR_USERS_DATA","parseJSON","response","json","status","error","console","log","triggeredAbuseRate","message","test","triggeredJsonError","fetchInfo","fetch","enterpriseAPI","method","headers","token","JSON","stringify","shouldGetNextPage","pause","ms","setTimeout","numRateTriggers","pauseThenRetry","apiInfo","now","api","errorMessage","getCurrentItemsByType","total","acc","getLatestPrDate","allPrs","prs","targetPr","at","dispatch","payload","prCount","latestPrDate","issueCount","releaseCount","apiCallWithToken","fullData","updatedResults","updatedFetchInfo","mergeDeepRight","hasTriggeredAbuse","propEq","compose","getErrorMessage","undefined","getUsersData","userIds","allUsersData","finalFetchInfo","allResults","forEach","push","prop","usersData","flat","currentEndDate","mergedAt","getUntilDate","fetches","changeBy","months","amountOfDataIsString","is","String","isDesc","isAsc","noDateUntil","isEmpty","subtractDate","sub","dateFromPRs","lastDate","add","sortDirection","newUntilDate","allPass","formatCommenters","path","userCount","formatSentimentsCommenters","author","score","totalScore","formatSentiments","sentiment","Sentiment","sentimental","comment","analyze","sentimentScore","sentiments","getAllCodeComments","allCodeComments","filterForUsers","users","includes","filterOutUsers","formatComments","exclude","generalComments","codeComments","commentsMap","general","commentsAuthor","authorSentimentScore","prefix","formatAllComments","generalCommentsInfo","codeCommentsInfo","collatedCommentsInfo","formatApprovals","ghApprovals","ghApprovers","approvals","approvers","dateSort","getTime","filterSortPullRequests","excludeIds","allPullRequests","filteredPRs","remainingPRs","hasExcludedAuthor","any","keepItem","formatPullRequests","url","additions","deletions","createdAt","allCommentsInfo","prSize","age","differenceInDays","prData","flatten","filterSortIssues","allIssues","filteredIssues","remainingIssues","formatIssues","labels","isBug","formatReleases","tag","releaseType","majorV","major","minorV","minor","patchV","patch","prereleaseV","prerelease","Boolean","getReleaseType","date","description","slimValue","Array","isArray","slimArray","slimObject","arr","newArray","obj","newObject","entries","newValue","baseUserData","approvalsGiven","approvalsByUser","commentsGiven","commentsReceived","codeCommentsGiven","codeCommentsReceived","generalCommentsGiven","generalCommentsReceived","totalPRs","uniquePRsContributedTo","commentsByUser","updateContributorCount","currentData","objKey","addition","prevData","updated","formatUserData","updateByUsersCount","currentUserData","currentKeyData","updatedKeyData","userData","commenters","codeCommenters","generalCommenters","updatedCommentsByUser","updatedApprovalsByUser","updatedCommentsGiven","updatedCodeCommentsGiven","updatedGeneralCommentsGiven","updatedApprovalsGiven","updatedUniquePRsApproved","Set","prSizes","averagePrSize","round","prAges","averagePrAge","approvalsReceived","uniqueAuthors","newUsersData","sortedUsers","aTotal","setUser","userIdsFromString","pipe","split","trim","clearData","updateUsersData","getState","state","noUserIds","missing","current","i","prepend","validateRequest","validStringArgs","every","validArraygArgs","isValid","getPreFetchedData","name","repoData","require","preFetchedName","teamName","fallback","getDownloadProps","reportData","assoc","pickAll","dissocPath","getReportData","blob","Blob","URL","createObjectURL","fileName","download","connect","getPreFetchedInfo","preFetchButton","borderRadius","backgroundColor","warn","buttonText","fetching","validate","equals","inputLabels","setValues","currentOrg","storeOrg","currentRepo","storeRepo","userIdsArray","currentUserIds","not","storeUserIds","currentTeamName","storeTeamName","storeToken","currentEnterpriseAPI","storeEnterpriseAPI","excludeArray","currentExcludeIds","storeExcludeIds","storeAmountOfData","formUntilDate","storeFormUntilDate","storeSortDirection","getData","appendData","isValidRequest","newPullrequests","allPullrequests","newRemainingPRs","newFilteredPRs","newIssues","newRemainingIssues","newFilteredissues","getAPIData","getDownloadInfo","preFetchedReport","reportType","primaryInputs","defaultInputs","inputKeys","inputError","setInputError","inputs","pick","formInfo","setFormInfo","setValue","inputProps","label","helperText","onBlur","event","onChange","onFocus","hasTeamData","itemText","amount","onSubmit","getErrorValue","errorValue","newInputError","Select","target","MenuItem","inputKey","TextField","selectedOption","setOption","Paper","PrefetchedOptions","colors","ChartHeading","useStyles","makeStyles","borderBottom","content","bottom","left","right","LineItem","Item","style","mathTypeMap","average","sum","count","multiple","uniqueLinesMaths","groupMath","singleMathType","centerHeading","textAlign","headingWrap","barChartComponentWrap","maxWidth","lineChartComponentWrap","chordWrap","pieWrap","chartWrap","styledCharts","Chart","getMonth","getWeek","getDay","differenceInMonths","isNewNthWeek","mod","prev","prevItemsWeek","currentItemsWeek","isNew","prevItemsDay","currentItemsDay","batchByType","batchType","prevWeeks","slice","currentWeek","prevItem","batchByData","startDate","endDate","totalMonths","T","batchBy","getAllYValues","getMaxYValue","allValues","apply","max","getMinYValue","minValue","min","dateA","dateB","formatDate","info","month","dayM","getDate","getFullYear","formatLineData","dataKey","sortedData","batchedData","formattedData","formatBatches","formatLinesData","axix","lines","formatGraphMarkers","lineData","start","end","currentStart","currentEnd","dateStart","dateEnd","formattedMarkers","currentDate","MAJOR","MINOR","smoothNumber","ruffledNumber","stringNumber","roundTo","reduceRight","index","increment","number","parseInt","updatedItem","reverse","ToolTip","convertedRightLines","getYValue","point","yCurrentValue","yFormatted","originalY","Chip","points","rows","serieColor","serieId","Line","showLegends","useTheme","leftAxis","xAxis","leftLinesData","maxLeftValue","minLeftValue","rightAxis","rightLinesData","maxRightValue","dataItem","leftHeadingItems","rightHeadingItems","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","toggleSerie","itemTextColor","hasData","top","lineWidth","curve","animate","xScale","format","xFormat","yScale","axisBottom","tickSize","tickPadding","tickRotation","axisLeft","tickValues","pointLabelYOffset","axisRight","rawLeftValue","realRightValue","enableGridX","enableSlices","sliceTooltip","getByAuthorData","authorsPrs","pr","theirPrs","byAuthorLines","byAuthor","isTeamPage","byAuthorData","formatIssueData","bug","issue","fullP","hasChartData","dataArray","Bar","bars","sortBy","indexBy","layout","titlePrefix","trimmedData","byPropDesc","finalData","groupMode","valueFormat","abs","enableLabel","getNameList","scoredData","keyData","given","sortedValues","accPercent","showNames","itemPercent","percentageOfTotal","formatChordData","otherAppened","matrix","otherTotal","ignoreNames","martixRow","matrixRowsForNamed","nameData","matrixRowForOther","mergedMatrix","getMatrix","names","Chord","hasMatrixData","row","arcBorderColor","from","modifiers","ribbonOpacity","ribbonBorderWidth","ribbonBorderColor","innerRadiusRatio","labelRotation","padAngle","innerRadiusOffset","labelOffset","labelTextColor","isInteractive","arcHoverOpacity","arcHoverOthersOpacity","ribbonHoverOpacity","ribbonHoverOthersOpacity","motionStiffness","motionDamping","maxAuthors","radarSliceTooltip","matched","area","Radar","titleItems","dotSize","dotBorderColor","dotBorderWidth","gridShape","enableDotLabel","gridLabelOffset","gridLevels","maxValue","gridAngleStep","angleStep","formatRadarData","filterAuthor","defaultValues","uniquePRsApproved","filteredContributors","p10","topUsers","totalled","addedUser","combinedData","averagedData","approvalsGivenByTeam","maxValues","parentAcc","upDateMaxValues","accVaue","radialChartsContributions","topXUsers","received","givenOriginal","receivedOriginal","radarData","contributionsRadar","setUserAction","fullW","allButons","currentTarget","window","scrollTo","titleCopy","where","propSatisfies","heading","RepoView","colourA","colourB","userRadars","userName","radars","originalUser","peersOriginal","getRadarData","userBars","averageAndUserData","userGraphs","mergedPrData","peerPrData","userPrData","removeUser","topButton","graphs","Pie","datum","innerRadius","cornerRadius","activeOuterRadiusOffset","borderWidth","startAngle","endAngle","enableArcLabels","arcLinkLabelsSkipAngle","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsTextColor","allRepos","sentPRData","uniqueRepos","pieData","commentSentimentScore","commentAuthorSentimentScore","alt","userId","Team","User","Repo","wrapper","overflow","themeType","themeToggle","icon","Page","PageWrapper","DataOptions","daysRemainingText","fetchStatus","transform","zIndex","animation","pastPRs","isTeamSearch","dayDiff","uptoDate","daysTotal","daysLoaded","daysRemaining","oneDayPercent","loadedPercent","usersPosition","findIndex","loadedUsers","oneUserPercent","loadedUserPercent","overlay","modal","LinearProgress","dashed","valueBuffer","actions","useEffect","quertString","urlParams","URLSearchParams","get","reducers","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.d74d2a4e.chunk.js","sourcesContent":["var map = {\n\t\"./en/index\": 325\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 458;","var map = {\n\t\"./ReactCore.json\": 460,\n\t\"./TypeScript.json\": 461,\n\t\"./babel.json\": 462,\n\t\"./cypress.json\": 463,\n\t\"./deno.json\": 464,\n\t\"./electron.json\": 465,\n\t\"./facebook-react-old.json\": 466,\n\t\"./graphql.json\": 467,\n\t\"./jest.json\": 468,\n\t\"./kotlin.json\": 469,\n\t\"./material-ui.json\": 470,\n\t\"./next.js.json\": 471,\n\t\"./node.json\": 472,\n\t\"./prettier.json\": 473,\n\t\"./ramda.json\": 474,\n\t\"./react-2.json\": 475,\n\t\"./react-cuurent.json\": 476,\n\t\"./react-new.json\": 477,\n\t\"./react-testing-library.json\": 478,\n\t\"./react.json\": 479,\n\t\"./react3.json\": 480,\n\t\"./svelte.json\": 481,\n\t\"./swift.json\": 482,\n\t\"./team.json\": 483,\n\t\"./vscode.json\": 484,\n\t\"./vue-next.json\": 485,\n\t\"./xstate.json\": 486\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 459;","import {\n    compose,\n    map,\n    any,\n    flatten,\n    filter,\n    path,\n    pathOr,\n    propOr,\n    sort,\n} from 'ramda'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport {\n    major,\n    minor,\n    patch,\n    prerelease,\n} from 'semver'\nimport Sentiment from 'sentiment'\nimport filterByUntilDate from './filterByUntilDate'\n\n\nconst formatCommentersObject = paths => items => items\n    .reduce((acc, item) => {\n        const user = path(paths, item)\n        const userCount = (acc[user] || 0) + 1\n\n        return Object.assign(acc, { [user]: userCount })\n    }, {})\n\nconst formatCommenters = formatCommentersObject(['node', 'author', 'login'])\n\nconst formatSentimentsCommenters = items => items\n    .reduce((acc, {author = '', score = 0}) => {\n        const totalScore = (acc[author] || 0) + score\n\n        return Object.assign(acc, { [author]: totalScore })\n    }, {})\n\nconst formatSentiments = (comments = []) => {\n    const sentiment = new Sentiment();\n\n    const sentimental = comments\n        .map(comment => {\n            const body = pathOr('',['node', 'body'], comment)\n            const commentAuthor = pathOr('', ['node', 'author', 'login'], comment)\n\n            return {\n                author: commentAuthor,\n                score: sentiment.analyze(body).score,\n            }\n        })\n\n    return {\n        sentimentScore: sentimental.reduce((acc, { score = 0 } = {}) => score + acc,0),\n        sentiments: formatSentimentsCommenters(sentimental),\n    }\n}\n\nconst getAllCodeComments = (data) => {\n    const allReviews = pathOr([], ['node', 'reviews', 'edges'], data)\n\n    const allCodeComments = []\n    allReviews\n        .forEach((review) => {\n            const comments = pathOr([], ['node', 'comments', 'edges'], review)\n            allCodeComments.push(...comments)\n        })\n\n    return allCodeComments\n}\n\nconst filterForUsers = users => item => users.includes(path(['node', 'author', 'login'], item))\nconst filterOutUsers = users => item => !filterForUsers(users)(item)\n\nconst formatComments = (type = '', exclude, data) => {\n    const author = pathOr('', ['node', 'author', 'login'], data)\n\n    const generalComments = pathOr([], ['node', 'comments', 'edges'], data)\n    const codeComments = getAllCodeComments(data)\n    const commentsMap = {\n        general: generalComments,\n        code: codeComments,\n        all: [\n            ...codeComments,\n            ...generalComments\n        ]\n    }\n    const allComments = commentsMap[type]\n\n    const comments = allComments\n        .filter(filterOutUsers([...exclude, author]))\n\n    const {\n        sentimentScore = 0,\n        sentiments = {},\n    } = formatSentiments(comments)\n\n    const commentsAuthor = allComments\n        .filter(filterForUsers([author]))\n    const {\n        sentimentScore: authorSentimentScore = 0,\n    } = formatSentiments(commentsAuthor)\n\n    const prefix = type === 'all'\n        ? 'c'\n        : `${type}C`\n\n    return {\n        [`${prefix}omments`]: comments.length,\n        [`${prefix}ommenters`]: formatCommenters(comments),\n        [`${prefix}ommentSentimentScore`]: sentimentScore,\n        [`${prefix}ommentSentiments`]: sentiments,\n        [`${prefix}ommentsAuthor`]: commentsAuthor.length,\n        [`${prefix}ommentAuthorSentimentScore`]: authorSentimentScore,\n    }\n}\n\nconst formatAllComments = (exclude, data) => {\n    const generalCommentsInfo = formatComments('general',exclude, data)\n    const codeCommentsInfo = formatComments('code', exclude, data)\n    const collatedCommentsInfo = formatComments('all', exclude, data)\n\n    return {\n        ...generalCommentsInfo,\n        ...codeCommentsInfo,\n        ...collatedCommentsInfo,\n    }\n}\n\nconst formatApprovals = (data) => {\n    const reviews = pathOr([], ['node', 'reviews', 'edges'], data)\n    const ghApprovals = reviews\n        .filter(x => path(['node', 'state'], x) === 'APPROVED')\n\n    const ghApprovers = formatCommenters(ghApprovals)\n\n    return {\n        approvals: ghApprovals.length,\n        approvers: ghApprovers,\n    }\n}\n\nconst prData = (exclude = []) => (data = {}) => {\n    const org = pathOr('', ['node', 'repository', 'owner', 'login'], data)\n    const repo = pathOr('', ['node', 'repository', 'name'], data)\n    const author = pathOr('', ['node', 'author', 'login'], data)\n    const url = pathOr('', ['node', 'url'], data)\n    const additions = pathOr(0, ['node', 'additions'], data)\n    const deletions = pathOr(0, ['node', 'deletions'], data)\n    const createdAt = pathOr('', ['node', 'createdAt'], data)\n    const mergedAt = pathOr('', ['node', 'mergedAt'], data)\n\n    const allCommentsInfo = formatAllComments(exclude, data)\n\n    const {\n        approvals,\n        approvers,\n    } = formatApprovals(data)\n\n    const prInfo = {\n        repo,\n        org,\n        author,\n        url,\n\n        additions,\n        deletions,\n        prSize: additions + deletions,\n\n        mergedAt,\n        age: differenceInDays(new Date(mergedAt), new Date(createdAt)) || 1,\n\n        approvals,\n        approvers,\n\n        ...allCommentsInfo\n    }\n\n    return prInfo\n}\n\nconst dateSort = (order) => ({ mergedAt: a }, { mergedAt: b }) => order === 'DESC'\n    ? new Date(a).getTime() > new Date(b).getTime()\n    : new Date(a).getTime() - new Date(b).getTime()\n\nconst filterSortPullRequests = ({ excludeIds = [], order }, untilDate, allPullRequests = []) => {\n    const filteredPRs = []\n    const remainingPRs = compose(\n        sort(dateSort('ASC')),\n        filter(item => {\n            const author = propOr('', 'author', item)\n            const hasExcludedAuthor = any(y => y === author, excludeIds)\n            const shouldFilterIn = filterByUntilDate(['mergedAt'], order, untilDate)(item)\n            const keepItem = shouldFilterIn && !hasExcludedAuthor\n\n            !keepItem && filteredPRs.push(item)\n            return keepItem\n        }),\n    )(allPullRequests)\n\n    return [remainingPRs, filteredPRs]\n}\n\nconst formatPullRequests = ({ excludeIds = [] }, results) => {\n    const pullRequests = compose(\n        map(prData(excludeIds)),\n        flatten,\n        map(pathOr([], ['data', 'result', 'pullRequests', 'edges'])),\n    )(results)\n\n    return pullRequests\n}\n\nconst filterSortIssues = ({ order }, untilDate, allIssues = []) => {\n    const filteredIssues = []\n    const remainingIssues = compose(\n        sort(dateSort('ASC')),\n        filter(item => {\n            const keepItem = filterByUntilDate(['mergedAt'], order, untilDate)(item)\n\n            !keepItem && filteredIssues.push(item)\n            return keepItem\n        }),\n    )(allIssues)\n\n    return [remainingIssues, filteredIssues]\n}\n\nconst formatIssue = (data) => {\n    const createdAt = pathOr('', ['node', 'createdAt'], data)\n    const title = pathOr('', ['node', 'title'], data)\n    const url = pathOr('', ['node', 'url'], data)\n    const labels = pathOr([], ['node', 'labels', 'edges'], data)\n\n    return {\n        // TODO: update key\n        mergedAt: createdAt,\n        url,\n        isBug: /bug/i.test(title) || labels.some(x => /bug/i.test(path(['node', 'name'], x))),\n    }\n}\n\nconst formatIssues = compose(\n    map(formatIssue),\n    flatten,\n    map(pathOr([], ['data', 'result', 'issues', 'edges'])),\n)\n\nconst getReleaseType = (tag) => {\n    try {\n        const majorV = major(tag)\n        const minorV = minor(tag)\n        const patchV = patch(tag)\n        const prereleaseV = prerelease(tag)\n\n        const releaseType = [\n            !prereleaseV && majorV && minorV === 0 && patchV === 0 && 'MAJOR',\n            !prereleaseV && minorV && patchV === 0 && 'MINOR',\n            'PATCH',\n        ].find(Boolean)\n\n        return releaseType\n    } catch(error) {\n        return 'PATCH'\n    }\n}\n\nconst formatRelease = (data) => {\n    const createdAt = pathOr('', ['node', 'createdAt'], data)\n    const tag = pathOr('', ['node', 'tag', 'name'], data)\n\n    const releaseType = getReleaseType(tag)\n\n    return {\n        date: createdAt,\n        description: tag,\n        releaseType,\n    }\n}\n\nconst formatReleases = compose(\n    map(formatRelease),\n    flatten,\n    map(pathOr([], ['data', 'result', 'releases', 'edges'])),\n)\nexport {\n    formatPullRequests,\n    filterSortPullRequests,\n    formatIssues,\n    filterSortIssues,\n    formatReleases,\n}\n","import { createTheme } from '@material-ui/core/styles'\n\nconst themeColor = type => ({\n    light: '#232023',\n    dark: '#eee',\n})[type]\n\nconst themeColorBg = type => ({\n    light: '#fff',\n    dark: '#232023',\n})[type]\n\nconst fontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\nconst fontSize = 12\n\nconst defaultCopy = (type) => ({\n    color: themeColor(type),\n    marginTop: 0,\n    marginBottom: '0.8rem',\n    fontSize: '1rem',\n    fontWeight: '400',\n    fontFamily,\n})\n\nconst markerSettings = {\n    legendOrientation: 'horizontal',\n    legendPosition: 'top-right',\n    height: 10,\n    legendOffsetX: 0,\n    legendOffsetY: -4,\n}\n\nconst spacing = {\n    x: {\n        tiny: '0.2rem',\n        small: '0.5rem',\n        medium: '0.8rem',\n        large: '1.2rem',\n    },\n    y: {\n        tiny: '0.5rem',\n        small: '0.8rem',\n        medium: '1rem',\n        large: '1.4rem',\n    },\n}\n\nconst theme =  (type = 'light') => createTheme({\n    type,\n    palette: {\n        type,\n        secondary: {\n            contrastText: '#ccc',\n            dark: '#1e6392',\n            light: '#7986cb',\n            main: '#1f77b4',\n        },\n        primary: {\n            contrastText: '#ccc',\n            dark: '#b10e4f',\n            light: '#d65287',\n            main: '#e82573',\n        },\n        mainCopy: {\n            color: themeColor(type),\n            fontSize: '1rem',\n            fontWeight: '400',\n            fontFamily,\n        },\n        groupedCharts: {\n            width: '100%',\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-evenly',\n        },\n        iconHover: ({\n            light: '#d65287',\n            dark: '#e82573',\n        })[type],\n        text: {\n            primary: themeColor(type),\n        },\n        link: ({\n            light: '#1f77b4',\n            dark: '#e82573',\n        })[type],\n        background: {\n            default: themeColorBg(type),\n            paper: themeColorBg(type),\n        },\n        shadow:({\n            light: '#ccc',\n            dark: '#666',\n        })[type],\n        switch: themeColor(type),\n    },\n    typography: { useNextVariants: true },\n    mySpacing: spacing,\n    copy: {\n        body: {\n            ...defaultCopy(type),\n            lineHeight: '1.3rem',\n        },\n        list: {\n            ...defaultCopy(type),\n            color: themeColor(type),\n        },\n        listItem: {\n            color: themeColor(type),\n            marginBottom: '0.2rem',\n        },\n        h4: {\n            ...defaultCopy(type),\n            marginBottom: '0.5rem',\n            fontSize: '1.3rem',\n            fontWeight: '500',\n        },\n        h3: {\n            ...defaultCopy(type),\n            fontSize: '2rem',\n            fontWeight: '500',\n            '@media (max-width: 768px)': {\n                fontSize: '1.5rem'\n            },\n            '@media (max-width: 668px)': {\n                fontSize: '1.3rem'\n            },\n        },\n        h2: {\n            ...defaultCopy(type),\n            fontSize: '3rem',\n            fontWeight: '200',\n            '@media (max-width: 768px)': {\n                fontSize: '2.5rem'\n            },\n            '@media (max-width: 668px)': {\n                fontSize: '2rem'\n            },\n        },\n        h1: {\n            ...defaultCopy(type),\n            fontSize: '4rem',\n            fontWeight: '300',\n            '@media (max-width: 768px)': {\n                fontSize: '3rem'\n            },\n            '@media (max-width: 668px)': {\n                fontSize: '2.5rem'\n            },\n        },\n    },\n    charts: {\n        fontFamily,\n        fontSize,\n        textColor: themeColor(type),\n        crosshair: {\n            line: {\n                stroke: themeColor(type),\n            },\n        },\n        axis: {\n            legend: {\n                text: { fill: themeColor(type) },\n            },\n            ticks: {\n                text: { fill: themeColor(type) },\n            },\n        },\n        legends: {\n            hidden: {\n                symbol: {\n                    fill: '#eee',\n                    opacity: 1,\n                },\n                text: {\n                    fill: '#eee',\n                    fontWeight: '400',\n                    opacity: 1,\n                },\n            },\n            text: {\n                fontWeight: '800',\n            },\n        },\n        legendsTextFill: themeColor(type),\n        dotColor: themeColor(type),\n        tooltip: {\n            fontFamily,\n            fontSize,\n            container: {\n                background: themeColorBg(type),\n                color: themeColor(type),\n                boxShadow: `0 1px 2px ${themeColor(type)}`,\n            },\n        },\n        grid: {\n            line: {\n                stroke: '#999',\n            },\n        },\n        markers: {\n            primary: {\n                lineStyle: {\n                    stroke:({\n                        light: '#077314',\n                        dark: '#077314',\n                    })[type],\n                    strokeWidth: 1,\n                },\n                textStyle: {\n                    fontFamily,\n                    fontSize,\n                    fill: ({\n                        light: '#077314',\n                        dark: '#077314',\n                    })[type],\n                },\n                ...markerSettings,\n            },\n            secondary: {\n                lineStyle: {\n                    stroke:({\n                        light: '#8b4ff0',\n                        dark: '#6b3dba',\n                    })[type],\n                    strokeWidth: 1,\n                },\n                textStyle: {\n                    fontFamily,\n                    fontSize,\n                    fill: ({\n                        light: '#8b4ff0',\n                        dark: '#6b3dba',\n                    })[type],\n                },\n                ...markerSettings,\n            },\n            tertiary: {\n                lineStyle: {\n                    stroke:({\n                        light: '#87cac6',\n                        dark: '#6b3dba',\n                    })[type],\n                    strokeWidth: 1,\n                    strokeDasharray:'2 6',\n                },\n                textStyle: {\n                    fontFamily,\n                    fontSize,\n                    fill: ({\n                        light: '#87cac6',\n                        dark: '#6b3dba',\n                    })[type],\n                },\n                ...markerSettings,\n            },\n\n        },\n    },\n})\n\nexport default theme\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n    p: theme.copy.body,\n    h1: theme.copy.h1,\n    h2: theme.copy.h2,\n    h3: theme.copy.h3,\n    h4: theme.copy.h4,\n    list: theme.copy.list,\n    listItem: theme.copy.listItem,\n})\n\nconst P = withStyles(styles)(({\n    className = '',\n    classes,\n    children,\n} = {}) => <p className={`${classes.p} ${className}`}>\n    {children}\n</p>)\n\nconst UL = withStyles(styles)(({\n    classes,\n    children,\n} = {}) => <ul className={classes.list}>\n    {children}\n</ul>)\n\nconst OL = withStyles(styles)(({\n    classes,\n    children,\n} = {}) => <ol className={classes.list}>\n    {children}\n</ol>)\n\nconst LI = withStyles(styles)(({\n    classes,\n    children,\n} = {}) => <li className={classes.listItem}>\n    {children}\n</li>)\n\nconst H = withStyles(styles)(({\n    level = 1,\n    styleAs,\n    className = '',\n    classes,\n    ...props\n} = {}) => {\n    const hClassName = `h${styleAs || level}`\n    const Tag = `h${level}`\n\n    return (\n        <Tag\n            className={`${classes[hClassName]} ${className}`}\n            {...props}\n\n        />\n    )\n})\n\n\nexport {\n    P,\n    UL,\n    OL,\n    LI,\n    H,\n}\n\n","import React, { useState } from 'react'\nimport Collapse from '@material-ui/core/Collapse'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { H, P } from './StyledTags'\n\nconst ChartDescription = ({\n    title,\n    intro,\n    children,\n    expandText = 'info',\n    className = '',\n    classes,\n} = {}) => {\n    const [toggle, setCount] = useState(false)\n\n    return (\n        <div className={`${classes.root} ${className} ${!intro ? '' : classes.rootRows}`}>\n            {\n               title && typeof title === 'string'\n                    ? <H level={2} >{title}</H>\n                    : title\n            }\n            <P>\n                {intro} {\n                    children && <a\n                        className={intro ? classes.link : classes.linkMargin}\n                        href=\"#desc\"\n                        onClick={(e) => {\n                            e.preventDefault()\n                            setCount(!toggle)\n                        }}>\n                        {\n                            toggle\n                                ? 'hide'\n                                : expandText\n                        }\n                    </a>\n                }\n            </P>\n            <Collapse className={`wrapper ${classes.wrapperFlex}`} in={toggle}>\n                {children}\n            </Collapse>\n        </div>\n    )\n}\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        flexGrow: 1,\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'baseline',\n    },\n    rootRows: {\n        '& > *': {\n            flexBasis: '100%'\n        }\n    },\n    link: {\n        color: theme.palette.link,\n    },\n    linkMargin: {\n        color: theme.palette.link,\n        marginLeft: '0.5rem',\n    },\n    wrapperFlex: {\n        flexBasis: '100%'\n    }\n})\n\nexport default withStyles(styles)(ChartDescription)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\n\nconst styles = theme => ({\n    root: {\n        padding: `${theme.mySpacing.y.large} ${theme.mySpacing.y.large} 0 ${theme.mySpacing.y.large}`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'top left',\n        backgroundSize: '100% 20px',\n        backgroundImage: `linear-gradient(${theme.palette.shadow}, rgba(0,0,0,0))`,\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    },\n    'bg-none': {\n        background: 'none'\n    },\n    'justify': {\n        justifyContent: 'space-between',\n    },\n})\n\nconst PaperWapper = ({ classes = {}, className = '', children } = {}) => (\n    <div\n        className={classNames(classes.root, classes[className] || className)}\n    >\n        {children}\n    </div>\n)\n\nexport default withStyles(styles)(PaperWapper)","import React from 'react'\nimport {\n    Button as CoreButton,\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst Button = ({\n    className,\n    classes,\n    onClick,\n    key,\n    value,\n    text,\n    type = 'submit',\n    color = 'inherit',\n} = {}) => (\n    <CoreButton\n        className={[classes.root, (className || '')].join(' ')}\n        variant=\"contained\"\n        size=\"small\"\n        type={type}\n        color={color}\n        value={value}\n        key={key}\n        onClick={onClick}\n    >\n        {text || value}\n    </CoreButton>\n)\n\nconst styles = theme => ({\n    root: {\n        marginRight: theme.mySpacing.x.small,\n        marginBottom: theme.mySpacing.y.small,\n    },\n})\nexport default withStyles(styles)(Button)","const styles = theme => ({\n    inputGrid: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        marginBottom: '1rem',\n        columnGap: '8px',\n        rowGap: '8px', // BUG: theme.spacing.unit does not have px for row but does for column, odd\n        '@media (max-width: 768px)': {\n            gridTemplateColumns: 'repeat(1, 1fr)',\n        },\n        '& button': {\n            minHeight: '3rem',\n        },\n        '& .tokenText' : {\n            gridColumn:'1 / -1'\n        }\n    },\n    typeOptions: {\n        display: 'flex',\n        '& button': {\n            flexGrow: 1,\n            ...theme.copy.h4,\n            textTransform: 'none',\n        },\n    },\n    link: {\n        color: theme.palette.link,\n    },\n    fullRow: {\n        gridColumn:'1 / -1',\n    },\n    formDescription: {\n        marginBottom: '0',\n    },\n    dataPaper: {\n        display: 'block',\n    },\n    child: {\n        margin: 0,\n        width: '100%'\n    },\n    copy: {\n        display: 'inline',\n    },\n    preFetched: {\n        marginBottom: '1rem',\n    },\n})\n\nexport default styles\n","import { splitEvery } from 'ramda'\n\n// Runs each batch synchronously and the items in a batch asynchronously\nconst runBatchQueue = (batches, job, resolved = []) => new Promise((resolve, reject) => {\n    const [currentBatch, ...remainingBatches] = batches\n\n    Promise.all(currentBatch.map((j) => job(j)))\n        .then((results) => (\n            remainingBatches && remainingBatches.length\n                ? runBatchQueue(remainingBatches, job, results)\n                    .then((more) => resolve(resolved.concat(more)))\n                    .catch(reject)\n                : resolve(resolved.concat(results))\n        ))\n        .catch(reject)\n})\n\n// Takes an array of arguments for the job and runs them in batches\nconst batch = (argsList = [], job, batchSize = 2) => {\n    const batches = splitEvery(batchSize, argsList)\n\n    return argsList.length\n        ? runBatchQueue(batches, job)\n        : []\n}\n\nexport default batch\n","import { pathOr } from 'ramda'\nimport { isAfter, isBefore } from 'date-fns'\n\nconst filterByUntilDate = (datePath = [], order = 'DESC', untilDate = '') => (item) => {\n    const itemsDateValue = pathOr('', datePath, item)\n    const itemsDate = itemsDateValue && new Date(itemsDateValue)\n    const until = new Date(untilDate)\n    const shouldFilterIn = order === 'DESC'\n        ? isAfter(itemsDate, until)\n        : isBefore(itemsDate, until)\n\n    return shouldFilterIn\n}\n\nexport default filterByUntilDate\n","import { pathOr } from 'ramda'\nimport { format, isDate } from 'date-fns'\nimport {\n  always,\n  T as alwaysTrue,\n  F as alwaysFalse,\n  cond,\n} from 'ramda'\nimport filterByUntilDate from '../format/filterByUntilDate'\n\nconst cursorQ = (cursor, key = 'after') => cursor\n    ? ` ${key}:\"${cursor}\" `\n    : ''\n\nconst getCursor = order => ({oldest, newest}) => {\n    const cursor = order === 'DESC' ? oldest : newest\n    return cursorQ(cursor)\n}\n\nconst pageInfo = 'pageInfo { endCursor hasNextPage hasPreviousPage startCursor }'\n\nconst comments = (cursor) => `\n    comments(first: ${cursor ? 100: 10} ${cursorQ(cursor)}) {\n      edges {\n        node {\n          author {\n            login\n          }\n          body\n        }\n      }\n      ${pageInfo}\n    }\n`\n\nconst pullRequests = order => pagination => `\npullRequests(\n  first: 100\n  ${getCursor(order)(pagination)}\n  states: [MERGED]\n  orderBy: {field: CREATED_AT direction: ${order}}\n) {\n  totalCount\n  edges {\n    node {\n      id\n      url\n      author {\n        login\n      }\n      repository {\n        name\n        owner {\n          login\n        }\n      }\n      additions\n      deletions\n      mergedAt\n      createdAt\n      ${reviews()}\n      ${comments()}\n    }\n  }\n  ${pageInfo}\n}`\n\nconst issues = order => pagination => `\nissues(\n  ${getCursor(order)(pagination)}\n  first: 100\n  orderBy: { field:CREATED_AT direction: ${order} }\n) {\n  totalCount\n  edges {\n    node {\n      title\n      url\n      createdAt\n      closedAt\n      state\n      labels(first:5) {\n        edges {\n          node {\n            name\n          }\n        }\n      }\n    }\n  }\n  ${pageInfo}\n}`\n\nconst releases = order => pagination => `\nreleases(\n  ${getCursor(order)(pagination)}\n  first:100\n  orderBy:{ field:CREATED_AT direction: ${order} }\n) {\n  totalCount\n  edges {\n    node {\n      id\n      name\n      createdAt\n      tag {\n        name\n      }\n    }\n  }\n  ${pageInfo}\n}`\n\nconst reviews = (cursor) => `\n    reviews(first: ${cursor ? 100 : 10} ${cursorQ(cursor)}) {\n      edges {\n        node {\n          id\n          state\n          author {\n            login\n          }\n          ${comments()}\n        }\n      }\n      ${pageInfo}\n    }\n`\n\nconst getDateRange = (type, order, fromDate, toDate) => {\n    const rangetype = /asc/i.test(order)\n        ? '=<'\n        : '=>'\n    const range = fromDate\n        ? ''\n        : rangetype\n\n    const to = toDate && format(new Date(toDate), 'yyyy-MM-dd')\n    const from = fromDate\n        ? `${format(new Date(fromDate), 'yyyy-MM-dd')}..`\n        : ''\n\n    return toDate\n        ? `${type}:${range}${from}${to}`\n        : ''\n}\n\nconst searchIssues = ({\n    org,\n    repo,\n    order,\n    fromDate,\n    toDate\n}) => (pagination)=> `\n  issues: search(\n    query: \"is:issue ${getDateRange('created', order, fromDate, toDate)} repo:${org}/${repo} sort:created-${/asc/i.test(order) ? 'asc' : 'desc'}\"\n    type: ISSUE\n    first: 100\n    ${getCursor(order)(pagination)}\n  ) {\n    issueCount\n    ${pageInfo}\n    edges {\n      node {\n        ... on Issue {\n          title\n          createdAt\n          closedAt\n          state\n          labels(first:10) {\n            edges {\n              node {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst searchPullRequests = ({\n    org,\n    repo,\n    order,\n    fromDate,\n    toDate\n}) => (pagination)=> `\n  pullRequests: search(\n    query: \"is:merged is:pr ${getDateRange('merged', order, fromDate, toDate)} repo:${org}/${repo} sort:created-${/asc/i.test(order) ? 'asc' : 'desc'}\"\n    type: ISSUE\n    first: 100\n    ${getCursor(order)(pagination)}\n  ) {\n    issueCount\n    ${pageInfo}\n    edges {\n      node {\n        ... on PullRequest {\n          id\n          url\n          author {\n            login\n          }\n          repository {\n            name\n            owner {\n              login\n            }\n          }\n          additions\n          deletions\n          mergedAt\n          createdAt\n          ${reviews()}\n          ${comments()}\n        }\n      }\n    }\n  }\n`\n\nconst getPaginationByType = (oldFetchInfo = {}, untilDate ='', data = {}, order) => type => {\n    const {\n        hasNextPage = false,\n        startCursor,\n        endCursor,\n    } = pathOr({}, ['data', 'result', type, 'pageInfo'], data)\n\n    const items = pathOr([], ['data', 'result', type, 'edges'], data)\n\n    const dateKey = type === pullRequests\n      ? 'mergedAt'\n      : 'createdAt'\n\n    const filteredItems = isDate(untilDate)\n      ? items.filter(filterByUntilDate(['node', dateKey], order, untilDate))\n      : []\n\n    const typeStateMap = {\n        pullRequests: 'prPagination',\n        issues: 'issuesPagination',\n        releases: 'releasesPagination',\n    }\n\n    const oldestDefault = order === 'DESC' ? endCursor : startCursor\n    const oldestCurrent = pathOr(oldestDefault, [typeStateMap[type], 'oldest'], oldFetchInfo)\n\n    const newestDefault = order === 'ASC' ? endCursor : startCursor\n    const newestCurrent = pathOr(newestDefault, [typeStateMap[type], 'newest'], oldFetchInfo)\n\n    // TODO: Dont clear if undefined cursor\n    // TODO: add hasPrevPage\n    const dateFilteredLength = filteredItems.length\n    const tryNextpage = cond([\n      [always(hasNextPage === false), alwaysFalse],\n      [always(!isDate(untilDate)), always(hasNextPage)],\n      [always(dateFilteredLength === 0), alwaysFalse],\n      [always(dateFilteredLength > 0 && items.length > dateFilteredLength), alwaysFalse],\n      [alwaysTrue, always(hasNextPage)],\n    ])()\n\n    return {\n        newest: order === 'ASC' &&  endCursor ? endCursor : newestCurrent,\n        oldest: order === 'DESC' && endCursor ? endCursor : oldestCurrent,\n        hasNextPage,\n        hasNextPageForDate: tryNextpage,\n    }\n}\n\nconst getRemainingPageCount = (data) => {\n  const [ maxItems ] = ['issues', 'pullRequests', 'releases']\n    .map(type => pathOr(0, ['data', 'result', type, 'totalCount'], data))\n    .sort((a,b) => a > b)\n\n    return Math.ceil(maxItems/100) -1\n}\n\nconst userQuery = (untilDate) => ({\n  user,\n  order = 'DESC',\n  amountOfData,\n  issuesPagination = {},\n  prPagination = {},\n}) => ({\n  query: `{\n    result: user(login: \"${user}\") {\n      login\n      ${prPagination.hasNextPage ? pullRequests(order)(prPagination) : ''}\n      ${issuesPagination.hasNextPage ? issues(order)(issuesPagination) : ''}\n    }\n  }`,\n  order,\n  user,\n  resultInfo: (data) => {\n      const byType = getPaginationByType(\n          {\n              issuesPagination,\n              prPagination,\n              amountOfData,\n          },\n          untilDate,\n          data,\n          order\n      )\n\n      const updatedAmountOfData = cond([\n        [always(isDate(untilDate)), always(amountOfData)],\n        [always(Number.isInteger(amountOfData)), always(amountOfData - 1)],\n        [alwaysTrue, getRemainingPageCount]\n      ])(data)\n\n      const nextPageInfo = {\n        prPagination: {\n          hasNextPage: false,\n          ...byType('pullRequests'),\n        },\n        issuesPagination: {\n          hasNextPage: false,\n          ...byType('issues'),\n        },\n      }\n\n      const hasNextPageKey = isDate(untilDate) ? 'hasNextPageForDate' : 'hasNextPage'\n      return  {\n          hasNextPage: Object.values(nextPageInfo).some(x => x[hasNextPageKey] === true),\n          nextPageInfo: {\n            ...nextPageInfo,\n            amountOfData: updatedAmountOfData,\n          },\n      }\n  },\n  fillerType: 'batchedQuery',\n  hasMoreResults: [\n      prPagination.hasNextPage,\n      issuesPagination.hasNextPage,\n  ]\n      .some(x => x !== false),\n})\n\nconst batchedQuery = (untilDate) => ({\n    org,\n    repo,\n    order = 'DESC',\n    amountOfData,\n    issuesPagination = {},\n    releasesPagination = {},\n    prPagination = {},\n}) => ({\n    query: `{\n      result: repository(name: \"${repo}\" owner: \"${org}\") {\n        id\n        description\n        name\n        owner {\n          org: login\n        }\n        ${prPagination.hasNextPage ? pullRequests(order)(prPagination) : ''}\n        ${issuesPagination.hasNextPage ? issues(order)(issuesPagination) : ''}\n        ${releasesPagination.hasNextPage ? releases(order)(releasesPagination) : ''}\n      }\n    }`,\n    order,\n    resultInfo: (data) => {\n        const byType = getPaginationByType(\n            {\n                issuesPagination,\n                releasesPagination,\n                prPagination,\n            },\n            untilDate,\n            data,\n            order\n        )\n\n        const updatedAmountOfData = cond([\n          [always(isDate(untilDate)), always(amountOfData)],\n          [always(Number.isInteger(amountOfData)), always(amountOfData - 1)],\n          [alwaysTrue, getRemainingPageCount]\n        ])(data)\n\n        const nextPageInfo = {\n          prPagination: {\n            hasNextPage: false,\n            ...byType('pullRequests'),\n          },\n          issuesPagination: {\n            hasNextPage: false,\n            ...byType('issues'),\n          },\n          releasesPagination: {\n            hasNextPage: false,\n            ...byType('releases'),\n          },\n        }\n\n        const hasNextPageKey = isDate(untilDate) ? 'hasNextPageForDate' : 'hasNextPage'\n        return {\n            hasNextPage: Object.values(nextPageInfo).some(x => x[hasNextPageKey] === true),\n            nextPageInfo: {\n              ...nextPageInfo,\n              amountOfData: updatedAmountOfData,\n            },\n        }\n    },\n    fillerType: 'batchedQuery',\n    hasMoreResults: [\n        prPagination.hasNextPage,\n        issuesPagination.hasNextPage,\n        releasesPagination.hasNextPage,\n    ]\n        .some(x => x !== false),\n})\n\nconst commentsQuery = ({ nodeId, cursor }) => ({\n    query: `{\n      node(id:\"${nodeId}\") {\n          ... on PullRequest {\n            id\n            ${comments(cursor)}\n          }\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'node', 'comments', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'node', 'comments', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            nodeId: pathOr('', ['data', 'node', 'id'], data),\n            cursor: pathOr('', ['data', 'node', 'comments', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n})\n\nconst reviewsQuery = ({ nodeId, cursor }) => ({\n    query: `{\n      node(id:\"${nodeId}\") {\n          ... on PullRequest {\n            id\n            ${reviews(cursor)}\n          }\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'node', 'reviews', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'node', 'reviews', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            nodeId: pathOr('', ['data', 'node', 'id'], data),\n            cursor: pathOr('', ['data', 'node', 'reviews', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n    fillerType: 'pullRequestReviewComments',\n})\n\nconst reviewCommentsQuery = ({ nodeId, cursor }) => ({\n    query: `{\n      node(id:\"${nodeId}\") {\n          ... on PullRequestReview {\n            id\n            ${comments(cursor)}\n          }\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'node', 'comments', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'node', 'comments', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            nodeId: pathOr('', ['data', 'node', 'id'], data),\n            cursor: pathOr('', ['data', 'node', 'comments', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n})\n\nexport {\n    userQuery,\n    batchedQuery,\n    reviewCommentsQuery,\n    commentsQuery,\n    reviewsQuery,\n    searchIssues,\n    searchPullRequests,\n}","import { pathOr, propOr } from 'ramda'\nimport batch from './batch'\n\nimport {\n    commentsQuery,\n    reviewsQuery,\n    reviewCommentsQuery,\n} from './queries'\n\n// TODO: make this file more understandable\n// TODO: retry errored fill\nconst fillData = apiCall => {\n    const fillByType = (type) => {\n\n        const fillersByType = {\n            'pullRequests': [\n                pullRequestsComments,\n                pullRequestsReviews,\n            ],\n            'pullRequestReviewComments': [\n                allPullRequestReviewsComments,\n            ],\n            'batchedQuery': [\n                pullRequestsComments,\n                pullRequestsReviews,\n            ],\n        }\n\n        const fillers = fillersByType[type] || []\n\n        return (data) => fillers.length\n            ? Promise.all(\n                fillers\n                    .map((filler) => filler(data))\n            )\n                .then((resolvedFillers) => resolvedFillers\n                    .reduce((currentItem, applyFillerResult) => applyFillerResult(currentItem), data)\n                )\n            : data\n    }\n\n    const recursiveFiller = makeQuery => (queryInfo = {}) => async (currentResults = []) => {\n        const {\n            hasNextPage: currentHasNextPage,\n        } = queryInfo\n\n        const {\n            query,\n            resultInfo,\n            fillerType,\n        } = makeQuery(queryInfo)\n\n        const newResult = currentHasNextPage\n            ? await apiCall(query)\n            : {}\n\n        const {\n            results = [],\n            hasNextPage: newHasNextPage,\n            nextArgs,\n        } = resultInfo(newResult)\n\n        const updatedData = [\n            ...currentResults,\n            ...results,\n        ]\n\n        return newHasNextPage\n            ? recursiveFiller(makeQuery)(nextArgs)(updatedData)\n            : await fillByType(fillerType)(updatedData)\n    }\n\n    const updateRawData = (rawData = {}) => key => newData => {\n        const updatedNode = Object.assign(rawData.node, { [key]: newData })\n\n        return Object.assign(rawData, { node: updatedNode })\n    }\n\n    const getQueryInfo = key => data => ({\n        nodeId: pathOr('', ['node', 'id'], data),\n        cursor: pathOr('', ['node', key, 'pageInfo', 'endCursor'], data),\n        hasNextPage: pathOr(false, ['node', key, 'pageInfo', 'hasNextPage'], data),\n    })\n\n    const allPullRequestReviewsComments = async(data = []) => {\n        const getAllReviewComments = async(review) => {\n            const currentReviewComments = pathOr([], ['node', 'comments', 'edges'], review)\n            const reviewCommentsQueryInfo = getQueryInfo('comments')(review)\n\n            const allReviewComments = await recursiveFiller(reviewCommentsQuery)(reviewCommentsQueryInfo)(currentReviewComments)\n\n            return updateRawData(review)('comments')({ edges: allReviewComments })\n        }\n        const updatedReviewComments = await batch(data, getAllReviewComments, 10)\n\n        return () => updatedReviewComments\n    }\n\n    const pullRequestsReviews = async(data) => {\n        const pullRequests = pathOr([], ['data', 'result', 'pullRequests', 'edges'], data)\n\n        const getAllPullRequestReviews = async (pullRequest) => {\n            const currentReviews = pathOr([], ['node','reviews','edges'], pullRequest)\n            const reviewsQueryInfo = getQueryInfo('reviews')(pullRequest)\n\n            const allReviews = await recursiveFiller(reviewsQuery)(reviewsQueryInfo)(currentReviews)\n\n            return {\n                nodeId: pathOr('', ['node', 'id'], pullRequest),\n                results: { edges: allReviews },\n            }\n        }\n        const allPullRequestsReviews = await batch(pullRequests, getAllPullRequestReviews, 10)\n\n        return (data) => {\n            const updatedpullRequestsData = updatePullRequests(data)('reviews')(allPullRequestsReviews)\n\n            return {\n                data: Object.assign(propOr({}, 'data', data),\n                    {\n                        result: Object.assign(pathOr(\n                            {\n                                pullRequests: updatedpullRequestsData,\n                            },\n                            ['data', 'result'],\n                            data,\n                        )),\n                    }\n                ),\n            }\n        }\n    }\n\n    const updatePullRequests = data =>  key => pullRequestsItems => {\n        const pullRequestsData = pathOr({}, ['data', 'result', 'pullRequests'], data)\n        const currentPullRequests = pathOr([], ['data', 'result', 'pullRequests', 'edges'], data)\n\n        const mergedPullRequests = currentPullRequests\n            .map((currentPullRequest) => {\n                const nodeId = pathOr('', ['node', 'id'], currentPullRequest)\n                const item = pullRequestsItems\n                    .find(x => x.nodeId === nodeId)\n\n                return item\n                    ? updateRawData(currentPullRequest)(key)(item.results)\n                    : currentPullRequest\n\n            })\n\n        return Object.assign(pullRequestsData, { edges: mergedPullRequests })\n    }\n\n    const pullRequestsComments = async(data) => {\n        const pullRequests = pathOr([], ['data', 'result', 'pullRequests', 'edges'], data)\n\n        const getAllPullRequestComments = async (pullRequest) => {\n            const currentComments = pathOr([], ['node', 'comments', 'edges'], pullRequest)\n            const commentsQueryInfo = getQueryInfo('comments')(pullRequest)\n\n            const allComments = await recursiveFiller(commentsQuery)(commentsQueryInfo)(currentComments)\n\n            return {\n                nodeId: pathOr('', ['node','id'], pullRequest),\n                results: { edges: allComments },\n            }\n        }\n\n        const allPullRequestsComments = await batch(pullRequests, getAllPullRequestComments, 10)\n\n        return (data) => {\n            const updatedpullRequestsData = updatePullRequests(data)('comments')(allPullRequestsComments)\n\n            return {\n                data: Object.assign(propOr({}, 'data', data),\n                    {\n                        result: Object.assign(pathOr(\n                            {\n                                pullRequests: updatedpullRequestsData,\n                            },\n                            ['data', 'result'],\n                            data\n                        )),\n                    }\n                ),\n            }\n        }\n    }\n\n    return fillByType\n}\n\nexport default fillData\n","const types = {\n    SET_USER: 'SET_USER',\n    CLEAR_USER: 'CLEAR_USER',\n    SET_TEAM_NAME: 'SET_TEAM_NAME',\n    CLEAR_TEAM_NAME: 'CLEAR_TEAM_NAME',\n    STORE_ORG: 'STORE_ORG',\n    CLEAR_ORG: 'CLEAR_ORG',\n    STORE_TOKEN: 'STORE_TOKEN',\n    STORE_FORM_UNTIL_DATE: 'STORE_FORM_UNTIL_DATE',\n    STORE_UNTIL_DATE: 'STORE_UNTIL_DATE',\n    SET_PR_PAGINATION: 'SET_PR_PAGINATION',\n    CLEAR_PR_PAGINATION: 'CLEAR_PR_PAGINATION',\n    SET_RELEASES_PAGINATION: 'SET_RELEASES_PAGINATION',\n    CLEAR_RELEASES_PAGINATION: 'CLEAR_RELEASES_PAGINATION',\n    SET_ISSUES_PAGINATION: 'SET_ISSUES_PAGINATION',\n    CLEAR_ISSUES_PAGINATION: 'CLEAR_ISSUES_PAGINATION',\n    FETCH_STATUS: 'FETCH_STATUS',\n    FETCH_START: 'FETCH_START',\n    FETCH_ERROR: 'FETCH_ERROR',\n    CLEAR_FETCH_ERROR: 'CLEAR_FETCH_ERROR',\n    FETCH_END: 'FETCH_END',\n    STORE_REPOS: 'STORE_REPOS',\n    STORE_REPO: 'STORE_REPO',\n    CLEAR_REPO: 'CLEAR_REPO',\n    STORE_AMOUNT: 'STORE_AMOUNT',\n    STORE_SORT: 'STORE_SORT',\n    STORE_ENT_URL: 'STORE_ENT_URL',\n    STORE_EX_IDS: 'STORE_EX_IDS',\n    STORE_USER_IDS: 'STORE_USER_IDS',\n    ADD_PRS: 'ADD_PRS',\n    ADD_FILTERED_PRS: 'ADD_FILTERED_PRS',\n    CLEAR_PRS: 'CLEAR_PRS',\n    CLEAR_FILTERED_PRS: 'CLEAR_FILTERED_PRS',\n    ADD_ISSUES: 'ADD_ISSUES',\n    ADD_FILTERED_ISSUES: 'ADD_FILTERED_ISSUES',\n    CLEAR_FILTERED_ISSUES: 'CLEAR_FILTERED_ISSUES',\n    CLEAR_ISSUES: 'CLEAR_ISSUES',\n    ADD_RELEASES: 'ADD_RELEASES',\n    CLEAR_RELEASES: 'CLEAR_RELEASES',\n    TOGGLE_THEME: 'TOGGLE_THEME',\n    PREFETCHED_NAME: 'PREFETCHED_NAME',\n    ADD_USERS_DATA: 'ADD_USERS_DATA',\n    CLEAR_USERS_DATA: 'CLEAR_USERS_DATA',\n}\n\nexport default types","// TODO: Think more about if this should maintain github api data structures\n// TODO: add tests\nimport {\n    always,\n    cond,\n    propOr,\n    pathOr,\n    propEq,\n    mergeDeepRight,\n    T as alwaysTrue,\n    F as alwaysFalse,\n} from 'ramda'\nimport { compose } from 'redux'\n\nimport fillData from './fillers'\nimport types from '../state/types'\n\nconst parseJSON = response => new Promise((resolve, reject) => {\n    response.json()\n        .then(data => response.status === 200\n            ? resolve(data)\n            : reject(Object.assign(data, { status: response.status }))\n        )\n        .catch(error => {\n            console.log('-=-=--parseJSON error', error)\n            error.status = response.status\n            reject(error)\n        })\n})\n\nconst triggeredAbuseRate = ({ message = '' }) =>/(You have triggered an abuse detection mechanism|You have exceeded a secondary rate limit)/.test(message)\nconst triggeredJsonError = ({ message = '' }) =>/Unexpected end of JSON input/.test(message)\n\nconst apiCall = fetchInfo => query =>\n    fetch((fetchInfo.enterpriseAPI || 'https://api.github.com/graphql'), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${fetchInfo.token}`,\n        },\n        body: JSON.stringify({ query }),\n    })\n        .then(parseJSON)\n\nconst shouldGetNextPage = (hasNextPage, { amountOfData }) => cond([\n    [always(hasNextPage === false), alwaysFalse],\n    [always(hasNextPage && Number.isInteger(amountOfData) && amountOfData >= 1), alwaysTrue],\n    [always(hasNextPage && amountOfData === 'all'), alwaysTrue],\n    [alwaysTrue, alwaysFalse],\n])();\n\nconst pause = (ms = 30000) => new Promise(resolve => setTimeout(() => resolve(), ms))\nlet numRateTriggers = 0\n\nconst pauseThenRetry = async(apiInfo, results) => {\n    console.log('-=-=--paused', Date.now());\n    await pause();\n    console.log('-=-=--resume', Date.now());\n    ++numRateTriggers\n    return numRateTriggers <= 10\n        ? api(apiInfo, results)\n        : {\n            errorMessage: {\n                level: 'error',\n                message: 'Hit rate limit over ten times'\n            },\n            fetchInfo: apiInfo.fetchInfo,\n            results: results,\n        }\n}\n\nconst getCurrentItemsByType = (type = '', results = []) => {\n    const total = results\n        .reduce((acc, result) => {\n            const itemCount = pathOr([], ['data', 'result', type, 'edges'], result)\n                .length\n            return acc + itemCount\n        }, 0)\n\n    return total\n}\n\nconst getLatestPrDate = (results = []) => {\n    const allPrs = results.reduce((acc, result) => {\n        const prs = pathOr([], ['data', 'result', 'pullRequests', 'edges'], result)\n        return [\n            ...acc,\n            ...prs,\n        ]\n    }, []);\n\n    const targetPr = allPrs.at(-1)\n\n    return pathOr('', ['node', 'mergedAt'], targetPr)\n}\n\nconst api = async({ fetchInfo, queryInfo, dispatch }, results = []) => {\n    const {\n        query,\n        resultInfo,\n        fillerType,\n        user,\n    } = queryInfo(fetchInfo)\n\n    dispatch({\n        type: types.FETCH_STATUS,\n        payload: {\n            user,\n            prCount: getCurrentItemsByType('pullRequests', results),\n            latestPrDate: getLatestPrDate(results),\n            issueCount: getCurrentItemsByType('issues', results),\n            releaseCount: getCurrentItemsByType('releases', results),\n        }\n    })\n\n    const apiCallWithToken = apiCall(fetchInfo)\n    try {\n        const result = await apiCallWithToken(query)\n        if (triggeredAbuseRate(result)) {\n            throw new Error('Abuse rate triggered');\n        }\n\n        const fullData = await fillData(apiCallWithToken)(fillerType)(result)\n        const updatedResults = [\n            ...results,\n            fullData\n        ]\n\n        const {\n            hasNextPage,\n            nextPageInfo,\n        } = resultInfo(result)\n\n        const updatedFetchInfo = mergeDeepRight(fetchInfo, nextPageInfo)\n\n        return shouldGetNextPage(hasNextPage, updatedFetchInfo)\n            ? api({ fetchInfo: updatedFetchInfo, queryInfo, dispatch }, updatedResults)\n            : {\n                fetchInfo: updatedFetchInfo,\n                results: updatedResults,\n            }\n    } catch (error) {\n        console.log('-=-=--api error', error)\n        const hasTriggeredAbuse = cond([\n            [triggeredAbuseRate, alwaysTrue],\n            [triggeredJsonError, alwaysTrue],\n            [propEq('status', 500), alwaysTrue],\n            [propEq('status', 502), alwaysTrue],\n            [propEq('message', 'Abuse rate triggered'), alwaysTrue],\n            [compose(/ENOTFOUND|ECONNRESET/.test, propOr('', 'code')), alwaysTrue],\n            [compose(/fetch/i.test, propOr('', 'message')), alwaysTrue],\n            [alwaysTrue, alwaysFalse],\n        ])\n        const getErrorMessage = cond([\n            [\n                hasTriggeredAbuse,\n                always({\n                    level: 'warn',\n                    message: 'You may have triggered the api\\'s abuse detection, please wait a minute before trying again',\n                })\n            ],\n            [\n                compose(/50\\d/i.test, propOr('', 'status')),\n                always({\n                    level: 'error',\n                    message: 'GitHub API 500 error, could be CORS or rate limiting',\n                }),\n            ],\n            [\n                propEq('status', 401),\n                always({\n                    level: 'error',\n                    message: 'GitHub token does not have correct settings, please see README',\n                }),\n            ],\n            [\n                compose(/40\\d/i.test, propOr('', 'status')),\n                always({\n                    level: 'error',\n                    message: `Auth error: ${error.message || 'UNKOWN'}`,\n                })\n            ],\n            [\n                propEq('status', undefined),\n                always({\n                    level: 'error',\n                    message: 'Error while processing data after, please check the console',\n                })\n            ],\n            [\n                alwaysTrue,\n                always({\n                    level: 'error',\n                    message: `ERROR: ${error.message || 'UNKOWN'}`,\n                })\n            ]\n        ]);\n\n        const errorMessage = getErrorMessage(error)\n        console.log('-=-=--errorMessage', errorMessage)\n\n        return hasTriggeredAbuse(error)\n            ? pauseThenRetry({ fetchInfo, queryInfo, dispatch }, results)\n            : {\n                ...errorMessage,\n                fetchInfo: fetchInfo,\n                results: results,\n            }\n    }\n}\n\nexport default api","import { userQuery } from './queries'\nimport { prop } from 'ramda'\nimport api from './api'\nimport batch from './batch'\n\nconst getUsersData = async({ fetchInfo, untilDate, dispatch }) => {\n    try {\n        const userIds = fetchInfo.userIds\n        const data = userIds\n            .map((user) => ({\n                fetchInfo: {\n                    ...fetchInfo,\n                    issuesPagination: fetchInfo.issuesPagination[user] || { hasNextPage: true },\n                    prPagination: fetchInfo.prPagination[user] || { hasNextPage: true },\n                    user,\n                },\n                queryInfo: userQuery(untilDate),\n                dispatch,\n            }))\n\n        const allUsersData = await batch(data, api, 1)\n\n        const finalFetchInfo = {\n            ...fetchInfo,\n        }\n        const allResults = []\n        allUsersData\n            .forEach(({ fetchInfo, results }) => {\n                allResults.push(results)\n\n                const user = prop('user', fetchInfo)\n                finalFetchInfo.issuesPagination[user] = prop('issuesPagination', fetchInfo)\n                finalFetchInfo.prPagination[user] = prop('prPagination', fetchInfo)\n            })\n\n        const usersData = {\n            fetchInfo: finalFetchInfo,\n            results: allResults.flat(),\n        }\n\n        return usersData\n    } catch (error) {\n        console.log('-=-=--getUsersData:error', error)\n        throw error\n    }\n}\n\nexport default getUsersData\n","import {\n    add,\n    sub,\n } from 'date-fns'\n\nimport {\n    allPass,\n    always,\n    compose,\n    prop,\n    propEq,\n    propOr,\n    is,\n    isEmpty,\n    cond,\n    T as alwaysTrue,\n} from 'ramda'\n\nconst getLatestPrDate = (order, allPrs = []) => {\n    const { node: { mergedAt: currentEndDate } } = allPrs.at(-1)\n\n    return new Date(currentEndDate)\n}\n\nconst getUntilDate = (fetches = {}, allPrs = []) => {\n    const {\n        untilDate = '',\n        amountOfData = 0,\n    } = fetches\n    // get first item from each result, sort then use that as base date to calculate from\n    const changeBy = { months: amountOfData }\n\n    const amountOfDataIsString = compose(\n        is(String),\n        prop('amountOfData')\n    )\n\n    const isDesc = propEq('sortDirection', 'DESC')\n    const isAsc = propEq('sortDirection', 'ASC')\n\n    const noDateUntil = compose(\n        isEmpty,\n        prop('untilDate')\n    )\n\n    const subtractDate = compose(\n        x => sub(x, changeBy),\n        x => x ? new Date(x) : new Date(),\n        prop('untilDate'),\n    )\n\n    const dateFromPRs = compose(\n        lastDate => add(lastDate, changeBy),\n        sortDirection => getLatestPrDate(sortDirection, allPrs),\n        propOr('', 'sortDirection'),\n    )\n\n    const newUntilDate = cond([\n        [amountOfDataIsString, always('')],\n        [isDesc, subtractDate],\n        [allPass([isAsc, noDateUntil]), dateFromPRs],\n        [isAsc, add(new Date(untilDate), changeBy)],\n        [alwaysTrue, always('')],\n    ])(fetches)\n\n    return newUntilDate\n}\n\nexport default getUntilDate\n","const slimValue = (value) => {\n    const newValue = (typeof value === 'string' && value.length && value) // picks defined string\n        || (/^-?[\\d.]+$/.test(`${value}`) && /^-?[^0]/.test(`${value}`) && value) // picks non 0 number\n        || (Array.isArray(value) && value.length && slimArray(value)) // picks defined array\n        || (value && Object.keys(value).length && slimObject(value)) // picks defiend object\n        || (typeof value === 'boolean' && value) // allows boolean, false will be ignored\n\n    return newValue\n}\n\nconst slimArray = arr => {\n    const newArray = arr\n        .reduce((acc, item) => [\n            ...acc,\n            ...([slimValue(item)])\n        ], [])\n\n    return newArray.length && newArray\n}\n\nconst slimObject = obj => {\n    const newObject = Object.entries(obj)\n        .reduce((acc, [key, value]) => {\n            const newValue = slimValue(value)\n\n            return {\n                ...acc,\n                ...( newValue\n                    ? { [key]: newValue }\n                    : {}\n                )\n            }\n        }, {});\n\n    return Object.keys(newObject).length && newObject\n}\n\nexport {\n    slimValue,\n    slimArray,\n    slimObject,\n}\n","\nconst baseUserData = {\n    author: '',\n    approvalsGiven: 0,\n    approvalsByUser: {},\n    commentsGiven: 0,\n    commentsReceived: 0,\n    codeCommentsGiven: 0,\n    codeCommentsReceived: 0,\n    generalCommentsGiven: 0,\n    generalCommentsReceived: 0,\n    totalPRs: 0,\n    uniquePRsContributedTo: 0,\n    commentsByUser: {},\n}\n\nconst updateContributorCount = (currentData, objKey, obj, addition) => Object.entries(obj)\n    .reduce((acc, [key, value]) => {\n        const prevData = currentData[key] || {}\n        const updated = {\n            ...baseUserData,\n            ...prevData,\n            user: key,\n            [objKey]: (prevData[objKey] || 0) + (addition || value),\n        }\n\n        return Object.assign(acc, { [key]: updated })\n    }, {})\n\nconst formatUserData = (data = []) => {\n    const updateByUsersCount = (currentData, objKey, obj, author) => Object.entries(obj)\n        .reduce((acc, [key, value]) => {\n            const currentUserData = currentData[key] || {}\n            const currentKeyData = currentUserData[objKey] || {}\n            const updatedKeyData = {\n                ...currentKeyData,\n                [author]: (currentKeyData[author] || 0) + (value || 0),\n            }\n\n            const updated = {\n                ...baseUserData,\n                ...currentUserData,\n                author: key,\n                [objKey]: updatedKeyData,\n            }\n\n            return Object.assign(acc, { [key]: updated })\n        }, {})\n    const userData = data\n        .reduce((acc, prData) => {\n            const {\n                author,\n                prSize = 0,\n                age = 0,\n                approvals = 0,\n                approvers = {},\n                comments = 0,\n                commenters = {},\n                codeComments = 0,\n                codeCommenters = {},\n                generalComments = 0,\n                generalCommenters = {},\n            } = prData\n\n            const updatedCommentsByUser = updateByUsersCount(acc, 'commentsByUser', commenters, author)\n            Object.assign(acc, updatedCommentsByUser)\n\n            const updatedApprovalsByUser = updateByUsersCount(acc, 'approvalsByUser', approvers, author)\n            Object.assign(acc, updatedApprovalsByUser)\n\n            const updatedCommentsGiven = updateContributorCount(acc, 'commentsGiven', commenters)\n            Object.assign(acc, updatedCommentsGiven)\n\n            const updatedCodeCommentsGiven = updateContributorCount(acc, 'codeCommentsGiven', codeCommenters)\n            Object.assign(acc, updatedCodeCommentsGiven)\n\n            const updatedGeneralCommentsGiven = updateContributorCount(acc, 'generalCommentsGiven', generalCommenters)\n            Object.assign(acc, updatedGeneralCommentsGiven)\n\n            const updatedApprovalsGiven = updateContributorCount(acc, 'approvalsGiven', approvers)\n            Object.assign(acc, updatedApprovalsGiven)\n\n            const updatedUniquePRsApproved = updateContributorCount(acc, 'uniquePRsApproved', approvers, 1)\n            Object.assign(acc, updatedUniquePRsApproved)\n\n            const contrtibutors = [...new Set([\n                ...Object.keys(codeCommenters),\n                ...Object.keys(generalCommenters),\n                ...Object.keys(approvers),\n            ])]\n\n            contrtibutors\n                .forEach((key) => {\n                    const prevData = acc[key] || {}\n                    const updated = {\n                        ...baseUserData,\n                        ...prevData,\n                        author: key,\n                        uniquePRsContributedTo: (prevData.uniquePRsContributedTo || 0) + 1,\n                    }\n\n                    Object.assign(acc, { [key]: updated })\n                })\n\n\n            const prevData = acc[author] || {}\n\n            const prSizes = [...(prevData.prSizes || []), prSize]\n            const averagePrSize = Math.round(prSizes.reduce((acc, x) => acc + x, 0) / prSizes.length)\n\n            const prAges = [...(prevData.prAges || []), age]\n            const averagePrAge = Math.round(prAges.reduce((acc, x) => acc + x, 0) / prAges.length)\n\n            return Object.assign(acc, {\n                [author]: {\n                    ...baseUserData,\n                    ...prevData,\n                    author,\n                    user: author,\n                    approvalsReceived: (prevData.approvalsReceived || 0) + approvals,\n                    commentsReceived: (prevData.commentsReceived || 0) + comments,\n                    codeCommentsReceived: (prevData.codeCommentsReceived || 0) + codeComments,\n                    generalCommentsReceived: (prevData.generalCommentsReceived || 0) + generalComments,\n                    totalPRs: (prevData.totalPRs || 0) + 1,\n                    prSizes,\n                    prSize: averagePrSize,\n                    prAges,\n                    age: averagePrAge,\n                },\n            })\n\n        }, {})\n\n\n    const uniqueAuthors = [...new Set(data.map(x => x.author))]\n\n    const newUsersData = Object.values(userData)\n        .filter(({ author }) => uniqueAuthors.some(x => x === author))\n\n    const keys = [\n        'commentsGiven',\n        'commentsReceived',\n        'approvalsGiven',\n        'approvalsReceived',\n    ]\n\n    const sortedUsers = newUsersData\n        .sort((a, b) => {\n            const aTotal = keys\n                .reduce((acc, key) => acc + (a[key] || 0), 0)\n\n            const bTotal = keys\n                .reduce((acc, key) => acc + (b[key] || 0), 0)\n            return bTotal - aTotal\n        })\n\n    return sortedUsers\n}\n\nexport default formatUserData","import {\n    assoc,\n    dissocPath,\n    equals,\n    filter,\n    not,\n    map,\n    path,\n    pickAll,\n    pipe,\n    split,\n    trim,\n    propOr,\n} from 'ramda'\nimport api from '../api/api'\nimport getUsersData from '../api/getUsersData'\nimport getUntilDate from '../api/getUntilDate'\nimport {\n    formatPullRequests,\n    filterSortPullRequests,\n    formatIssues,\n    filterSortIssues,\n    formatReleases,\n} from '../format/rawData'\nimport { slimObject } from '../format/lightenData'\nimport { batchedQuery } from '../api/queries'\nimport formatUserData from '../format/userData'\nimport types from './types'\n\nconst setUser = (user = '') => ({\n    type: types.SET_USER,\n    payload: user,\n})\n\nconst toggleTheme = () => ({\n    type: types.TOGGLE_THEME,\n})\n\nconst clearUser = () => ({\n    type: types.CLEAR_USER,\n})\n\nconst storeToken = (token = '') => ({\n    type: types.STORE_TOKEN,\n    payload: token,\n})\n\nconst storeOrg = (org = '') => (dispatch, getState) => {\n    const {\n        fetches: {\n            org: currentOrg,\n        },\n    } = getState()\n\n    org && currentOrg && org !== currentOrg\n        && clearData(dispatch)\n\n    return dispatch({\n        type: types.STORE_ORG,\n        payload: org,\n    })\n}\n\nconst storeEnterpriseAPI = (enterpriseAPI = '') => (dispatch, getState) => {\n    const {\n        fetches: {\n            enterpriseAPI: currentEnterpriseAPI\n        },\n    } = getState()\n\n    enterpriseAPI && currentEnterpriseAPI && enterpriseAPI !== currentEnterpriseAPI\n        && clearData(dispatch)\n\n    return dispatch({\n        type: types.STORE_ENT_URL,\n        payload: enterpriseAPI,\n    })\n}\n\nconst storeTeamName = (teamName = '') => (dispatch, getState) => {\n    const {\n        fetches: {\n            teamName: currentTeamName\n        },\n    } = getState()\n\n    teamName && currentTeamName && teamName !== currentTeamName\n        && clearData(dispatch)\n\n    dispatch({\n        type: types.PREFETCHED_NAME,\n        payload: teamName,\n    })\n\n    return dispatch({\n        type: types.SET_TEAM_NAME,\n        payload: teamName,\n    })\n}\n\nconst userIdsFromString = pipe(\n    split(','),\n    map(trim),\n    filter(Boolean)\n)\n\nconst storeUserIds = (userIds = '') => (dispatch, getState) => {\n    const userIdsArray = userIdsFromString(userIds)\n\n    const {\n        fetches: {\n            userIds: currentUserIds = []\n        },\n    } = getState()\n\n    not(equals(currentUserIds, userIdsArray))\n        && clearData(dispatch)\n\n    return dispatch({\n        type: types.STORE_USER_IDS,\n        payload: userIdsArray,\n    })\n}\n\nconst storeExcludeIds = (excludeIds = '') => (dispatch, getState) => {\n    const excludeArray = userIdsFromString(excludeIds)\n\n    const {\n        fetches: {\n            excludeIds: currentExcludeIds\n        },\n    } = getState()\n\n    excludeArray.length && not(equals(currentExcludeIds, excludeArray))\n        && clearData(dispatch)\n\n    return dispatch({\n        type: types.STORE_EX_IDS,\n        payload: excludeArray,\n    })\n}\n\nconst storeRepo = (repo = '') => (dispatch, getState) => {\n    const {\n        fetches: {\n            repo: currentRepo,\n        },\n    } = getState()\n\n    repo && currentRepo && repo !== currentRepo\n        && clearData(dispatch)\n\n    return dispatch({\n        type: types.STORE_REPO,\n        payload: repo,\n    })\n}\n\nconst storeAmountOfData = (amountOfData = '') => (dispatch) => dispatch({\n    type: types.STORE_AMOUNT,\n    payload: amountOfData,\n})\n\nconst storeFormUntilDate = (amountOfData = '') => (dispatch, getState) => {\n    const {\n        fetches  = {},\n        pullRequests = [],\n    } = getState();\n\n    const formUntilDate = getUntilDate(\n        {\n            ...fetches,\n            amountOfData\n        },\n        pullRequests\n    )\n\n    dispatch({\n        type: types.STORE_FORM_UNTIL_DATE,\n        payload: formUntilDate,\n    })\n}\n\nconst storeUntilDate = (untilDate = '') => (dispatch) => dispatch({\n    type: types.STORE_UNTIL_DATE,\n    payload: untilDate,\n})\n\nconst storeSortDirection = (sortDirection = 'DESC') => (dispatch) => dispatch({\n    type: types.STORE_SORT,\n    payload: sortDirection,\n})\n\nconst clearData = (dispatch, msg = 'fff') => {\n    dispatch({ type: types.CLEAR_USER })\n    dispatch({ type: types.CLEAR_PRS })\n    dispatch({ type: types.CLEAR_FILTERED_PRS })\n    dispatch({ type: types.CLEAR_PR_PAGINATION })\n    dispatch({ type: types.CLEAR_USERS_DATA })\n    dispatch({ type: types.CLEAR_RELEASES })\n    dispatch({ type: types.CLEAR_RELEASES_PAGINATION })\n    dispatch({ type: types.CLEAR_ISSUES })\n    dispatch({ type: types.CLEAR_FILTERED_ISSUES })\n    dispatch({ type: types.CLEAR_ISSUES_PAGINATION })\n    dispatch({ type: types.CLEAR_FETCH_ERROR })\n}\n\n// Hmm: full users format per new pr results\nconst updateUsersData = (dispatch, getState) => {\n    const { pullRequests } = getState()\n\n    dispatch({\n        type: types.ADD_USERS_DATA,\n        payload: formatUserData(pullRequests),\n    })\n}\n\nconst getErrorMessage = state => {\n    const {\n        fetches: {\n            org,\n            repo,\n            token,\n            userIds = [],\n        } = {},\n    } = state\n\n    const noUserIds = userIds.length < 1\n\n    const missing = [\n        noUserIds && !org && 'Organization',\n        noUserIds && !repo && 'Repository',\n        !token &&'GitHib token',\n        !org && !repo && noUserIds && 'GitHub Ids',\n    ]\n        .filter(Boolean)\n\n    const prepend = (i) => {\n        const maxIndex = missing.length - 1\n\n        return [\n            i === 0\n            && (() => 'Missing '),\n            i === maxIndex\n            && (() => ' and '),\n            i > 0\n            && (() => ', '),\n        ].find(Boolean)()\n    }\n\n    const message = missing\n        .reduce((acc, current, i) => acc + prepend(i) + current, '')\n\n    return message\n}\n\nconst validateRequest = state => {\n    const {\n        fetches: {\n            org,\n            repo,\n            token,\n            userIds = [],\n        } = {},\n    } = state\n\n    const stringArgs = userIds.length\n        ? [token]\n        : [org, repo, token]\n\n    const validStringArgs = stringArgs\n        .every(item => typeof item === 'string' && item.length > 0)\n\n    const arrayArgs = userIds.length\n        ? [userIds]\n        : []\n\n    const validArraygArgs = arrayArgs\n        .every(item => item.length > 0)\n\n    const isValid = validStringArgs && validArraygArgs\n\n    return {\n        isValid,\n        error: !isValid\n            ? {\n                level: 'error',\n                message: getErrorMessage(state),\n            }\n            : null,\n    }\n}\n\n// TODO: Improve clearData logic\nconst getAPIData = ({ appendData = false } = {}) => async (dispatch, getState) => {\n    const state = getState();\n\n    const { isValid: isValidRequest, error = {}} = validateRequest(state);\n\n    !isValidRequest && dispatch({\n        type: types.FETCH_ERROR,\n        payload: error,\n    })\n\n    isValidRequest && dispatch({\n        type: types.CLEAR_FETCH_ERROR,\n    })\n\n    isValidRequest && dispatch({\n        type: types.FETCH_START,\n    })\n\n    state.preFetchedName\n        && !appendData\n        && clearData(dispatch, 'pre api')\n\n    try {\n        const {\n            fetches,\n            filteredPRs = [],\n            pullRequests = [],\n            issues = [],\n            filteredIssues = [],\n            formUntilDate = '',\n        } = getState();\n        const userIds = propOr([], 'userIds', fetches)\n\n        const untilDate = formUntilDate\n\n        const { fetchInfo, results } = userIds.length\n            ? await getUsersData({ fetchInfo: fetches, untilDate, dispatch })\n            : await api({ fetchInfo: fetches, queryInfo: batchedQuery(untilDate), dispatch })\n\n        const newPullrequests = formatPullRequests(fetches, results)\n        // Get all prs together so then can be cleanly filtered and sorted\n        const allPullrequests = pullRequests.concat(filteredPRs).concat(newPullrequests)\n        const [newRemainingPRs, newFilteredPRs] = filterSortPullRequests(fetches, untilDate, allPullrequests)\n\n        const releases = formatReleases(results)\n\n        const newIssues = formatIssues(results)\n        const allIssues = issues.concat(filteredIssues).concat(newIssues)\n        const [newRemainingIssues, newFilteredissues] = filterSortIssues(fetches, untilDate, allIssues)\n\n        dispatch({\n            type: types.ADD_PRS,\n            payload: newRemainingPRs,\n        })\n\n        dispatch({\n            type: types.ADD_FILTERED_PRS,\n            payload: newFilteredPRs,\n        })\n\n        dispatch(updateUsersData)\n\n        dispatch({\n            type: types.ADD_RELEASES,\n            payload: releases,\n        })\n\n        dispatch({\n            type: types.ADD_ISSUES,\n            payload: newRemainingIssues,\n        })\n\n        dispatch({\n            type: types.ADD_FILTERED_ISSUES,\n            payload: newFilteredissues,\n        })\n\n        dispatch({\n            type: types.STORE_UNTIL_DATE,\n            payload: formUntilDate,\n        })\n\n        dispatch({\n            type: types.SET_PR_PAGINATION,\n            payload: fetchInfo.prPagination,\n        })\n\n        dispatch({\n            type: types.SET_ISSUES_PAGINATION,\n            payload: fetchInfo.issuesPagination,\n        })\n\n        dispatch({\n            type: types.SET_RELEASES_PAGINATION,\n            payload: fetchInfo.releasesPagination,\n        })\n\n        dispatch({ type: types.FETCH_END })\n\n    } catch (error) {\n        console.log('-=-=--api data error', error)\n        dispatch({\n            type: types.FETCH_ERROR,\n            payload: {\n                level: 'error',\n                message: error.message || 'Unknown error',\n            },\n        })\n        dispatch({ type: types.FETCH_END })\n    }\n}\n\nconst getPreFetchedData = (name = 'nivo') => (dispatch, getState) => {\n    const repoData = require(`../prefetchedData/${name}.json`)\n\n    const {\n        fetches = {},\n        preFetchedName = '',\n        pullRequests = [],\n        usersData= [],\n        issues = [],\n        releases = [],\n    } = repoData\n\n    const teamName = fetches.teamName || ''\n    const userIds = fetches.userIds || []\n\n    clearData(dispatch)\n\n    const fetchesInfo = [\n        ['token', 'STORE_TOKEN'],\n        ['org', 'STORE_ORG'],\n        ['repo', 'STORE_REPO'],\n        ['enterpriseAPI', 'STORE_ENT_URL'],\n        ['prPagination', 'SET_PR_PAGINATION', {}],\n        ['releasesPagination', 'SET_RELEASES_PAGINATION', {}],\n        ['issuesPagination', 'SET_ISSUES_PAGINATION', {}]\n    ];\n\n    fetchesInfo.forEach(([payload, type, fallback = '']) => {\n        dispatch({\n            type: types[type],\n            payload: fetches[payload] || fallback,\n        })\n    });\n\n    dispatch({\n        type: types.PREFETCHED_NAME,\n        payload: preFetchedName,\n    })\n\n    dispatch({\n        type: types.SET_TEAM_NAME,\n        payload: teamName,\n    })\n\n    dispatch({\n        type: types.STORE_USER_IDS,\n        payload: userIds,\n    })\n\n    dispatch({\n        type: types.ADD_PRS,\n        payload: pullRequests,\n    })\n    dispatch({\n        type: types.ADD_USERS_DATA,\n        payload: usersData.length\n            ? usersData\n            : formatUserData(pullRequests),\n    })\n\n    dispatch({\n        type: types.ADD_ISSUES,\n        payload: issues,\n    })\n\n    dispatch({\n        type: types.ADD_RELEASES,\n        payload: releases,\n    })\n\n    dispatch({\n        type: types.FETCH_END,\n    })\n}\n\nconst getDownloadProps = (dispatch, getState) => {\n    const state = getState()\n\n    const repo = path(['fetches', 'repo'], state)\n    const teamName = path(['fetches', 'teamName'], state)\n    const getReportData = pipe(\n        assoc('HOW_TO', \"Move this file to src/prefetchedData, then in src/App.js on line 16 change 'react' to your file name excluding the extension. To show in the list you can add the file name in src/components/home/DataOptions/PrefetchedOptions.js.\"),\n        assoc('preFetchedName', repo || teamName),\n        pickAll(['fetches', 'pullRequests', 'filteredPRs', 'userData', 'issues', 'filteredIssues', 'releases', 'teamName']),\n        dissocPath(['fetches', 'token']),\n        dissocPath(['fetches', 'amountOfData']),\n        // TODO: strip hasNextPage from user's pagination data\n        dissocPath(['fetches', 'prPagination', 'hasNextPage']),\n        dissocPath(['fetches', 'issuesPagination', 'hasNextPage']),\n        dissocPath(['fetches', 'releasesPagination', 'hasNextPage']),\n        slimObject\n    )\n\n    const reportData = getReportData(state)\n    const json = JSON.stringify(reportData, null, 2)\n    const blob = new Blob([json], { type: \"application/json\" })\n    const href  = URL.createObjectURL(blob)\n\n\n    const fileName = teamName\n        ? teamName\n        : `${path(['fetches', 'org'], state)}-${repo}`\n\n    return {\n        href,\n        download: `${fileName}.json`,\n    }\n}\n\nexport {\n    setUser,\n    clearUser,\n    storeOrg,\n    storeToken,\n    storeRepo,\n    storeTeamName,\n    storeEnterpriseAPI,\n    storeUserIds,\n    storeExcludeIds,\n    storeAmountOfData,\n    storeFormUntilDate,\n    storeUntilDate,\n    storeSortDirection,\n    getAPIData,\n    getPreFetchedData,\n    toggleTheme,\n    getDownloadProps,\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Button from '../../shared/Button'\nimport { P } from '../../shared/StyledTags'\nimport styles from './styles'\nimport { getPreFetchedData } from '../../../state/actions'\n\n\nconst FetchForm = (props) => {\n    const {\n        classes,\n        preFetchedName,\n        getPreFetchedInfo,\n    } = props\n\n    const preFetchButton = (name, i) => <Button\n        value={name}\n        key={i}\n        color={preFetchedName === name ? 'primary' : 'secondary'}\n        onClick={(e) => {\n            e.preventDefault()\n            getPreFetchedInfo(name)\n        }}\n    />\n\n    return (\n        <div className={classes.preFetched}>\n                <P>\n                    See community contribution health of some popular Open Source repositories.\n                </P>\n                {\n                    [\n                        'react',\n                        'svelte',\n                        'vue-next',\n                        'TypeScript',\n                        'material-ui',\n                        'xstate',\n                        'react-testing-library',\n                        'node',\n                        'deno',\n                        'vscode',\n                        'electron',\n                        'kotlin',\n                        'swift',\n                        'ramda',\n                        'babel',\n                        'jest',\n                        'prettier',\n                        'cypress',\n                    ]\n                        .map(preFetchButton)\n                }\n                <P>See contribution health of some popular OSS teams</P>\n                {\n                    [\n                        'ReactCore',\n                    ]\n                        .map(preFetchButton)\n                }\n            </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    preFetchedName: state.preFetchedName,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getPreFetchedInfo: (x) => dispatch(getPreFetchedData(x)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FetchForm))\n","import React from 'react'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { P } from '../shared/StyledTags'\n\nconst variant = {\n    'warn': <WarningIcon />,\n    'error': <ErrorIcon />,\n}\n\nconst Message = ({\n    error: {\n        level,\n        message,\n    },\n    classes,\n    className,\n} = {}) => (\n    <div className={`${classes[level]} ${classes.root} ${className}`} >\n        {variant[level]}\n        <P className={classes.copy}>{message}</P>\n    </div>\n)\n\nconst styles = theme => ({\n    root: {\n        padding: '0.8rem',\n        display: 'flex',\n        alignItems: 'center',\n        borderRadius: '4px',\n    },\n    copy: {\n        margin: 0,\n        marginLeft: theme.mySpacing.y.medium,\n        padding: 0,\n        color: '#000',\n    },\n    error: {\n        backgroundColor: '#e02e2e',\n    },\n    warn: {\n        backgroundColor: '#dc7e09',\n    },\n})\nexport default withStyles(styles)(Message)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    always,\n    equals,\n    pathOr,\n    cond,\n    T as alwaysTrue,\n    keys,\n} from 'ramda'\nimport {\n    TextField,\n    Select,\n    MenuItem,\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Button from '../../shared/Button'\nimport ChartDescription from '../../shared/ChartDescription'\nimport { P, H } from '../../shared/StyledTags'\nimport Message from '../Message'\nimport styles from './styles'\nimport types from '../../../state/types'\n\nimport {\n    storeOrg,\n    storeRepo,\n    storeToken,\n    storeUserIds,\n    storeTeamName,\n    storeEnterpriseAPI,\n    storeExcludeIds,\n    storeAmountOfData,\n    storeFormUntilDate,\n    storeSortDirection,\n    getAPIData,\n    getDownloadProps,\n} from '../../../state/actions'\nimport { pick } from 'ramda'\n\nconst buttonText = (fetching, pullRequests = []) => [\n    fetching && 'fetching',\n    pullRequests.length && 'Get more data',\n    'Get data',\n].find(Boolean)\n\nconst validate = ({ key, value }) => {\n    const isValid = cond([\n        [equals('enterpriseAPI'), always(/^(https:\\/\\/.+\\..+|^$)/.test(value))],\n        [equals('excludeIds'), always(/^([\\w-.,\\s]+|)$/.test(value))],\n        [equals('userIds'), always(/^([\\w-.,\\s]+)$/.test(value))],\n        [alwaysTrue, always(/^[\\w-.]+$/.test(value))],\n    ])(key)\n    return isValid\n}\n\nconst errorValue = formInfo => key => {\n    const value = formInfo[key]\n    const isValid = validate({ key, value })\n\n    return isValid ? false : true\n}\n\nconst inputLabels = {\n    org: 'Organization',\n    repo: 'Repository',\n    token: 'Token*',\n    excludeIds: \"Exclude GitHub ids e.g. bots, ',' separated\",\n    enterpriseAPI: 'Enterprise API full url',\n    userIds: 'Comma separated list of user ids',\n    teamName: 'Team name',\n}\n\nconst FormSection = (props) => {\n    const {\n        setValues,\n        getData,\n        fetches,\n        fetching,\n        error,\n        pullRequests = [],\n        preFetchedName = '',\n        preFetchedReport = false,\n        reportType = 'repo',\n        classes,\n        getDownloadInfo,\n    } = props\n\n    const commonInputs = {\n        sortDirection: 'DESC',\n        amountOfData: 1,\n        token: '',\n        excludeIds: '',\n        enterpriseAPI: '',\n    }\n\n    const primaryInputs = reportType === 'repo'\n        ? {\n            org: '',\n            repo: '',\n        }\n        : {\n            userIds: '',\n            teamName: '',\n        }\n\n    const defaultInputs = {\n        ...commonInputs,\n        ...primaryInputs,\n    }\n\n    const inputKeys = keys(defaultInputs)\n\n    const [inputError, setInputError] = useState({})\n\n    const inputs = preFetchedReport\n        ? pick(inputKeys, fetches)\n        : defaultInputs\n\n    const [formInfo, setFormInfo] = useState(inputs)\n\n    const setValue = (key, value) => setFormInfo({\n        ...formInfo,\n        [key]: value\n    })\n\n    const inputProps = (key) => ({\n        label: inputLabels[key],\n        className: classes.child,\n        error: inputError[key] || false,\n        value: formInfo[key],\n        variant: 'outlined',\n        margin: 'normal',\n        helperText: inputError[key] && 'Invalid input',\n        onBlur: (event) => {\n            const value = pathOr('', ['target', 'value'], event)\n\n            const isValid = validate({ key, value })\n            setInputError({\n                ...inputError,\n                [key]: isValid ? false : true\n            })\n\n            isValid\n                && setValue(key, value)\n        },\n        onChange: (event) => {\n            const value = pathOr('', ['target', 'value'], event)\n            setInputError({\n                ...inputError,\n                [key]: false,\n            })\n\n            setValue(key, value)\n        },\n        onFocus: () => setInputError({\n            ...inputError,\n            [key]: false,\n        })\n    })\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        const getErrorValue = errorValue(formInfo)\n\n        const newInputError = {}\n        inputKeys\n            .forEach(key => newInputError[key] = getErrorValue(key))\n\n        setInputError(newInputError)\n\n        const allPass = Object.values(newInputError)\n            .every(x => !x)\n\n        allPass && !fetching\n            && setValues(formInfo)\n\n        allPass && !fetching\n            && getData()\n    }\n\n    const hasTeamData = !preFetchedName && pullRequests.length > 0\n\n    const itemText = (amount) => `Get ${amount} ${amount === 1 ? 'month' : 'months'} ${hasTeamData ? 'more ' : ''}data`\n\n    return (\n        <div className={classes.formDescription} >\n            {\n                !preFetchedReport\n                    && <H level={3}>Get community data for any Team(list of users)</H>\n            }\n            <form\n                onSubmit={handleSubmit}\n            >\n                <div className={classes.inputGrid}>\n                    <Select\n                        value={formInfo.sortDirection}\n                        onChange={(e) => setValue('sortDirection', e.target.value)}\n                        inputProps={{ 'aria-label': 'Starting point' }}\n                    >\n                        <MenuItem value=\"DESC\" >Starting from now</MenuItem>\n                        {\n                            hasTeamData && <MenuItem value=\"ASC\">Starting from current team data</MenuItem>\n                        }\n                    </Select>\n                    <Select\n                        value={formInfo.amountOfData}\n                        onChange={(e) => setValue('amountOfData', e.target.value)}\n                        inputProps={{ 'aria-label': 'Amount of data' }}\n                    >\n                        <MenuItem value={1} default>{itemText(1)}</MenuItem>\n                        <MenuItem value={3} >{itemText(3)}</MenuItem>\n                        <MenuItem value={6} >{itemText(6)}</MenuItem>\n                        <MenuItem value={12} >{itemText(12)}</MenuItem>\n                        <MenuItem value={24} >{itemText(24)}</MenuItem>\n                        <MenuItem value={36} >{itemText(36)}</MenuItem>\n                        <MenuItem value=\"all\">Get it all!</MenuItem>\n                    </Select>\n                    {\n                        keys(primaryInputs)\n                            .map((inputKey) => <TextField\n                                key={inputKey}\n                                {...inputProps(inputKey)}\n                            />)\n                    }\n                    <TextField\n                        {...inputProps('token')}\n                    />\n                    <P className=\"tokenText\">\n                        * To create a token go to your GitHub <a className={classes.link} href=\"https://github.com/settings/tokens\">tokens</a> page, click on 'generate new token', choose the settings 'repo' (all) and 'read:org' then click 'Generate token'.\n                    </P>\n                </div>\n\n                <ChartDescription\n                    className={`${classes.formDescription} ${classes.fullRow}`}\n                    title=\"\"\n                    expandText=\"add this\"\n                    intro=\"Advanced options\"\n                >\n                    <div className={classes.inputGrid}>\n                        <TextField\n                            {...inputProps('excludeIds')}\n                        />\n                        <TextField\n                            {...inputProps('enterpriseAPI')}\n                        />\n                    </div>\n                </ChartDescription>\n\n                <div className={classes.inputGrid}>\n                    <Button\n                        className={`${classes.child} ${classes.fullRow}`}\n                        type={fetching ? 'disabled' : 'submit'}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        value={buttonText(fetching, '', pullRequests)}\n                    />\n                    {\n                        error\n                            && <Message\n                                error={error}\n                                className={classes.fullRow}\n                            />\n                    }\n                </div>\n            </form>\n            {\n                !fetching\n                    && !preFetchedName\n                    && pullRequests.length > 0\n                    && <P><a className={classes.link} {...getDownloadInfo()}>Download report data</a></P>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    fetches: state.fetches,\n    fetching: state.fetching,\n    error: state.error,\n    pullRequests: state.pullRequests,\n    preFetchedName: state.preFetchedName,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setValues: ({\n        token,\n        org,\n        repo,\n        userIds,\n        teamName,\n        enterpriseAPI,\n        excludeIds,\n        amountOfData,\n        sortDirection\n    }) => {\n        dispatch(\n            org\n                ? storeOrg(org)\n                : { type: types.CLEAR_ORG }\n        )\n        dispatch(\n            repo\n                ? storeRepo(repo)\n                : { type: types.CLEAR_REPO }\n        )\n        userIds && dispatch(storeUserIds(userIds))\n        teamName && dispatch(storeTeamName(teamName))\n\n        dispatch(storeToken(token))\n        dispatch(storeEnterpriseAPI(enterpriseAPI))\n        dispatch(storeExcludeIds(excludeIds))\n        dispatch(storeAmountOfData(amountOfData))\n        dispatch(storeFormUntilDate(amountOfData))\n        dispatch(storeSortDirection(sortDirection))\n    },\n    getData: (x) => dispatch(getAPIData(x)),\n    getDownloadInfo: () => dispatch(getDownloadProps),\n})\n\nexport default connect(mapStateToProps,\n    mapDispatchToProps)(withStyles(styles)(FormSection))\n","import React, { useState } from 'react'\nimport {\n    cond,\n    always,\n    equals,\n} from 'ramda'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Paper from '../../shared/Paper'\nimport Button from '../../shared/Button'\n\nimport PrefetchedOptions from './PrefetchedOptions'\nimport FormSection from './FormSection'\nimport styles from './styles'\n\nconst FetchForm = ({ classes }) => {\n     const [selectedOption, setOption] = useState('oss')\n     return (\n        <Paper className={classes.dataPaper} >\n            <div className={classes.typeOptions}>\n                {\n                    [\n                        ['Popular repos/teams', 'oss'],\n                        ['Make repo report', 'repo'],\n                        ['Make team report', 'team'],\n                    ]\n                        .map(([text, type], i) => <Button\n                            value={text}\n                            key={i}\n                            color={selectedOption === type ? 'primary' : 'secondary'}\n                            onClick={(e) => {\n                                e.preventDefault()\n                                setOption(type)\n                            }}\n                        />)\n                }\n            </div>\n            {\n                cond([\n                    [equals('oss'), always(<PrefetchedOptions />)],\n                    [equals('repo'), always(<FormSection reportType=\"repo\" />)],\n                    [equals('team'), always(<FormSection reportType=\"team\" />)],\n                ])(selectedOption)\n            }\n        </Paper>\n    )\n}\n\nexport default withStyles(styles)(FetchForm)\n","const colors = ['#E82573', '#8b4ff0', '#1F77B4', '#4ECC7A', '#DBD523', '#EB9830', '#D14B41']\n\nexport default colors\n","import React, { Fragment } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { H } from '../shared/StyledTags'\n\nconst ChartHeading = ({ className, items = [], text = '', type = '' } = {}) => {\n    const prepend = (i) => {\n        const maxIndex = items.length - 1\n\n        return [\n            i === 0\n            && (() => ''),\n            i === maxIndex\n            && (() => ' and '),\n            i > 0\n            && (() => ', '),\n        ].find(Boolean)()\n    }\n\n    const useStyles = makeStyles(theme => ({\n        root: props => ({\n            color: props.color,\n            borderBottom: `solid 2px ${props.color}`,\n            display: 'inline-block',\n            lineHeight: '2rem',\n            position: 'relative',\n            '&:before': {\n                lineHeight: '0',\n                content: '\"•\"',\n                position: 'absolute',\n                bottom: '-1px',\n                left: '-3px',\n            },\n            '&:after': {\n                lineHeight: '0',\n                content: '\"•\"',\n                position: 'absolute',\n                bottom: '-1px',\n                right: '-3px',\n            }\n        }),\n    }))\n\n    const LineItem = ({ color, label}) => {\n        const classes = useStyles({ color });\n        return (\n            <span\n                className={classes.root}\n            >\n                {label}\n            </span>\n        )\n    }\n\n    const Item = ({ color, label}) => (\n        <span\n            style={{ color }}\n        >\n            {label}\n        </span>\n    )\n\n    const mathTypeMap = {\n        average: 'Average',\n        sum: 'Total',\n        count: 'Total',\n        multiple: '',\n    }\n\n    const uniqueLinesMaths = [\n        ...new Set(items.map(x => x.groupMath))\n    ]\n\n    const singleMathType = items.length > 0\n        && type === 'line'\n        && uniqueLinesMaths.length < 2\n            ? uniqueLinesMaths[0] || 'average'\n            : 'multiple'\n\n    return (\n        <H level={3} className={className}>\n            {`${text} `}\n            {`${mathTypeMap[singleMathType]} `}\n            {\n                items\n                    .map((item, i) => <Fragment key={i}>\n                        {prepend(i)}\n                        {\n                            type === 'line'\n                                ? <LineItem {...item} />\n                                : <Item {...item} />\n                        }\n                        </Fragment>)\n            }\n        </H>\n    )\n}\n\nexport default ChartHeading\n","import { withStyles } from '@material-ui/core/styles'\n\nconst styles = () => ({\n    centerHeading: {\n        textAlign: 'center',\n    },\n    headingWrap: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    barChartComponentWrap: {\n        width: '50%',\n        maxWidth: '1200px',\n        margin: '0 0 1rem 0',\n        '@media (max-width: 950px)': {\n            width: '100%',\n        },\n    },\n    lineChartComponentWrap: {\n        width: '100%',\n        maxWidth: '1200px',\n    },\n    chordWrap: {\n        width: '450px',\n        height: '450px',\n        '@media (max-width: 668px)': {\n            width: '370px',\n            height: '370px',\n            '& svg text': {\n                fontSize: '10px !important'\n            },\n        },\n    },\n    pieWrap: {\n        width: '100%',\n        height: '350px',\n        marginBottom: '20px',\n        '@media (max-width: 750px)': {\n            height: '300px',\n        },\n        '@media (max-width: 650px)': {\n            height: '250px',\n        },\n    },\n    chartWrap: {\n        width: '100%',\n        height: '500px',\n        '& svg g line': {\n            opacity: '0.6'\n        },\n        '@media (max-width: 768px)': {\n            height: '350px',\n            '& svg g line': {\n                opacity: '0.2'\n            },\n            '& svg g line:first-child': {\n                opacity: '1'\n            },\n        },\n        '@media (max-width: 668px)': {\n            height: '300px',\n            '& svg g circle': {\n                display: 'none'\n            },\n            '& svg path': {\n                opacity: '1'\n            },\n            '& svg text': {\n                fontSize: '10px !important'\n            },\n        },\n    },\n})\n\nconst styledCharts = (Chart) => withStyles(styles)(Chart)\n\nexport default styledCharts","import {\n    cond,\n    always,\n    T,\n} from 'ramda'\n const {\n    getMonth,\n    getWeek,\n    getDay,\n    differenceInMonths,\n } = require('date-fns')\n\n const isNewDay = (prev, current) => {\n    const prevItemsDay = prev && getDay(new Date(prev))\n    const currentItemsDay = current && getDay(new Date(current))\n\n    return (prevItemsDay && currentItemsDay) && prevItemsDay !== currentItemsDay\n}\n\nconst isNewWeek = (prev, current) => {\n    const prevItemsWeek = prev && getWeek(new Date(prev))\n    const currentItemsWeek = current && getWeek(new Date(current))\n\n    return (prevItemsWeek && currentItemsWeek) && prevItemsWeek !== currentItemsWeek\n}\n\nconst isNewNthWeek = mod => (prev, current) => {\n    const prevItemsWeek = prev && getWeek(new Date(prev))\n    const currentItemsWeek = current && getWeek(new Date(current))\n\n    return (prevItemsWeek && currentItemsWeek) && (prevItemsWeek % mod) > 0 && (currentItemsWeek % mod) === 0\n}\n\nconst isNewMonth = (prev, current) => {\n    const prevItemsWeek = prev && getMonth(new Date(prev))\n    const currentItemsWeek = current && getMonth(new Date(current))\n\n    return (prevItemsWeek && currentItemsWeek) && prevItemsWeek !== currentItemsWeek\n}\n\nconst isNew = {\n    '1day': isNewDay,\n    '1week': isNewWeek,\n    '2week': isNewNthWeek(2),\n    '3week': isNewNthWeek(3),\n    '1month': isNewMonth,\n}\n\nconst batchByType = batchType => key => data => data\n    .reduce((acc, item) => {\n        const prevWeeks = acc.length > 1\n            ? acc.slice(0, acc.length - 1)\n            : []\n\n        const currentWeek = acc[acc.length - 1] || []\n        const prevItem = currentWeek[currentWeek.length - 1] || {}\n\n        const all = isNew[batchType](prevItem[key], item[key])\n            ? acc\n                .concat([[item]])\n            : prevWeeks\n                .concat([currentWeek.concat(item)])\n\n        return all\n    }, [])\n\nconst batchByData = key => (data = []) => {\n    const { mergedAt: startDate } = data.at(0)\n    const { mergedAt: endDate } = data.at(-1)\n    const totalMonths = differenceInMonths(new Date(endDate), new Date(startDate))\n\n    return cond([\n        [always(totalMonths >= 200), batchByType('1month')(key)],\n        [always(totalMonths >= 60), batchByType('3week')(key)],\n        [always(totalMonths >= 12), batchByType('2week')(key)],\n        [always(totalMonths >= 6), batchByType('1week')(key)],\n        [T, batchByType('1day')(key)],\n    ])(data)\n}\n\nconst batchBy = key => (data = []) => data.length < 1\n    ? []\n    : batchByData(key)(data)\n\nexport default batchBy","import { apply } from 'ramda'\nimport batchBy from './batchBy'\n\nconst getAllYValues = data => data\n    .reduce((acc, { data }) => {\n        const values = data\n            .map(x => x.y)\n\n        acc.push(...values)\n\n        return acc\n    }, [])\n\nconst getMaxYValue = (data) => {\n    const allValues = getAllYValues(data)\n\n    const maxValue = apply(Math.max, allValues)\n\n    return maxValue\n}\n\nconst getMinYValue = (data) => {\n    const allValues = getAllYValues(data)\n\n    const minValue = apply(Math.min, allValues)\n\n    return minValue > 0\n        ? 0\n        : minValue\n}\n\nconst dateSort = (\n    { mergedAt: dateA = '' },\n    { mergedAt: dateB = '' },\n) => new Date(dateA).getTime() - new Date(dateB).getTime()\n\nconst formatDate = (date) => {\n    const info = new Date(date)\n    const month = info.getMonth() + 1\n    const dayM = info.getDate()\n    return `${info.getFullYear()}-${month < 10 ? `0${month}` : month}-${dayM < 10 ? `0${dayM}` : dayM}`\n}\n\nconst formatBatches = batches => dataKey => groupMath => batches\n    .map((batch) => {\n        const value = batch\n            .reduce((acc, current) => (current[dataKey] || 0) + acc, 0)\n\n        const valueByTypes = {\n            'average': Math.round(value / batch.length),\n            'sum': value,\n            'count': batch.length,\n        }\n\n        return {\n            y: valueByTypes[groupMath],\n            x: formatDate(batch[0].mergedAt),\n        }\n    })\n\nconst formatLineData = ({ data, dataKey, groupMath = 'average' }) => {\n    const filteredData = data\n        .filter(item => item.mergedAt && /\\d+/.test(item[dataKey]))\n\n    const sortedData = filteredData\n        .sort(dateSort)\n\n    const batchedData = batchBy('mergedAt')(sortedData)\n    const formattedData = formatBatches(batchedData)(dataKey)(groupMath)\n\n    return formattedData\n}\n\nconst formatLinesData = (axix) => axix.lines\n    .map(({ label, color, dataKey, groupMath, data: lineData }) => {\n        const data = lineData || axix.data || []\n        const formattedData = formatLineData({ data, dataKey, groupMath })\n\n        return formattedData.length\n            && ({\n                id: label,\n                color,\n                data: formattedData,\n            })\n    })\n    .filter(Boolean)\n\nconst formatGraphMarkers = (markers, theme, lineData) => {\n    const [dateStart, dateEnd] = lineData\n        .reduce(([start, end], { data = [] } = {}) => {\n            const currentStart = data[0].x\n            const currentEnd = data[data.length - 1].x\n\n            return [\n                !start || new Date(currentStart) < start\n                    ? new Date(currentStart)\n                    : start,\n                !end || new Date(currentEnd) > end\n                    ? new Date(currentEnd)\n                    : end,\n            ]\n        }, [])\n\n    const markerType = (type) => ({\n        MAJOR: 'primary',\n        MINOR: 'secondary',\n    })[type] || 'tertiary'\n\n    const formattedMarkers = markers\n        .filter(({ date } = {}) => {\n            const currentDate = new Date(date)\n\n            return currentDate > dateStart && currentDate < dateEnd\n        })\n        .map((item) => ({\n            axis: 'x',\n            value: new Date(item.date).getTime(),\n            legend: item.releaseType === 'MAJOR'\n                ? item.description\n                : '',\n            ...(theme.charts.markers[markerType(item.releaseType)] || {}),\n        }))\n\n    return formattedMarkers\n}\n\nconst smoothNumber = (ruffledNumber) => {\n    const stringNumber = `${ruffledNumber}`\n    const roundTo = Math.ceil(stringNumber.length * 0.4)\n\n    const [backwards] = stringNumber\n        .split('')\n        .reduceRight(([acc = '', increment = false], item, index) => {\n            var number = parseInt(item)\n\n            const updatedItem = increment\n                ? number + 1\n                : number\n\n\n            const round = index !== 0 && (updatedItem > 9 || (index > roundTo && updatedItem > 4))\n\n            const newValue = round || index > roundTo\n                ? 0\n                : updatedItem\n\n            return [\n                [\n                    ...acc,\n                    newValue,\n                ],\n                round,\n            ]\n        }, [])\n\n    const smooth = backwards.reverse().join('')\n\n    return smooth\n}\n\nexport {\n    getMaxYValue,\n    getMinYValue,\n    formatLinesData,\n    formatGraphMarkers,\n    smoothNumber,\n    dateSort,\n}","import React from 'react'\nimport { pathOr, propOr } from 'ramda'\nimport { ResponsiveLine as NivoLine } from '@nivo/line'\nimport { TableTooltip } from '@nivo/tooltip'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\n\nimport {\n    getMaxYValue,\n    getMinYValue,\n    formatLinesData,\n    formatGraphMarkers,\n    smoothNumber,\n} from './lineHelpers'\n\nconst ToolTip = convertedRightLines => data => {\n    // NOTE: this is needed to use the original Y value for the tool tip\n    const getYValue = (point) => {\n        const yCurrentValue = point.data.yFormatted\n        const originalY = point.data.originalY\n\n        return /[\\d.]/.test(originalY)\n            ? originalY\n            : yCurrentValue\n    }\n\n    const Chip = ({ color }) => <span\n        style={{\n            display: 'block',\n            width: '12px',\n            height: '12px',\n            background: color,\n        }}\n    />\n\n    const points = pathOr([], ['slice', 'points'], data)\n    return (\n        <TableTooltip\n            rows={\n                points\n                    .map((point) => [\n                        <Chip color={point.serieColor} />,\n                        point.serieId,\n                        <strong>{getYValue(point)}</strong>,\n                    ])\n            }\n        />\n    )\n}\n\nconst Line = styledCharts(({\n    title,\n    data = [],\n    markers = [],\n    showLegends = false,\n    classes,\n} = {}) => {\n    const theme = useTheme();\n    // TODO: function to see time gap in data to help format date e.g. should add year\n    const leftAxis = data\n        .find(({ xAxis } = {}) => xAxis === 'left') || { data: [], lines: [] }\n    const leftLinesData = formatLinesData(leftAxis)\n    const maxLeftValue = getMaxYValue(leftLinesData)\n    const minLeftValue = getMinYValue(leftLinesData)\n\n    const rightAxis = data\n        .find(({ xAxis } = {}) => xAxis === 'right') || { data: [], lines: [] }\n    const rightLinesData = formatLinesData(rightAxis)\n    const maxRightValue = getMaxYValue(rightLinesData)\n\n    // As Nivo Line does not have right axis lines need to convert right line data to left line data\n    const convertedRightLines = rightLinesData\n        .map((item = {}) => {\n            const formattedData = item.data\n                .map((dataItem) => ({\n                    y: Math.round(dataItem.y * (maxLeftValue / maxRightValue)),\n                    x: dataItem.x,\n                    originalY: dataItem.y,\n                }))\n\n            return formattedData.length && ({\n                ...item,\n                data: formattedData,\n            })\n        })\n        .filter(Boolean)\n\n    const leftHeadingItems = title\n        ? []\n        : leftAxis.lines\n\n    const rightHeadingItems = rightAxis.lines\n\n    const legends = showLegends\n        ? [\n            {\n                anchor: 'top-right',\n                direction: 'column',\n                justify: false,\n                translateX: -10,\n                translateY: 10,\n                itemsSpacing: 0,\n                itemDirection: 'right-to-left',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 1,\n                symbolSize: 12,\n                symbolShape: 'square',\n                symbolBorderColor: 'rgba(0, 0, 0, .9)',\n                toggleSerie: true,\n                itemTextColor: theme.palette.text.primary,\n            }\n        ]\n        : []\n\n    const lineData = leftLinesData.concat(convertedRightLines)\n\n    const formattedMarkers = formatGraphMarkers(markers, theme, lineData)\n\n    const hasData = (items) => items.some(x => propOr([], 'data', x).length)\n\n    return hasData(lineData) && (\n        <div className={classes.lineChartComponentWrap}>\n            <div className={classes.headingWrap}>\n                <ChartHeading type='line' text={title} items={leftHeadingItems} />\n                {\n                    rightHeadingItems.length > 0\n                        && <ChartHeading type='line' items={rightHeadingItems} />\n                }\n            </div>\n\n            <div className={classes.chartWrap}>\n                <NivoLine\n                    margin={{ top: 14, right: 50, bottom: 50, left: 50 }}\n                    data={lineData}\n                    colors={[\n                        ...leftAxis.lines.map(x => x.color),\n                        ...rightAxis.lines.map(x => x.color),\n                    ]}\n                    lineWidth={2}\n                    curve='monotoneX'\n                    animate={false}\n                    toggleSerie={showLegends && true}\n                    xScale={{\n                        type: 'time',\n                        format: '%Y-%m-%d',\n                    }}\n                    xFormat=\"time:%Y-%m-%d\"\n                    yScale={{\n                        type: 'linear',\n                        min: minLeftValue,\n                        max: maxLeftValue,\n                    }}\n                    axisBottom={{\n                        format: '%y/%m',\n                        tickSize: 0,\n                        tickPadding: 10,\n                        tickRotation: -45,\n                    }}\n                    legends={legends}\n                    axisLeft={{\n                        tickSize: 0,\n                        tickValues: 8,\n                    }}\n                    pointLabelYOffset={0}\n                    {...(\n                        formattedMarkers.length\n                            && { markers: formattedMarkers }\n\n                    )}\n                    {...(\n                        convertedRightLines.length\n                            && {\n                                axisRight: {\n                                    tickSize: 0,\n                                    tickValues: 8,\n                                    format: (rawLeftValue) => {\n                                        const realRightValue = Math.round(rawLeftValue * (maxRightValue / maxLeftValue))\n                                        return smoothNumber(realRightValue)\n                                    },\n                                },\n                            }\n                    )}\n                    enableGridX={false}\n                    enableSlices=\"x\"\n                    sliceTooltip={ToolTip(convertedRightLines)}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Line","import React from 'react'\nimport { connect } from 'react-redux'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport { P } from '../shared/StyledTags'\nimport colors from '../colors'\nimport Line from '../charts/Line'\n\nconst getByAuthorData = (pullRequests = []) => {\n    const authorsPrs = {}\n    pullRequests\n        .forEach((pr) => {\n            const { author } = pr\n            const theirPrs = authorsPrs[author] || []\n            theirPrs.push(pr)\n\n            authorsPrs[author] = theirPrs\n        })\n\n    const byAuthorLines = Object.entries(authorsPrs)\n        .map(([author = '', prs = []], i) => {\n            const data = prs\n                .map(pr => ({\n                    value: 1,\n                    mergedAt: pr.mergedAt,\n                }))\n\n            return {\n                label: author,\n                color: colors[i % colors.length],\n                dataKey: 'value',\n                groupMath: 'count',\n                data,\n            }\n        })\n\n    const byAuthor = {\n        lines: byAuthorLines,\n        xAxis: 'left',\n    }\n\n    return [byAuthor]\n}\n\nconst PullRequestTrends = ({\n    pullRequests = [],\n    releases = [],\n    userIds = [],\n} = {}) => {\n    const { type } = useTheme();\n\n    const isTeamPage = userIds.length > 0\n    const byAuthorData = isTeamPage\n        ? getByAuthorData(pullRequests)\n        : []\n\n    return (\n        <Paper>\n            <ChartDescription\n                title=\"Pull Request trends\"\n            >\n                {\n                    releases.length > 1 && <div>\n                        <P>Vertical lines are releases: Green is a Major release, solid purple is Minor and dotted purple is Patch or Alpha</P>\n                    </div>\n                }\n            </ChartDescription>\n            {\n                isTeamPage && <>\n                    <Line\n                        title=\"Merged PRs by team\"\n                        markers={releases}\n                        data={[{\n                            lines: [{\n                                label: 'team',\n                                color: '#e82573',\n                                dataKey: 'author',\n                                groupMath: 'count',\n                            }],\n                            xAxis: 'left',\n                            data: pullRequests,\n                        }]}\n                    />\n                    <Line\n                        title=\"Merged PRs by author\"\n                        markers={releases}\n                        showLegends={true}\n                        data={byAuthorData}\n                    />\n                </>\n            }\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Comments',\n                                color: '#1f77b4',\n                                dataKey: 'comments',\n                            },\n                            {\n                                label: 'Approvals',\n                                color: '#e82573',\n                                dataKey: 'approvals',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data: pullRequests,\n                    },\n                    {\n                        lines: [\n                            {\n                                label: 'PR Size',\n                                color: type === 'dark' ? '#e2e2e2' : '#777',\n                                dataKey: 'prSize',\n                            },\n                        ],\n                        xAxis: 'right',\n                        data: pullRequests,\n                    },\n                ]}\n            />\n\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Age (days)',\n                                color: '#e82573',\n                                dataKey: 'age',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data: pullRequests,\n                    },\n                    {\n                        lines: [\n                            {\n                                label: 'PR Size',\n                                color: type === 'dark' ? '#e2e2e2' : '#777',\n                                dataKey: 'prSize',\n                            },\n                        ],\n                        xAxis: 'right',\n                        data: pullRequests,\n                    },\n                ]}\n            />\n        </Paper>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    releases: state.releases,\n    userIds: state.fetches.userIds,\n})\n\nexport default connect(mapStateToProps)(PullRequestTrends)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { P } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport Line from '../charts/Line'\n\nconst formatIssueData = (data = []) => data\n    .map((item) => ({\n        mergedAt: item.mergedAt,\n        ...(\n            item.isBug\n                ? { bug: 1 }\n                : { issue: 1 }\n        ),\n    }))\n\nconst IssuesTrends = ({\n    issues = [],\n    releases = [],\n    classes,\n} = {}) => {\n    const data = formatIssueData(issues)\n\n    return data && data.length > 0 && (\n        <Paper>\n            <ChartDescription\n                title=\"Feature and bug trends\"\n            />\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Issues',\n                                color: '#1f77b4',\n                                dataKey: 'issue',\n                                groupMath: 'count',\n                            },\n                            {\n                                label: 'Bugs*',\n                                color: '#e82573',\n                                dataKey: 'bug',\n                                groupMath: 'count',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data,\n                    },\n                ]}\n            />\n            <P className={classes.fullP}>*Bugs in this graph are issues that have a title or a label that contains the word 'bug'</P>\n        </Paper>\n    )\n}\n\nconst styles = theme => ({\n    'fullP': {\n        width: '100%',\n        textAlign: 'center',\n    },\n})\n\nconst mapStateToProps = (state) => ({\n    issues: state.issues,\n    releases: state.releases,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(IssuesTrends))\n","const hasChartData = dataArray => keys => keys\n    .some(key => dataArray\n        .some(dataItem => dataItem[key])\n    )\n\nexport default hasChartData\n","import React from 'react'\nimport { filter } from 'ramda'\nimport { ResponsiveBar as NivoBar } from '@nivo/bar'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\nimport hasChartData from './hasChartData'\n\nconst Bar = styledCharts(({\n    data = [],\n    bars = [],\n    sortBy = 'comments',\n    indexBy = 'user',\n    max = 20,\n    classes,\n    layout = \"vertical\",\n    titlePrefix = ''\n} = {}) => {\n    const theme = useTheme();\n    const trimmedData = filter(item => bars.some(x => item[x.dataKey]), data)\n\n    const byPropDesc = prop => (a, b) =>\n        +((a[prop] || 0) < (b[prop] || 0)) || +((a[prop] || 0) === (b[prop] || 0)) - 1\n\n    const sortedData = sortBy\n        ? trimmedData.sort(byPropDesc(sortBy))\n        : trimmedData\n\n    const finalData = max\n        ? sortedData.slice(0, max)\n        : sortedData\n\n    const keys = bars.map(x => x.dataKey)\n\n    return hasChartData(data)(keys) && (\n        <div className={classes.barChartComponentWrap}>\n            <ChartHeading text={titlePrefix} items={bars} />\n            <div className={classes.chartWrap}>\n                <NivoBar\n                    data={finalData}\n                    keys={keys}\n                    indexBy={indexBy}\n                    margin={{ top: 5, right: 50, bottom: 60, left: 50 }}\n                    padding={0.3}\n                    groupMode=\"grouped\"\n                    layout={layout}\n                    valueFormat={(value) => layout === 'horizontal'\n                        ? `${Math.abs(value)}`\n                        : value}\n                    colors={bars.map(x => x.color)}\n                    axisBottom={{\n                        tickSize: 0,\n                        tickRotation: -45,\n                    }}\n                    axisLeft={{\n                        tickSize: 0,\n                    }}\n                    enableLabel={false}\n                    animate={false}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Bar","const { path, prop } = require('ramda');\n\nconst getNameList = (data, key) => {\n    const scoredData = data\n        .reduce((acc, userData) => {\n            const author = userData.author\n            const keyData = userData[key] || {}\n            const given = Object.values(keyData).reduce((acc, current) => acc + current, 0)\n\n            return Object.assign(acc, { [author]: given })\n        }, {})\n\n    const sortedValues = Object.entries(scoredData)\n        .sort(([, a], [, b]) => b - a)\n\n    const total = sortedValues\n        .reduce((acc, [, value]) => value + acc, 0)\n\n\n    const percentageOfTotal = (value) => {\n        const percentPerUnit = 100 / total\n        const percentOf = value * percentPerUnit\n\n        return percentOf\n    }\n\n    const { showNames } = sortedValues\n        .reduce((\n            { accPercent = 0, showNames = [] },\n            [author, value],\n        ) => {\n            const itemPercent = percentageOfTotal(value, author, accPercent)\n            const newAccPercent = accPercent + itemPercent\n\n            return {\n                accPercent: newAccPercent,\n                showNames: value > 0 && itemPercent > 5\n                    ? [\n                        ...showNames,\n                        author,\n                    ]\n                    : showNames,\n            }\n        }, {})\n\n    // We do not want only one user going into the \"Other\" group\n    return showNames.length === data.length - 1\n        ? sortedValues.map(([x]) => x)\n        : showNames\n}\n\nconst getMatrix = (data, key, showNames, otherAppened) => {\n    const otherTotal = (ignoreNames, data = {}) => Object.entries(data)\n        .reduce((acc, [name, value]) => ignoreNames.some(x => x === name)\n            ? acc\n            : acc + value, 0)\n\n    const martixRow = (item) => [\n        ...showNames.map(x => path([key, x], item) || 0),\n        ...(\n            otherAppened\n                ? [otherTotal(showNames, prop(key, item))]\n                : []\n        ),\n    ]\n\n    const matrixRowsForNamed = showNames\n        .map((name) => {\n            const nameData = data.find(x => x.author === name)\n            return martixRow(nameData)\n        })\n\n    const matrixRowForOther = data\n        .filter(({ author }) => !showNames.some(x => x === author))\n        .reduce((acc, item) => {\n            const currentMatrix = martixRow(item)\n\n            const mergedMatrix = currentMatrix\n                .map((value, i) => value + (acc[i] || 0))\n\n            // Matrix other row can not have data to self logged, must be 0\n            return [\n                ...mergedMatrix.slice(0, mergedMatrix.length - 1),\n                0,\n            ]\n        }, [])\n\n    return [\n        ...matrixRowsForNamed,\n        ...(\n            matrixRowForOther.length\n                ? [matrixRowForOther]\n                : []\n        ),\n    ]\n}\n\nconst formatChordData = (data, key) => {\n    const showNames = getNameList(data, key)\n    const otherAppened = showNames.length < data.length\n\n    const matrix = getMatrix(data, key, showNames, otherAppened)\n\n    const names = [\n        ...showNames,\n        ...(\n            otherAppened\n                ? ['Others']\n                : []\n        ),\n    ]\n\n    return {\n        names,\n        matrix,\n    }\n}\n\nexport default formatChordData\n","import React from 'react'\nimport { ResponsiveChord as NivoChord } from '@nivo/chord'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport formatChordData from '../../format/chordData'\nimport styledCharts from './styledCharts'\nimport colors from '../colors'\n\nconst Chord = styledCharts(({\n    title,\n    data = [],\n    dataKey = '',\n    classes,\n} = {}) => {\n    const theme = useTheme();\n    const {\n        names,\n        matrix,\n    } = formatChordData(data, dataKey)\n\n    const hasMatrixData = (matrix) => matrix\n        .some(row => row\n            .some(Boolean)\n        )\n\n    return hasMatrixData(matrix) && (\n        <div>\n            <ChartHeading text={title} className={classes.centerHeading} />\n            <div className={classes.chordWrap}>\n                <NivoChord\n                    label=\"id\"\n                    data={matrix}\n                    keys={names}\n                    margin={{ top: 0, right: 10, bottom: 10, left: 10 }}\n                    arcBorderColor={{ from: 'color', modifiers: [['darker', 0.4]] }}\n                    ribbonOpacity={0.5}\n                    ribbonBorderWidth={0.5}\n                    ribbonBorderColor={{ from: 'color', modifiers: [['darker', 0.4]] }}\n                    innerRadiusRatio={0.85}\n                    labelRotation={0}\n                    padAngle={0.06}\n                    innerRadiusOffset={0.03}\n                    labelOffset={-23}\n                    labelTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\n                    colors={colors}\n                    isInteractive={true}\n                    arcHoverOpacity={1}\n                    arcHoverOthersOpacity={0.25}\n                    ribbonHoverOpacity={0.75}\n                    ribbonHoverOthersOpacity={0.25}\n                    animate={false}\n                    motionStiffness={90}\n                    motionDamping={7}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Chord","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { P } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport Bar from '../charts/Bar'\nimport Chord from '../charts/Chord'\n\nconst TeamTrends = ({\n    usersData = [],\n    userIds = [],\n    classes,\n} = {}) => {\n    const maxAuthors = userIds.length || 7\n    return (\n        <Paper>\n            <ChartDescription\n                title=\"Contribution distribution\"\n            />\n\n            {\n                usersData.length > 0\n                    && (\n                        <>\n                            <div className={classes.groupedCharts}>\n                                <P>These chord charts show how contributions are given and received, the dominant colours indicate the higher contributions</P>\n                                <Chord data={usersData} dataKey=\"commentsByUser\" title=\"Comment contributions\" />\n                                <Chord data={usersData} dataKey=\"approvalsByUser\" title=\"Approval contributions\" />\n                            </div>\n                            <Bar\n                                data={usersData}\n                                indexBy=\"author\"\n                                titlePrefix=\"Comments\"\n                                sortBy=\"commentsGiven\"\n                                max={maxAuthors}\n                                bars={[\n                                    {\n                                        dataKey: 'commentsGiven',\n                                        color: '#1f77b4',\n                                        label: 'given*',\n                                    },\n                                    {\n                                        dataKey: 'commentsReceived',\n                                        color: '#e82573',\n                                        label: 'received',\n                                    },\n                                ]}\n                            />\n                            <Bar\n                                data={usersData}\n                                indexBy=\"author\"\n                                titlePrefix=\"PRs\"\n                                sortBy=\"uniquePRsApproved\"\n                                max={maxAuthors}\n                                bars={[\n                                    {\n                                        dataKey: 'uniquePRsApproved',\n                                        color: '#1f77b4',\n                                        label: 'approved*',\n                                    },\n                                    {\n                                        dataKey: 'totalPRs',\n                                        color: '#e82573',\n                                        label: 'opened',\n                                    },\n                                ]}\n                            />\n                            <P>*Given comments and approvals are taken from the PRs in the dataset, i.e. not all comments/approvals that user has many given over the same time period.</P>\n                        </>\n                    )\n            }\n        </Paper>\n    )\n}\n\nconst styles = theme => ({\n    groupedCharts: {\n        ...theme.palette.groupedCharts,\n        '& p': {\n            flexBasis: '100%',\n            textAlign: 'center',\n        },\n    },\n})\n\nconst mapStateToProps = (state) => ({\n    usersData: state.usersData,\n    userIds: state.fetches.userIds,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(TeamTrends))\n","import React from 'react'\nimport { Radar as NivoRadar } from '@nivo/radar'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\nimport hasChartData from './hasChartData'\n\nconst radarSliceTooltip = fullData => ({ index, data }) => {\n    const matched = fullData.find(x => x.area === index);\n    const rows = data.map(({ id, color }) => [\n        <Chip key={id} color={color} />,\n        id,\n        matched[`${id}Original`],\n    ])\n\n    return <TableTooltip title={<strong>{index}</strong>} rows={rows} />\n}\n\nconst Radar = styledCharts(({\n    title = '',\n    titleItems = [],\n    data = [],\n    keys = [],\n    width = 410,\n    height = 300,\n    classes,\n} = {}) => {\n    const theme = useTheme();\n\n    return hasChartData(data)(keys) && (\n        <div>\n            <ChartHeading className={classes.centerHeading} items={\n                titleItems.length\n                    ? titleItems\n                    : [{ label: title }]\n            } />\n            <NivoRadar\n                width={width}\n                height={height}\n                margin={{ top: 0, bottom: 0, right: 100, left: 100 }}\n                dotSize={8}\n                dotBorderColor={theme.charts.dotColor}\n                dotBorderWidth={2}\n                colors={['#1f77b4', '#e82573']}\n                gridShape=\"linear\"\n                enableDotLabel={false}\n                gridLabelOffset={10}\n                gridLevels={3}\n                animate={false}\n                indexBy='area'\n                keys={keys}\n                data={data}\n                maxValue={100}\n                theme={theme.charts}\n                gridAngleStep={200}\n                angleStep={200}\n                sliceTooltip={radarSliceTooltip(data)}\n            />\n        </div>\n    )\n})\n\nexport default Radar","const formatRadarData = (userData, filterAuthor) => {\n\n    const defaultValues = {\n        age: 0,\n        approvalsGiven: 0,\n        approvalsReceived: 0,\n        codeCommentsGiven: 0,\n        codeCommentsReceived: 0,\n        commentsGiven: 0,\n        commentsReceived: 0,\n        generalCommentsGiven: 0,\n        generalCommentsReceived: 0,\n        prSize: 0,\n        totalPRs: 0,\n        uniquePRsApproved: 0,\n        uniquePRsContributedTo: 0,\n    }\n\n    const filteredContributors = userData\n        .filter(x => filterAuthor\n            ? x.author !== filterAuthor\n            : true)\n        .filter(({\n            commentsGiven,\n            commentsReceived,\n            approvalsGiven,\n            approvalsReceived,\n        }) => [\n            commentsGiven,\n            commentsReceived,\n            approvalsGiven,\n            approvalsReceived,\n        ].some(x => x > 1))\n\n    const keys = [\n        'commentsGiven',\n        'commentsReceived',\n        'approvalsGiven',\n        'approvalsReceived',\n    ]\n\n    const sortedUsers = filteredContributors\n        .sort((a, b) => {\n            const aTotal = keys\n                .reduce((acc, key) => acc + (a[key] || 0), 0)\n\n            const bTotal = keys\n                .reduce((acc, key) => acc + (b[key] || 0), 0)\n            return bTotal - aTotal\n        })\n\n    const p10 = Math.ceil(sortedUsers.length / 100 * 10)\n    const topUsers = p10 > 10\n        ? sortedUsers.slice(0, p10)\n        : sortedUsers\n\n    const totalled = topUsers\n        .filter(x => !filterAuthor || x.author !== filterAuthor)\n        .reduce((total, user) => {\n            const addedUser = Object.entries(user)\n                .filter(([, value]) => !Array.isArray(value) && /^\\d+$/.test(value) && value > 0)\n                .reduce((combinedData, [key, value]) => Object.assign(combinedData, { [key]: value + (total[key] || 0) }), {})\n\n            return Object.assign(total, addedUser)\n        }, {})\n\n    const userCount = topUsers.length\n    const averagedData = Object.entries(totalled)\n        .reduce((acc, [key, value], i) =>\n            Object.assign(\n                acc, { [key]: Math.round(value / userCount) }\n            ), { ...defaultValues, user: 'Peers', userCount }\n        )\n\n    const usersData = userData\n        .find(x => x.author === filterAuthor) || { approvalsGivenByTeam: {} }\n\n    const maxValues = userData\n        .reduce((parentAcc, user) => {\n            const withNumberValue = Object.entries(user)\n                .filter(([, value]) => !Array.isArray(value) && /^\\d+$/.test(value))\n\n            const upDateMaxValues = withNumberValue\n                .reduce((acc, [key, value]) => {\n                    const accVaue = parentAcc[key] || 0\n\n                    return Object.assign(acc, { [key]: accVaue > value ? accVaue : value })\n                }, {})\n\n            return Object.assign(parentAcc, upDateMaxValues)\n        }, defaultValues)\n\n    return {\n        averagedData,\n        maxValues,\n        users: userData,\n        user: filterAuthor\n            ? usersData\n            : {},\n    }\n}\n\nexport default formatRadarData","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { H } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport Radar from '../charts/Radar'\nimport formatRadarData from '../../format/radarData'\n\nconst radialChartsContributions = ({ maxValues = {}, users = [] }, isTeamPage) => {\n    const keys = [\n        'commentsGiven',\n        'commentsReceived',\n        'approvalsGiven',\n        'approvalsReceived',\n    ]\n\n    const topXUsers = isTeamPage\n        ? users\n        : users\n            .sort((a, b) => {\n                const aTotal = keys\n                    .reduce((acc, key) => acc + (a[key] || 0), 0)\n\n                const bTotal = keys\n                    .reduce((acc, key) => acc + (b[key] || 0), 0)\n                return bTotal - aTotal\n            })\n            .slice(0, 6)\n\n    const items = [\n        {\n            area: 'Code comments',\n            given: 'codeCommentsGiven',\n            received: 'codeCommentsReceived',\n        },\n        {\n            area: 'PR comments',\n            given: 'generalCommentsGiven',\n            received: 'generalCommentsReceived',\n        },\n        {\n            area: 'Approvals',\n            given: 'approvalsGiven',\n            received: 'approvalsReceived',\n        },\n    ]\n\n    const radarData = topXUsers\n        .map(user => {\n            const data = items\n                .map(({ area, given, received}) => {\n                    const givenOriginal = user[given] || 0\n                    const receivedOriginal = user[received] || 0\n\n                    return {\n                        area,\n                        given: givenOriginal\n                            ? (givenOriginal / (maxValues[given] || 0)) * 100\n                            : 0,\n                        received: receivedOriginal\n                            ? (receivedOriginal / (maxValues[received] || 0)) * 100\n                            : 0,\n                        givenOriginal,\n                        receivedOriginal,\n                    }\n                })\n\n            return {\n                title: user.author,\n                data,\n                keys: ['given', 'received'],\n            }\n        })\n\n    return radarData\n}\n\nconst UserTrends = ({\n    usersData = [],\n    userIds = [],\n} = {}) => {\n    const radarData = formatRadarData(usersData)\n    // const prRadars = radialChartsPRs(radarData)\n    const contributionsRadar = radialChartsContributions(radarData, userIds.length > 0)\n\n    return (\n        <Paper>\n            <ChartDescription\n                title={(\n                    <>\n                        <H level={2}>User's contributions</H>\n                        <H level={3}>Comments and approvals, <span style={{ color: '#1f77b4' }}>given</span> and <span style={{ color:'#e82573'}}>received</span></H>\n                    </>\n                )}\n                intro=\"This section shows how given and received metrics compare for the top contributors.\"\n            >\n            </ChartDescription>\n            {\n                contributionsRadar.length > 0\n                    && contributionsRadar\n                        .map((info, i) => <Radar key={i} {...info} />)\n            }\n        </Paper>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    usersData: state.usersData,\n    userIds: state.fetches.userIds,\n})\n\nexport default connect(mapStateToProps)(UserTrends)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Paper from '../shared/Paper'\nimport Button from '../shared/Button'\nimport { H } from '../shared/StyledTags'\n\n\nimport { setUser as setUserAction } from '../../state/actions'\n\nconst UserList = ({\n    usersData = [],\n    setUser,\n    classes,\n} = {}) => <>\n    <Paper className=\"justify\">\n        <H level={2} className={classes.fullW}>\n            User pages\n        </H>\n        <div className={classes.allButons}>\n            {\n                usersData\n                    .map(({ author }, i) => (\n                        <Button\n                            value={author}\n                            key={i}\n                            color=\"secondary\"\n                            onClick={(e) => {\n                                e.preventDefault()\n                                setUser(e.currentTarget.value)\n                                window && window.scrollTo(0, 0)\n                            }}\n                        />\n                    ))\n            }\n        </div>\n    </Paper>\n</>\n\nconst mapDispatchToProps = dispatch => ({\n    setUser: (x) => dispatch(setUserAction(x)),\n})\n\nconst styles = theme => ({\n    'allButons': {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n        '& button': {\n            flexGrow: 1\n        }\n    },\n    'fullW': {\n        width: '100%',\n    },\n})\n\nconst mapStateToProps = (state) => ({\n    usersData: state.usersData,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UserList))","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\nimport { always, cond, T, propSatisfies, where } from 'ramda'\n\nimport { H, P } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport FormSection from '../home/DataOptions/FormSection'\n\nconst RepoOrgCopy = ({ repo, org } = {}) => org === repo\n    ? (<span style={{ color: '#e82573' }}>{repo}</span>)\n    : (\n        <>\n            <span style={{ color: '#1f77b4' }}>{org}</span>/<span style={{ color: '#e82573' }}>{repo}</span>\n        </>\n    )\n\nconst TeamName = ({ teamName }) => <span style={{ color: '#e82573' }}>{teamName}</span>\n\nconst titleCopy = cond([\n    [\n        where({\n            org: Boolean,\n            repo: Boolean,\n        }),\n        RepoOrgCopy,\n    ],\n    [\n        propSatisfies(Boolean,'teamName'),\n        TeamName,\n    ],\n    [\n        T,\n        always('Report'),\n    ],\n])\n\nconst ReportDescription = ({\n    fetches = {},\n    pullRequests = [],\n    issues = [],\n    releases = [],\n    userIds = [],\n    classes\n} = {}) => {\n    const releaseCount = releases.length\n\n    const reportType = userIds.length > 0\n        ? 'team'\n        : 'repo'\n\n    return <Paper className={classes.root}>\n            <H className={classes.heading} level={2}>\n                {\n                    titleCopy(fetches)\n                }\n            </H>\n            {\n                userIds.length > 0\n                    && <P>\n                        {\n                            userIds.join(', ')\n                        }\n                    </P>\n            }\n            {\n                // TODO: get start and end date info\n            }\n            <P>Pull requests: {pullRequests.length}, Issues: {issues.length}{ releaseCount > 0 && `, Releases: ${releaseCount}`}</P>\n            <ChartDescription\n                className={`${classes.formDescription} ${classes.fullRow}`}\n                title=\"\"\n                expandText=\"here\"\n                intro=\"Top up this report's data\"\n            >\n                {\n                    reportType === 'team'\n                        ? <FormSection reportType=\"team\" preFetchedReport={true}/>\n                        : <FormSection reportType=\"repo\" preFetchedReport={true} />\n                }\n            </ChartDescription>\n        </Paper>\n}\n\nconst mapStateToProps = (state) => ({\n    fetches: state.fetches,\n    pullRequests: state.pullRequests,\n    issues: state.issues,\n    releases: state.releases,\n    userIds: state.fetches.userIds,\n})\n\nconst styles = theme => ({\n    root: {\n        display: 'block'\n    },\n    heading: theme.copy.h1,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(ReportDescription))\n","import React from 'react'\n\nimport PullRequestTrends from './sections/PullRequestTrends'\nimport IssuesTrends from './sections/IssuesTrends'\nimport TeamTrends from './sections/TeamTrends'\nimport UserTrends from './sections/UserTrends'\nimport UserList from './sections/UserList'\nimport ReportDescription from './sections/ReportDescription'\n\nconst RepoView = () => <>\n    <ReportDescription />\n    <TeamTrends />\n    <PullRequestTrends />\n    <IssuesTrends />\n    <UserTrends />\n    <UserList />\n</>\n\nexport default RepoView\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { H, P, UL, LI } from './shared/StyledTags'\nimport ChartDescription from './shared/ChartDescription'\nimport Button from './shared/Button'\nimport Paper from './shared/Paper'\nimport { clearUser } from '../state/actions'\nimport formatRadarData from '../format/radarData'\nimport Radar from './charts/Radar'\nimport Bar from './charts/Bar'\nimport Line from './charts/Line'\n\nconst colourA = '#1f77b4'\nconst colourB = '#e82573'\n\nconst userRadars = (\n    {\n        averagedData,\n        maxValues,\n        user,\n    },\n    userName\n) => {\n    const items = [\n        {\n            area: 'Code comments',\n            dataKey: 'codeCommentsGiven',\n        },\n        {\n            area: 'PR comments',\n            dataKey: 'generalCommentsGiven',\n        },\n        {\n            area: 'Approvals',\n            dataKey: 'approvalsGiven',\n        },\n        {\n            area: 'Merged PRs',\n            dataKey: 'totalPRs',\n        },\n        {\n            area: 'PR size',\n            dataKey: 'prSize',\n        },\n    ]\n\n    const getRadarData = items => items\n        .map(({ area, dataKey }) => {\n            const originalUser = user[dataKey] || 0\n            const peersOriginal = averagedData[dataKey] || 0\n            const maxValue = maxValues[dataKey] || 0\n\n            return {\n                area,\n                [userName]: (originalUser / maxValue) * 100,\n                peers: (peersOriginal / maxValue) * 100,\n                [`${userName}Original`]: originalUser,\n                peersOriginal,\n            }\n        })\n\n    const radars = [\n        {\n            data: getRadarData(items),\n            titleItems: [\n                { label: userName, color: colourA },\n                { label: 'Peers', color: colourB },\n            ],\n            keys: [userName, 'peers'],\n            width: 400,\n            height: 235,\n        },\n    ]\n\n    return radars\n}\n\nconst userBars = ({\n    averagedData,\n    user,\n}) => {\n    const averageAndUserData = [user, averagedData]\n\n    return [\n        {\n            bars:[\n                {\n                    dataKey: 'commentsGiven',\n                    color: colourA,\n                    label: 'Comments given',\n                },\n                {\n                    dataKey: 'commentsReceived',\n                    color: colourB,\n                    label: 'Comments received',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'approvalsGiven',\n                    color: colourA,\n                    label: 'Approvals given',\n                },\n                {\n                    dataKey: 'approvalsReceived',\n                    color: colourB,\n                    label: 'Approvals received',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'totalPRs',\n                    color: colourA,\n                    label: 'Opened PRs',\n                },\n                {\n                    dataKey: 'uniquePRsApproved',\n                    color: colourB,\n                    label: 'PRs approved',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'prSize',\n                    color: colourA,\n                    label: 'PR size',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'age',\n                    color: colourB,\n                    label: 'PR age',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n    ]\n}\n\nconst userGraphs = (data = [], releases = [], userName) => {\n    const mergedPrData = data\n        .filter(({ mergedAt } = {}) => mergedAt)\n\n    const peerPrData = mergedPrData\n        .filter(({ author }) => author !== userName)\n\n    const userPrData = mergedPrData\n        .filter(({ author }) => author === userName)\n\n    return [\n        {\n            markers: releases,\n            showLegends: true,\n            title: 'Sentiments in PR',\n            data: [{\n                lines: [\n                    {\n                        label: `${userName} received`,\n                        color: colourA,\n                        dataKey: 'commentSentimentScore',\n                        data: userPrData,\n                    },\n                    {\n                        label: `${userName} given`,\n                        color: colourB,\n                        dataKey: 'commentAuthorSentimentScore',\n                        data: userPrData,\n                    },\n                    {\n                        label: 'Peer received',\n                        color: colourA,\n                        dataKey: 'commentSentimentScore',\n                        data: peerPrData,\n                    },\n                    {\n                        label: 'Peer given',\n                        color: colourB,\n                        dataKey: 'commentAuthorSentimentScore',\n                        data: peerPrData,\n                    },\n                ],\n                xAxis: 'left',\n            }],\n        },\n        {\n            markers: releases,\n            data: [{\n                lines: [\n                    {\n                        label: 'User comments',\n                        color: colourA,\n                        dataKey: 'commentsGiven',\n                        data: userPrData,\n                    },\n                    {\n                        label: 'Peer Comments',\n                        color: colourB,\n                        dataKey: 'commentsGiven',\n                        data: peerPrData,\n                    },\n                ],\n                xAxis: 'left',\n            }],\n        },\n        {\n            markers: releases,\n            data: [{\n                lines: [\n                    {\n                        label: 'User PR size',\n                        color: colourA,\n                        dataKey: 'prSize',\n                        data: userPrData,\n                    },\n                    {\n                        label: 'Peer PR size',\n                        color: colourB,\n                        dataKey: 'prSize',\n                        data: peerPrData,\n                    },\n                ],\n                xAxis: 'left',\n            }],\n        },\n        {\n            markers: releases,\n            data: [{\n                lines: [\n                    {\n                        label: 'User PR age',\n                        color: colourA,\n                        dataKey: 'age',\n                        data: userPrData,\n                    },\n                    {\n                        label: 'Peer PR age',\n                        color: colourB,\n                        dataKey: 'age',\n                        data: peerPrData,\n                    },\n                ],\n                xAxis: 'left',\n            }],\n        },\n    ]\n}\n\nconst UserView = ({\n    pullRequests = [],\n    releases = [],\n    usersData = [],\n    user,\n    removeUser,\n    classes,\n} = {}) => {\n    const radarData = formatRadarData(usersData, user)\n    const radars = userRadars(radarData, user)\n    const bars = userBars(radarData)\n    const graphs = userGraphs(pullRequests, releases, user)\n\n    return (\n        <>\n            <Paper>\n                <ChartDescription\n                    title={\n                        <H level={2}>\n                            <span style={{ color: colourA }}>{user}</span>\n                            <Button\n                                className={classes.topButton}\n                                variant=\"outlined\"\n                                size=\"small\"\n                                value=\"Back to main view\"\n                                color=\"secondary\"\n                                onClick={(e) => {\n                                    e.preventDefault()\n                                    removeUser()\n                                }} />\n                        </H>\n                    }\n                    intro={`A collection of charts showing ${user} and average data from the top ${radarData.averagedData.userCount} peers`}\n                >\n                    <div>\n                        <P>Reminder that context is needed, without it what looks good can be bad and what looks good can be bad</P>\n                        <UL>\n                            <LI>How do the given and received metrics compare?</LI>\n                            <LI>How do Code comments(the how) and PR comments(the what) comaire?</LI>\n                            <LI>How do PR approvals comaire?</LI>\n                            <LI>How do size of PRs comaire?</LI>\n                        </UL>\n                    </div>\n                </ChartDescription>\n\n                {\n                    radars.length\n                        && (\n                            <div className={classes.groupedCharts}>\n                                {\n                                    radars\n                                        .map((info, i) => <Radar key={i} {...info} />)\n                                }\n                            </div>\n                        )\n                }\n                {\n                    bars.length\n                        && bars\n                            .map((info, i) => <Bar key={i} {...info} />)\n                }\n                {\n                    graphs.length\n                        && graphs\n                            .map((info, i) => <Line key={i} {...info} />)\n                }\n\n                <Button\n                    className={classes.fill}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value=\"Back to main view\"\n                    color=\"secondary\"\n                    onClick={(e) => {\n                        e.preventDefault()\n                        removeUser()\n                        window && window.scrollTo(0, 0)\n                    }} />\n            </Paper>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    releases: state.releases,\n    usersData: state.usersData,\n    user: state.user,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    removeUser: (x) => dispatch(clearUser(x)),\n})\n\nconst styles = theme => ({\n    'groupedCharts': {\n        width: '100%',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n    },\n    fill: {\n        flexBasis: '100%',\n    },\n    topButton: {\n        marginLeft: theme.mySpacing.y.large,\n    },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UserView))","import React from 'react'\nimport { ResponsivePie } from '@nivo/pie'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\n\nconst Pie = styledCharts(({\n    title,\n    data = [],\n    classes,\n} = {}) => {\n    const theme = useTheme();\n\n    return data.length && (\n        <div className={classes.lineChartComponentWrap}>\n            <div className={classes.headingWrap}>\n                <ChartHeading type='line' text={title} />\n            </div>\n\n            <div className={classes.pieWrap}>\n                <ResponsivePie\n                    data={data}\n                    colors={{ datum: 'data.color' }}\n                    margin={{ top: 5, right: 80, bottom: 5, left: 80 }}\n                    animate={false}\n                    innerRadius={0.65}\n                    padAngle={1}\n                    cornerRadius={4}\n                    activeOuterRadiusOffset={5}\n                    borderWidth={1}\n                    startAngle={-90}\n                    endAngle={90}\n                    enableArcLabels={false}\n                    arcLinkLabelsSkipAngle={4}\n                    arcLinkLabelsThickness={2}\n                    arcLinkLabelsColor={{ from: 'color' }}\n                    arcLabelsSkipAngle={10}\n                    arcLinkLabelsDiagonalLength={10}\n                    arcLinkLabelsStraightLength={15}\n                    arcLinkLabelsTextColor={theme.palette.text.primary}\n                    // legends={legends}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Pie","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport ChartDescription from '../shared/ChartDescription'\nimport Line from '../charts/Line'\nimport Pie from '../charts/Pie'\nimport Paper from '../shared/Paper'\nimport colors from '../colors'\n\nconst RepoSplit = ({\n    pullRequests = [],\n} = {}) => {\n    const allRepos = {}\n    const sentPRData = pullRequests.map(prData => {\n        allRepos[prData.repo] =  (allRepos[prData.repo] || 0) + 1\n        return ({\n            ...prData,\n            [`repo-${prData.repo}`]: 1,\n        })\n    })\n    const uniqueRepos = Object.keys(allRepos)\n\n    const pieData = Object.entries(allRepos)\n        .sort(([,a],[,b]) => a - b)\n        .map(([repo, value], i) => ({\n            id: repo,\n            label: repo,\n            color: colors[i % colors.length],\n            value: value,\n        }))\n\n    return (<>\n        <Paper>\n            <ChartDescription title={`PRs split by repository (${pieData.length} repos)`} />\n            <Pie\n                data={pieData}\n                title=\"PR repository rainbow\"\n            />\n            <Line\n                showLegends={true}\n                title=\"Repository PRs over time\"\n                data={[\n                    {\n                        lines: uniqueRepos\n                            .map((repo, i) => ({\n                                label: repo,\n                                color: colors[i % colors.length],\n                                dataKey: `repo-${repo}`,\n                                groupMath: 'count',\n                            })),\n                        xAxis: 'left',\n                        data: sentPRData,\n                    },\n                ]}\n            />\n        </Paper>\n    </>)\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n})\n\nexport default connect(mapStateToProps)(RepoSplit)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Line from '../charts/Line'\nimport Paper from '../shared/Paper'\nimport colors from '../colors'\nimport ChartDescription from '../shared/ChartDescription'\nimport { P } from '../shared/StyledTags'\n\n\nconst Sentiment = ({\n    pullRequests = [],\n    userIds = [],\n    classes = {}\n} = {}) => {\n    const sentPRData = pullRequests.map(prData => ({\n        ...prData,\n        [`${prData.author}-commentsSentimentScore`]: prData.commentSentimentScore,\n        [`${prData.author}-commentAuthorSentimentScore`]: prData.commentAuthorSentimentScore,\n    }))\n\n    return (<>\n        <Paper>\n            <ChartDescription\n                title=\"Sentiment analysis*\"\n            >\n                <div>\n                    <P>*Adding this is an experiment to see if it can provide useful insights.</P>\n                    <P>Uses npm package <a className={classes.link} href=\"https://github.com/thisandagain/sentiment\" alt=\"sentiment github package\">sentiment</a> which uses AFINN-165 word list and Emoji ranking to perform sentiment analysis.</P>\n                    <P>Would like to look into AI sentiment analysis later down the line.</P>\n                </div>\n            </ChartDescription>\n            <Line\n                showLegends={true}\n                title=\"Sentiment in PRs between team and reviewers\"\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'To team',\n                                color: colors[0],\n                                dataKey: 'commentSentimentScore',\n                            },\n                            {\n                                label: 'From team',\n                                color: colors[1],\n                                dataKey: 'commentAuthorSentimentScore',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data: sentPRData,\n                    },\n                ]}\n            />\n            <Line\n                showLegends={true}\n                title=\"Sentiment in PRs between authors and reviewers\"\n                data={[\n                    {\n                        lines: userIds\n                            .map((userId, i) => ([\n                                {\n                                    label: `To ${userId}`,\n                                    color: colors[i % colors.length],\n                                    dataKey: `${userId}-commentsSentimentScore`,\n                                },\n                                {\n                                    label: `From ${userId}`,\n                                    color: colors[i % colors.length],\n                                    dataKey: `${userId}-commentAuthorSentimentScore`,\n                                }\n                            ])).flat(),\n                        xAxis: 'left',\n                        data: sentPRData,\n                    },\n                ]}\n            />\n        </Paper>\n    </>)\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    userIds: state.fetches.userIds,\n})\n\nconst styles = theme => ({\n    link: {\n        color: theme.palette.link,\n    },\n})\nexport default connect(mapStateToProps)(withStyles(styles)(Sentiment))\n","import React from 'react'\n\nimport PullRequestTrends from './sections/PullRequestTrends'\nimport IssuesTrends from './sections/IssuesTrends'\nimport TeamTrends from './sections/TeamTrends'\nimport UserTrends from './sections/UserTrends'\nimport UserList from './sections/UserList'\nimport RepoSplit from './sections/RepoSplit'\nimport Sentiment from './sections/Sentiment'\nimport ReportDescription from './sections/ReportDescription'\n\nconst Team = () => <>\n    <ReportDescription />\n    <TeamTrends />\n    <Sentiment />\n    <RepoSplit />\n    <PullRequestTrends />\n    <IssuesTrends />\n    <UserTrends />\n    <UserList />\n</>\n\nexport default Team\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n    cond,\n    always,\n    propSatisfies,\n    T as alwaysTrue,\n} from 'ramda'\nimport RepoView from '../Repo'\nimport UserView from '../User'\nimport TeamView from '../Team'\n\nconst Visualisation = (props) => (\n    <div>\n        {\n            cond([\n                [propSatisfies(Boolean, 'user'), always(<UserView />)],\n                [propSatisfies(Boolean, 'teamName'), always(<TeamView />)],\n                [alwaysTrue, always(<RepoView />)],\n            ])(props)\n        }\n    </div>\n)\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    teamName: state.fetches.teamName,\n})\n\nexport default connect(mapStateToProps)(Visualisation)","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst CoreWrapper = ({ classes, children }) => <div className={classes.wrapper}>{children}</div>\n\nconst styles = theme => ({\n    '@global': {\n        'body': {\n            margin: 0,\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    wrapper: {\n        padding: 0,\n        backgroundColor: theme.palette.background.default,\n        overflow: 'auto',\n    },\n})\n\nexport default withStyles(styles)(CoreWrapper)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Brightness3 from '@material-ui/icons/Brightness3';\nimport WbSunny from '@material-ui/icons/WbSunny';\n\nimport { toggleTheme } from '../../state/actions'\n\nconst Links = ({ classes, themeType, themeToggle }) => {\n    return (\n        <div className={classes.wrapper} >\n            <a alt=\"My Twitter page\" className={classes.link} href=\"https://twitter.com/chris_07734\">\n                <TwitterIcon className={classes.icon} />\n            </a>\n            <a alt=\"Github repo page\" className={classes.link} href=\"https://github.com/n07734/community-health\">\n                <GitHubIcon className={classes.icon} />\n            </a>\n            <a\n                href=\"#theme\"\n                alt=\"Change theme\"\n                onClick={(e) => {\n                    e.preventDefault()\n                    themeToggle()\n                }}\n                className={themeType}\n            >\n                <WbSunny className={`${classes.icon} sun`} />\n                <Brightness3 className={`${classes.icon} moon`} />\n            </a>\n        </div>\n    );\n};\n\nconst styles = theme => ({\n    wrapper: {\n        position: 'absolute',\n        top: theme.mySpacing.x.small,\n        right: theme.mySpacing.x.small,\n        '& > a': {\n            marginLeft: theme.mySpacing.x.small\n        },\n        '& a:hover $icon': {\n            color: theme.palette.iconHover\n        },\n        '& .dark .moon': {\n            display: 'none'\n        },\n        '& .dark:hover .moon': {\n            display: 'inline'\n        },\n        '& .dark:hover .sun': {\n            display: 'none'\n        },\n        '& .light .sun': {\n            display: 'none'\n        },\n        '& .light:hover .sun': {\n            display: 'inline'\n        },\n        '& .light:hover .moon': {\n            display: 'none'\n        },\n    },\n    icon: {\n        color: theme.palette.text.primary,\n    }\n})\n\nconst mapStateToProps = (state) => ({\n    themeType: state.themeType,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    themeToggle: (x) => dispatch(toggleTheme(x)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Links))\n","import React from 'react'\n\nimport { H, P } from '../shared/StyledTags'\nimport ChartDescription from '../shared/ChartDescription'\nimport Paper from '../shared/Paper'\nimport DataOptions from './DataOptions'\nimport Visualisation from './Visualisation'\nimport PageWrapper from './PageWrapper'\nimport Links from './Links'\n\nconst Page = () => (\n    <PageWrapper>\n        <Paper className=\"bg-none\">\n            <Links />\n            <ChartDescription\n                title={(\n                    <H level={1}>Code Community Health</H>\n                )}\n                intro=\"The aim of this tool is to help teams learn from their contribution trends. Also to see the contribution trends of popular repositories*\"\n            >\n                <div>\n                    <P>This tool is not a 'lines of code' like metric, it contains in depth contribution based metrics meant to help teams find good and bad trends. Also helps show if changes to ways of working have an impact on important metrics over time. Understanding of the team's way of working is needed to get the full value from this data.</P>\n                    <P>Context is king, data that looks 'good' might be 'bad' and data that looks 'bad' might be 'good'. For example little feedback in PRs may be expected if the team is doing small changes in an established code base or not getting enough feedback working on a greenfield project.</P>\n                    <P>The sections below have some pointers to look out for, these are meant as guides as team context is needed to know what the data is truly showing.</P>\n                    <P>* If you contribute to any of the open source repositories it would be great if you could open a pull request to describe what software delivery life cycle is and maybe what learnings that were made to get there. This could help others see how it impacts contributions and maybe adopt some of the practices.</P>\n                </div>\n            </ChartDescription>\n        </Paper>\n        <>\n            <DataOptions />\n            <Visualisation />\n        </>\n    </PageWrapper>\n)\n\nexport default Page\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport { H, P } from './shared/StyledTags'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport {\n    always,\n    cond,\n    equals,\n    T as alwaysTrue\n} from 'ramda'\n\nconst styles = theme => ({\n    'root': {\n        position: 'relative',\n    },\n    'modal': {\n        position: 'fixed',\n        width: '80%',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        zIndex: 1000,\n        backgroundColor: theme.palette.background.paper,\n        padding: `${theme.mySpacing.x.large} ${theme.mySpacing.y.large}`,\n        '& .MuiLinearProgress-dashed': {\n            background: 'none',\n            backgroundColor: '#b10e4f',\n            animation: 'none',\n        },\n        '& .MuiLinearProgress-root': {\n            height: '14px',\n            marginBottom: theme.mySpacing.y.large,\n        }\n    },\n    'overlay': {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 999,\n        backgroundColor: '#b10e4f',\n        animation: 'pulse 1s infinite alternate',\n        opacity: 0.6,\n    },\n    '@keyframes pulse': {\n        '100%': {\n            opacity: 0.9,\n        },\n    }\n})\n\nconst daysRemainingText = cond([\n    [equals(1), x => `${x} day remaining`],\n    [x => x > 1 , x => `${x} days remaining`],\n    [x => x < 0 , always('Wrapping up')],\n    [alwaysTrue, always('')],\n])\n\nconst Loader = ({\n    fetches = {},\n    fetching = false,\n    fetchStatus = {},\n    pullRequests: pastPRs = [],\n    formUntilDate = '',\n    classes = {},\n} = {}) => {\n    const {\n        userIds = [],\n        sortDirection = '',\n    } = fetches\n\n    const {\n        user = '',\n        prCount = 0,\n        latestPrDate = '',\n        issueCount = 0,\n        releaseCount = 0,\n    } = fetchStatus\n\n    const isTeamSearch = userIds.length > 0\n\n    const dayDiff = (a,b) => sortDirection === 'DESC'\n        ? differenceInDays(a, b)\n        : differenceInDays(b, a)\n\n    const startDate = pastPRs.length > 0\n        ? new Date(pastPRs.at(0).mergedAt)\n        : new Date()\n\n    const uptoDate = latestPrDate\n        ? new Date(latestPrDate)\n        : startDate\n\n    const untilDate = new Date(formUntilDate)\n\n    const daysTotal = dayDiff(startDate, untilDate)\n    const daysLoaded = dayDiff(startDate, uptoDate)\n    const daysRemaining = daysTotal - daysLoaded\n    const oneDayPercent = 100 / (daysTotal || 10)\n    const loadedPercent = (daysLoaded * oneDayPercent)\n\n    const usersPosition = user\n        ? userIds.findIndex(x => x === user)\n        : 0\n\n    const loadedUsers = usersPosition > 0\n        ? userIds.slice(0, usersPosition)\n        : []\n\n    const oneUserPercent = 100 / (userIds.length || 10)\n    const loadedUserPercent = (usersPosition * oneUserPercent)\n\n    return (\n        fetching && <div>\n            <div className={ classes.overlay }></div>\n            <div className={ classes.modal }>\n                {\n                    isTeamSearch\n                        && <>\n                            <H level={2}>\n                                Loading {usersPosition + 1} of {userIds.length} {userIds.length === 1 ? 'user' : 'users'}\n                            </H>\n                            <LinearProgress className={classes.dashed} variant=\"determinate\" value={loadedUserPercent} valueBuffer={oneUserPercent + loadedUserPercent}/>\n                        </>\n                }\n                <H level={2}>\n                    {daysRemainingText(daysRemaining)}\n                </H>\n                <LinearProgress className={classes.dashed} variant=\"determinate\" value={loadedPercent} valueBuffer={oneDayPercent + loadedPercent}/>\n\n                {\n                    !isTeamSearch\n                        && <>\n                            <H level={2}>\n                                {prCount} Pull Requests\n                            </H>\n                            <H level={2}>\n                                {issueCount} Issues\n                            </H>\n                            <H level={2}>\n                                {releaseCount} Releases\n                            </H>\n                        </>\n                }\n                {\n                    isTeamSearch\n                        && loadedUsers.length > 0\n                        && <>\n                            <P>\n                                Loaded users: {loadedUsers.join(', ')}\n                            </P>\n                        </>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    fetches: state.fetches,\n    fetching: state.fetching,\n    fetchStatus: state.fetchStatus,\n    pullRequests: state.pullRequests,\n    formUntilDate: state.formUntilDate,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(Loader))\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport { pathOr } from 'ramda'\n\nimport theme from './theme'\nimport Page from './components/home/Page'\nimport Loader from './components/Loader'\n\nimport * as actions from './state/actions'\n\nconst App = ({ getPreFetchedData, themeType, setUser } = {}) => {\n    useEffect(() => {\n        const quertString = pathOr('', ['location', 'search'],window)\n        const urlParams = new URLSearchParams(quertString);\n        const repo = urlParams.get('repo') || 'svelte';\n        const user = urlParams.get('user') || '';\n\n        getPreFetchedData(repo)\n        setUser(user)\n    }, [getPreFetchedData, setUser])\n\n    return (\n        <MuiThemeProvider theme={theme(themeType)}>\n            <Loader />\n            <Page />\n        </MuiThemeProvider>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    themeType: state.themeType,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getPreFetchedData: (x) => dispatch(actions.getPreFetchedData(x)),\n    setUser: (x) => dispatch(actions.setUser(x)),\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App)\n","import { combineReducers } from 'redux'\nimport types from './types'\n\nconst reducers = combineReducers({\n    user: (user = '', action) => {\n        const newValue = ({\n            [types.SET_USER]: () => action.payload,\n            [types.CLEAR_USER]: () => '',\n        })[action.type]\n\n        return newValue\n            ? newValue()\n            : user\n    },\n    fetches: combineReducers({\n        token: (token = '', action) => (action.type === types.STORE_TOKEN)\n            ? action.payload\n            : token,\n        org: (org = '', action) => {\n            const newValue = ({\n                [types.STORE_ORG]: () => action.payload,\n                [types.CLEAR_ORG]: () => '',\n            })[action.type]\n\n            return newValue\n                ? newValue()\n                : org\n        },\n        repo: (repo = '', action) => {\n            const newValue = ({\n                [types.STORE_REPO]: () => action.payload,\n                [types.CLEAR_REPO]: () => '',\n            })[action.type]\n\n            return newValue\n                ? newValue()\n                : repo\n        },\n        teamName: (teamName = '', action) => {\n            const newValue = ({\n                [types.SET_TEAM_NAME]: () => action.payload,\n                [types.CLEAR_TEAM_NAME]: () => '',\n            })[action.type]\n\n            return newValue\n                ? newValue()\n                : teamName\n        },\n        untilDate: (untilDate = '', action) => (action.type === types.STORE_UNTIL_DATE)\n            ? action.payload\n            : untilDate,\n        amountOfData: (amountOfData = 1, action) => (action.type === types.STORE_AMOUNT)\n            ? action.payload\n            : amountOfData,\n        sortDirection: (sortDirection = 'DESC', action) => (action.type === types.STORE_SORT)\n            ? action.payload\n            : sortDirection,\n        enterpriseAPI: (enterpriseAPI = '', action) => (action.type === types.STORE_ENT_URL)\n            ? action.payload\n            : enterpriseAPI,\n        userIds: (userIds = [], action) => (action.type === types.STORE_USER_IDS)\n            ? action.payload\n            : userIds,\n        excludeIds: (excludeIds = [], action) => (action.type === types.STORE_EX_IDS)\n            ? action.payload\n            : excludeIds,\n        prPagination: (pagination = { hasNextPage: true }, action) => ({\n            [types.SET_PR_PAGINATION]: action.payload,\n            [types.CLEAR_PR_PAGINATION]: { hasNextPage: true },\n        })[action.type] || pagination,\n        releasesPagination: (pagination = { hasNextPage: true }, action) => ({\n            [types.SET_RELEASES_PAGINATION]: action.payload,\n            [types.CLEAR_RELEASES_PAGINATION]: { hasNextPage: true },\n        })[action.type] || pagination,\n        issuesPagination: (pagination = { hasNextPage: true }, action) => ({\n            [types.SET_ISSUES_PAGINATION]: action.payload,\n            [types.CLEAR_ISSUES_PAGINATION]: { hasNextPage: true },\n        })[action.type] || pagination,\n    }),\n    formUntilDate: (formUntilDate = '', action) => (action.type === types.STORE_FORM_UNTIL_DATE)\n        ? action.payload\n        : formUntilDate,\n    fetching: (fetching = false, action) => [\n        action.type === types.FETCH_START\n            && (() => true),\n        action.type === types.FETCH_END\n            && (() => false),\n        () => fetching,\n    ]\n        .find(Boolean)(),\n    fetchStatus: (fetchStatus = {}, action) => action.type === types.FETCH_STATUS\n        ? action.payload\n        : fetchStatus,\n    error: (error = '', action) => {\n        const newValue = ({\n            [types.FETCH_ERROR]: () => action.payload,\n            [types.CLEAR_FETCH_ERROR]: () => '',\n        })[action.type]\n\n        return newValue\n            ? newValue()\n            : error\n    },\n    preFetchedName: (name = '', action) => {\n        const newValue = ({\n            [types.PREFETCHED_NAME]: () => action.payload,\n            [types.CLEAR_PRS]: () => '',\n        })[action.type]\n\n        return newValue\n            ? newValue()\n            : name\n    },\n    pullRequests: (prs = [], action) => [\n        action.type === types.ADD_PRS\n            && action.payload,\n        action.type === types.CLEAR_PRS && [],\n        prs,\n    ].find(Boolean),\n    filteredPRs: (filteredPRs = [], action) => [\n        action.type === types.ADD_FILTERED_PRS\n            && action.payload,\n        action.type === types.CLEAR_FILTERED_PRS && [],\n        filteredPRs,\n    ].find(Boolean),\n    usersData: (users = [], action) => [\n        action.type === types.ADD_USERS_DATA\n            && action.payload,\n        action.type === types.CLEAR_USERS_DATA && [],\n        users,\n    ].find(Boolean),\n    issues: (issues = [], action) => [\n        action.type === types.ADD_ISSUES\n            && issues.concat(action.payload),\n        action.type === types.CLEAR_ISSUES && [],\n        issues,\n    ].find(Boolean),\n    filteredIssues: (filteredIssues = [], action) => [\n        action.type === types.ADD_FILTERED_ISSUES\n            && action.payload,\n        action.type === types.CLEAR_FILTERED_ISSUES && [],\n        filteredIssues,\n    ].find(Boolean),\n    releases: (releases = [], action) => [\n        action.type === types.ADD_RELEASES\n            && releases.concat(action.payload),\n        action.type === types.CLEAR_RELEASES && [],\n        releases,\n    ].find(Boolean),\n    themeType: (themeType = 'dark', action) =>\n        action.type === types.TOGGLE_THEME\n            ? (themeType === 'dark' ? 'light' : 'dark')\n            : themeType,\n})\n\nexport default reducers\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createStore, applyMiddleware, compose } from 'redux'\n\nimport App from './App'\nimport reducers from './state/reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunk)\n))\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}