{"version":3,"sources":["../node_modules/sentiment/languages sync /^/.//.*//index$","prefetchedData sync /^/.//.*/.json$","format/rawData.js","theme.js","components/shared/StyledTags.js","components/shared/ChartDescription.js","components/shared/Paper.js","components/shared/Button.js","components/home/DataOptions/styles.js","api/batch.js","api/queries.js","api/fillers.js","state/types.js","api/api.js","api/getUsersData.js","format/lightenData.js","format/userData.js","state/actions.js","components/home/DataOptions/PrefetchedOptions.js","components/home/Message.js","components/home/DataOptions/RepoData.js","components/home/DataOptions/UsersData.js","components/home/DataOptions/index.js","components/charts/ChartHeading.js","components/charts/styledCharts.js","components/charts/batchBy.js","components/charts/lineHelpers.js","components/charts/Line.js","components/sections/PullRequestTrends.js","components/sections/IssuesTrends.js","components/charts/hasChartData.js","components/charts/Bar.js","format/chordData.js","components/colors.js","components/charts/Chord.js","components/sections/TeamTrends.js","components/charts/Radar.js","format/radarData.js","components/sections/UserTrends.js","components/sections/UserList.js","components/sections/RepoDescription.js","components/Repo.js","components/User.js","components/charts/Pie.js","components/sections/RepoSplit.js","components/sections/Sentiment.js","components/Team.js","components/home/Visualisation.js","components/home/PageWrapper.js","components/home/Links.js","components/home/Page.js","components/Loader.js","App.js","state/reducers.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","paths","themeColor","type","light","dark","themeColorBg","fontFamily","fontSize","defaultCopy","color","marginTop","marginBottom","fontWeight","markerSettings","legendOrientation","legendPosition","height","legendOffsetX","legendOffsetY","spacing","x","tiny","small","medium","large","y","theme","createTheme","palette","secondary","contrastText","main","primary","mainCopy","groupedCharts","width","display","flexWrap","justifyContent","iconHover","text","link","background","default","paper","shadow","switch","typography","useNextVariants","mySpacing","copy","body","lineHeight","list","listItem","h4","h3","h2","h1","charts","textColor","crosshair","line","stroke","axis","legend","fill","ticks","legends","hidden","symbol","opacity","legendsTextFill","dotColor","tooltip","container","boxShadow","grid","markers","lineStyle","strokeWidth","textStyle","tertiary","strokeDasharray","styles","p","P","withStyles","className","classes","children","UL","LI","H","level","styleAs","props","hClassName","Tag","root","flexGrow","alignItems","marginLeft","title","intro","expandText","useState","toggle","setCount","href","onClick","preventDefault","Collapse","in","padding","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","position","flexDirection","classNames","marginRight","key","value","join","variant","size","inputGrid","gridTemplateColumns","columnGap","rowGap","minHeight","gridColumn","fullRow","formDescription","dataPaper","child","margin","preFetched","runBatchQueue","batches","job","resolved","Promise","reject","currentBatch","remainingBatches","all","j","then","results","length","more","concat","catch","batch","argsList","batchSize","splitEvery","cursorQ","cursor","getCursor","order","oldest","newest","pageInfo","comments","pullRequests","pagination","reviews","issues","releases","getPaginationByType","oldFetchInfo","pathOr","hasNextPage","startCursor","endCursor","typeStateMap","oldestDefault","oldestCurrent","newestDefault","newestCurrent","getRemainingPageCount","data","sort","a","b","maxItems","console","log","Math","ceil","userQuery","user","amountOfData","issuesPagination","prPagination","query","resultInfo","byType","updatedAmountOfData","Number","isInteger","nextPageInfo","forEach","values","some","fillerType","hasMoreResults","batchedQuery","org","repo","releasesPagination","reduce","acc","commentsQuery","nodeId","rawData","nextArgs","reviewsQuery","reviewCommentsQuery","fillData","apiCall","fillByType","fillers","pullRequestsComments","pullRequestsReviews","allPullRequestReviewsComments","filler","resolvedFillers","currentItem","applyFillerResult","recursiveFiller","makeQuery","queryInfo","currentResults","currentHasNextPage","newResult","newHasNextPage","updatedData","updateRawData","newData","updatedNode","assign","node","getQueryInfo","getAllReviewComments","review","currentReviewComments","reviewCommentsQueryInfo","allReviewComments","edges","updatedReviewComments","getAllPullRequestReviews","pullRequest","currentReviews","reviewsQueryInfo","allReviews","allPullRequestsReviews","updatedpullRequestsData","updatePullRequests","propOr","result","pullRequestsItems","pullRequestsData","mergedPullRequests","currentPullRequest","item","find","getAllPullRequestComments","currentComments","commentsQueryInfo","allComments","allPullRequestsComments","types","SET_USER","CLEAR_USER","SET_TEAM_NAME","CLEAR_TEAM_NAME","STORE_ORG","STORE_TOKEN","SET_PR_PAGINATION","CLEAR_PR_PAGINATION","SET_RELEASES_PAGINATION","CLEAR_RELEASES_PAGINATION","SET_ISSUES_PAGINATION","CLEAR_ISSUES_PAGINATION","FETCH_STATUS","FETCH_START","FETCH_ERROR","CLEAR_FETCH_ERROR","FETCH_END","STORE_REPOS","STORE_REPO","STORE_AMOUNT","STORE_SORT","STORE_ENT_URL","STORE_EX_IDS","STORE_USER_IDS","ADD_PRS","CLEAR_PRS","ADD_REPO_INFO","CLEAR_REPO_INFO","ADD_ISSUES","CLEAR_ISSUES","ADD_RELEASES","CLEAR_RELEASES","TOGGLE_THEME","PREFETCHED_REPO","ADD_USERS_DATA","CLEAR_USERS_DATA","parseJSON","response","json","status","error","triggeredAbuseRate","message","test","fetchInfo","fetch","enterpriseAPI","method","headers","token","JSON","stringify","shouldGetNextPage","cond","always","alwaysFalse","alwaysTrue","pause","ms","setTimeout","numRateTriggers","pauseThenRetry","apiInfo","api","getTotalItemsByType","total","getCurrentItemsByType","dispatch","payload","page","pagesLoaded","pagesRemaining","pullRequestsTotal","issuesTotal","releasesTotal","apiCallWithToken","fullData","updatedResults","updatedFetchInfo","mergeDeepRight","hasTriggeredAbuse","propEq","compose","getErrorMessage","errorMessage","getUsersData","userIds","allUsersData","finalFetchInfo","users","allResults","prop","pick","push","usersData","flat","formatCommenters","items","path","userCount","formatSentimentsCommenters","author","score","totalScore","mergeCommenters","left","right","leftEntries","entries","rightEntries","mergedObject","newTotal","formatRepoInfo","description","filterByUsers","includes","formatSentiments","sentiment","Sentiment","sentimental","comment","analyze","sentimentScore","sentiments","formatCodeComments","exclude","allCodeComments","filter","getAllCodeComments","codeComments","codeCommenters","codeCommentSentimentScore","codeCommentSentiments","formatGeneralComments","generalComments","generalCommenters","generalCommentSentimentScore","generalCommentSentiments","formatApprovals","ghApprovals","ghApprovers","approvals","approvers","prData","url","additions","deletions","changedFiles","createdAt","mergedAt","prInfo","prSize","age","differenceInDays","Date","commenters","commenterSentiments","commentsSentimentScore","formatPullRequests","none","flatten","formatIssues","closedAt","labels","isBug","formatReleases","tag","releaseType","majorV","major","minorV","minor","patchV","patch","prereleaseV","prerelease","Boolean","getReleaseType","date","slimValue","Array","isArray","slimArray","slimObject","arr","newArray","obj","newObject","newValue","baseUserData","approvalsGiven","approvalsByUser","commentsGiven","commentsReceived","codeCommentsGiven","codeCommentsReceived","generalCommentsGiven","generalCommentsReceived","totalPRs","uniquePRsContributedTo","commentsByUser","updateContributorCount","currentData","objKey","addition","prevData","updated","formatUserData","updateByUsersCount","currentUserData","currentKeyData","updatedKeyData","userData","updatedCommentsByUser","updatedApprovalsByUser","updatedCommentsGiven","updatedCodeCommentsGiven","updatedGeneralCommentsGiven","updatedApprovalsGiven","updatedUniquePRsApproved","Set","prSizes","averagePrSize","round","prAges","averagePrAge","approvalsReceived","uniqueAuthors","newUsersData","sortedUsers","aTotal","setUser","storeToken","storeEnterpriseAPI","getState","currentEnterpriseAPI","fetches","clearData","userIdsFromString","pipe","split","trim","storeAmountOfData","storeSortDirection","sortDirection","updateUsersData","formatApiRepoInfo","state","missing","current","i","prepend","validateRequest","hasArgs","every","isValid","getAPIData","appendData","isValidRequest","preFetchedRepo","excludeIds","prs","repoInfo","getPreFetchedData","repoData","require","fallback","getDownloadProps","reportData","pickAll","dissocPath","assoc","getReportData","blob","Blob","URL","createObjectURL","download","connect","getPreFetchedRepo","borderRadius","backgroundColor","warn","buttonText","fetching","validate","equals","setValues","startingPoint","currentOrg","storeOrg","currentRepo","storeRepo","excludeArray","currentExcludeIds","not","storeExcludeIds","getData","getDownloadInfo","inputError","setInputError","formInfo","setFormInfo","setValue","inputProps","helperText","onBlur","event","onChange","onFocus","onSubmit","getErrorValue","errorValue","newInputError","allPass","Select","target","MenuItem","TextField","label","teamName","userIdsArray","currentUserIds","storeUserIds","currentTeamName","storeTeamName","Paper","PrefetchedOptions","UsersData","ChartHeading","useStyles","makeStyles","borderBottom","content","bottom","LineItem","Item","style","centerHeading","textAlign","headingWrap","barChartComponentWrap","maxWidth","lineChartComponentWrap","chordWrap","pieWrap","chartWrap","styledCharts","Chart","getWeekNumber","dateMS","getTime","batchWeekly","prevWeeks","slice","currentWeek","prev","prevItemsWeek","currentItemsWeek","isNewWeek","batchBy","getAllYValues","getMaxYValue","allValues","apply","max","getMinYValue","minValue","min","dateSort","dateA","dateB","formatDate","info","month","getMonth","dayM","getDate","getFullYear","formatLineData","dataKey","groupMath","sortedData","batchedData","formattedData","formatBatches","formatLinesData","axix","lines","formatGraphMarkers","lineData","start","end","currentStart","currentEnd","dateStart","dateEnd","formattedMarkers","currentDate","MAJOR","MINOR","smoothNumber","ruffledNumber","stringNumber","roundTo","reduceRight","index","increment","number","parseInt","updatedItem","reverse","ToolTip","convertedRightLines","getYValue","point","serieId","xCurrentValue","xFormatted","yCurrentValue","yFormatted","rightItemMatch","originalY","Chip","points","rows","serieColor","Line","showLegends","useTheme","leftAxis","xAxis","leftLinesData","maxLeftValue","minLeftValue","rightAxis","rightLinesData","maxRightValue","dataItem","leftHeadingItems","rightHeadingItems","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","toggleSerie","itemTextColor","hasData","top","colors","lineWidth","curve","animate","xScale","format","xFormat","yScale","axisBottom","tickSize","tickPadding","tickRotation","axisLeft","tickValues","pointLabelYOffset","axisRight","rawLeftValue","realRightValue","enableGridX","enableSlices","sliceTooltip","formatIssueData","bug","issue","hasChartData","dataArray","Bar","bars","sortBy","indexBy","layout","titlePrefix","trimmedData","byPropDesc","finalData","groupMode","valueFormat","abs","enableLabel","getNameList","scoredData","keyData","given","sortedValues","accPercent","showNames","itemPercent","percentageOfTotal","formatChordData","otherAppened","matrix","otherTotal","ignoreNames","name","martixRow","matrixRowsForNamed","nameData","matrixRowForOther","mergedMatrix","getMatrix","names","Chord","hasMatrixData","row","arcBorderColor","from","modifiers","ribbonOpacity","ribbonBorderWidth","ribbonBorderColor","innerRadiusRatio","labelRotation","padAngle","innerRadiusOffset","labelOffset","labelTextColor","isInteractive","arcHoverOpacity","arcHoverOthersOpacity","ribbonHoverOpacity","ribbonHoverOthersOpacity","motionStiffness","motionDamping","Radar","titleItems","toolTipValues","dotSize","dotBorderColor","dotBorderWidth","gridShape","enableDotLabel","gridLabelOffset","gridLevels","maxValue","gridAngleStep","angleStep","tooltipFormat","shift","formatRadarData","filterAuthor","defaultValues","uniquePRsApproved","filteredContributors","p10","topUsers","totalled","addedUser","combinedData","averagedData","approvalsGivenByTeam","maxValues","parentAcc","upDateMaxValues","accVaue","radialChartsContributions","topXUsers","area","received","givenOriginal","receivedOriginal","radarData","contributionsRadar","setUserAction","allButons","currentTarget","window","scrollTo","RepoView","colourA","colourB","userRadars","userName","radars","originalUser","peersOriginal","getRadarData","userBars","averageAndUserData","userGraphs","mergedPrData","peerPrData","userPrData","removeUser","flexBasis","topButton","graphs","Pie","datum","innerRadius","cornerRadius","activeOuterRadiusOffset","borderWidth","startAngle","endAngle","enableArcLabels","arcLinkLabelsSkipAngle","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsTextColor","allRepos","sentPRData","uniqueRepos","pieData","alt","userId","Team","propSatisfies","User","Repo","wrapper","overflow","themeType","themeToggle","icon","Page","PageWrapper","DataOptions","fetchStatus","transform","zIndex","animation","pagesTotal","onePagePercent","loadedPercent","overlay","modal","LinearProgress","dashed","valueBuffer","actions","useEffect","quertString","urlParams","URLSearchParams","get","reducers","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","render","document","getElementById"],"mappings":"+GAAA,IAAIA,EAAM,CACT,aAAc,KAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,oBCtBpB,IAAIH,EAAM,CACT,oBAAqB,IACrB,eAAgB,IAChB,iBAAkB,IAClB,cAAe,IACf,kBAAmB,IACnB,4BAA6B,IAC7B,iBAAkB,IAClB,cAAe,IACf,gBAAiB,IACjB,qBAAsB,IACtB,iBAAkB,IAClB,cAAe,IACf,kBAAmB,IACnB,eAAgB,IAChB,uBAAwB,IACxB,mBAAoB,IACpB,+BAAgC,IAChC,eAAgB,IAChB,gBAAiB,IACjB,gBAAiB,IACjB,eAAgB,IAChB,cAAe,IACf,gBAAiB,IACjB,kBAAmB,IACnB,gBAAiB,KAIlB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,oxtziBC5BWY,E,0EChBzBC,EAAa,SAAAC,GAAI,MAAK,CACxBC,MAAO,UACPC,KAAM,QACPF,IAEGG,EAAe,SAAAH,GAAI,MAAK,CAC1BC,MAAO,OACPC,KAAM,WACPF,IAEGI,EAAa,6CACbC,EAAW,GAEXC,EAAc,SAACN,GAAD,MAAW,CAC3BO,MAAOR,EAAWC,GAClBQ,UAAW,EACXC,aAAc,SACdJ,SAAU,OACVK,WAAY,MACZN,eAGEO,EAAiB,CACnBC,kBAAmB,aACnBC,eAAgB,YAChBC,OAAQ,GACRC,cAAe,EACfC,eAAgB,GAGdC,EAAU,CACZC,EAAG,CACCC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,UAEXC,EAAG,CACCJ,KAAM,SACNC,MAAO,SACPC,OAAQ,OACRC,MAAO,WAwMAE,EApMA,eAACxB,EAAD,uDAAQ,QAAR,OAAoByB,YAAY,CAC3CzB,OACA0B,QAAS,CACL1B,OACA2B,UAAW,CACPC,aAAc,OACd1B,KAAM,UACND,MAAO,UACP4B,KAAM,WAEVC,QAAS,CACLF,aAAc,OACd1B,KAAM,UACND,MAAO,UACP4B,KAAM,WAEVE,SAAU,CACNxB,MAAOR,EAAWC,GAClBK,SAAU,OACVK,WAAY,MACZN,cAEJ4B,cAAe,CACXC,MAAO,OACPC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAEpBC,UAAY,CACRpC,MAAO,UACPC,KAAM,WACPF,GACHsC,KAAM,CACFR,QAAS/B,EAAWC,IAExBuC,KAAO,CACHtC,MAAO,UACPC,KAAM,WACPF,GACHwC,WAAY,CACRC,QAAStC,EAAaH,GACtB0C,MAAOvC,EAAaH,IAExB2C,OAAQ,CACJ1C,MAAO,OACPC,KAAM,QACPF,GACH4C,OAAQ7C,EAAWC,IAEvB6C,WAAY,CAAEC,iBAAiB,GAC/BC,UAAW9B,EACX+B,KAAM,CACFC,KAAK,2BACE3C,EAAYN,IADf,IAEAkD,WAAY,WAEhBC,KAAK,2BACE7C,EAAYN,IADf,IAEAO,MAAOR,EAAWC,KAEtBoD,SAAU,CACN7C,MAAOR,EAAWC,GAClBS,aAAc,UAElB4C,GAAG,2BACI/C,EAAYN,IADjB,IAEES,aAAc,SACdJ,SAAU,SACVK,WAAY,QAEhB4C,GAAG,2BACIhD,EAAYN,IADjB,IAEEK,SAAU,OACVK,WAAY,QAEhB6C,GAAG,2BACIjD,EAAYN,IADjB,IAEEK,SAAU,OACVK,WAAY,QAEhB8C,GAAG,2BACIlD,EAAYN,IADjB,IAEEK,SAAU,OACVK,WAAY,SAGpB+C,OAAQ,CACJrD,aACAC,WACAqD,UAAW3D,EAAWC,GACtB2D,UAAW,CACPC,KAAM,CACFC,OAAQ9D,EAAWC,KAG3B8D,KAAM,CACFC,OAAQ,CACJzB,KAAM,CAAE0B,KAAMjE,EAAWC,KAE7BiE,MAAO,CACH3B,KAAM,CAAE0B,KAAMjE,EAAWC,MAGjCkE,QAAS,CACLC,OAAQ,CACJC,OAAQ,CACJJ,KAAM,OACNK,QAAS,GAEb/B,KAAM,CACF0B,KAAM,OACNtD,WAAY,MACZ2D,QAAS,IAGjB/B,KAAM,CACF5B,WAAY,QAGpB4D,gBAAiBvE,EAAWC,GAC5BuE,SAAUxE,EAAWC,GACrBwE,QAAS,CACLpE,aACAC,WACAoE,UAAW,CACPjC,WAAYrC,EAAaH,GACzBO,MAAOR,EAAWC,GAClB0E,UAAU,aAAD,OAAe3E,EAAWC,MAG3C2E,KAAM,CACFf,KAAM,CACFC,OAAQ,SAGhBe,QAAS,CACL9C,QAAQ,aACJ+C,UAAW,CACPhB,OAAQ,CACJ5D,MAAO,UACPC,KAAM,WACPF,GACH8E,YAAa,GAEjBC,UAAW,CACP3E,aACAC,WACA2D,KAAO,CACH/D,MAAO,UACPC,KAAM,WACPF,KAEJW,GAEPgB,UAAU,aACNkD,UAAW,CACPhB,OAAQ,CACJ5D,MAAO,UACPC,KAAM,WACPF,GACH8E,YAAa,GAEjBC,UAAW,CACP3E,aACAC,WACA2D,KAAO,CACH/D,MAAO,UACPC,KAAM,WACPF,KAEJW,GAEPqE,SAAS,aACLH,UAAW,CACPhB,OAAQ,CACJ5D,MAAO,UACPC,KAAM,WACPF,GACH8E,YAAa,EACbG,gBAAgB,OAEpBF,UAAW,CACP3E,aACAC,WACA2D,KAAO,CACH/D,MAAO,UACPC,KAAM,WACPF,KAEJW,Q,mECzObuE,EAAS,SAAA1D,GAAK,MAAK,CACrB2D,EAAG3D,EAAMwB,KAAKC,KACdO,GAAG,2BACIhC,EAAMwB,KAAKQ,IADhB,IAEE,4BAA6B,CACzBnD,SAAU,QAEd,4BAA6B,CACzBA,SAAU,YAGlBkD,GAAG,2BACI/B,EAAMwB,KAAKO,IADhB,IAEE,4BAA6B,CACzBlD,SAAU,UAEd,4BAA6B,CACzBA,SAAU,UAGlBiD,GAAG,2BACI9B,EAAMwB,KAAKM,IADhB,IAEE,4BAA6B,CACzBjD,SAAU,UAEd,4BAA6B,CACzBA,SAAU,YAGlBgD,GAAI7B,EAAMwB,KAAKK,GACfF,KAAM3B,EAAMwB,KAAKG,KACjBC,SAAU5B,EAAMwB,KAAKI,WAGnBgC,EAAIC,YAAWH,EAAXG,EAAmB,wEAIzB,GAHAC,EADyB,EACzBA,UACAC,EAFyB,EAEzBA,QACAC,EAHyB,EAGzBA,SAHyB,OAIlB,mBAAGF,UAAS,UAAKC,EAAQJ,EAAb,YAAkBG,GAA9B,SACNE,OAGCC,EAAKJ,YAAWH,EAAXG,EAAmB,wEAG1B,GAFAE,EAD0B,EAC1BA,QACAC,EAF0B,EAE1BA,SAF0B,OAGnB,oBAAIF,UAAWC,EAAQpC,KAAvB,SACNqC,OAUCE,GAPKL,YAAWH,EAAXG,EAAmB,wEAG1B,GAFAE,EAD0B,EAC1BA,QACAC,EAF0B,EAE1BA,SAF0B,OAGnB,oBAAIF,UAAWC,EAAQpC,KAAvB,SACNqC,OAGMH,YAAWH,EAAXG,EAAmB,wEAG1B,GAFAE,EAD0B,EAC1BA,QACAC,EAF0B,EAE1BA,SAF0B,OAGnB,oBAAIF,UAAWC,EAAQnC,SAAvB,SACNoC,QAGCG,EAAIN,YAAWH,EAAXG,EAAmB,WAMjB,IAAD,yDAAP,GAAO,IALPO,aAKO,MALC,EAKD,EAJPC,EAIO,EAJPA,QACAP,EAGO,EAHPA,UACAC,EAEO,EAFPA,QACGO,EACI,iBACDC,EAAU,WAAOF,GAAWD,GAC5BI,EAAG,WAAOJ,GAEhB,OACI,cAACI,EAAD,aACIV,UAAS,UAAKC,EAAQQ,GAAb,YAA4BT,IACjCQ,O,iBChBDT,eAfA,SAAA7D,GAAK,MAAK,CACrByE,KAAM,CACFC,SAAU,EACVhE,QAAS,OACTC,SAAU,OACVgE,WAAY,WACZ,MAAO,CACHC,WAAY,WAGpB7D,KAAM,CACFhC,MAAOiB,EAAME,QAAQa,SAId8C,EAxDU,WAOb,IAAD,yDAAP,GANAgB,EAMO,EANPA,MACAC,EAKO,EALPA,MACAd,EAIO,EAJPA,SAIO,IAHPe,kBAGO,MAHM,OAGN,MAFPjB,iBAEO,MAFK,GAEL,EADPC,EACO,EADPA,QAEA,EAA2BiB,oBAAS,GAApC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,OACI,sBAAKpB,UAAS,UAAKC,EAAQU,KAAb,YAAqBX,GAAnC,UAEOe,GAA0B,kBAAVA,EACT,cAACV,EAAD,CAAGC,MAAO,EAAV,SAAeS,IACfA,EAEV,eAACjB,EAAD,WACKkB,EADL,IAEQd,GAAY,mBACRF,UAAWC,EAAQhD,KACnBoE,KAAK,QACLC,QAAS,SAACtH,GACNA,EAAEuH,iBACFH,GAAUD,IALN,SAQJA,EACM,OACAF,OAKtB,cAACO,EAAA,EAAD,CAAUxB,UAAU,UAAUyB,GAAIN,EAAlC,SACKjB,U,kBCRFH,eA7BA,SAAA7D,GAAK,MAAK,CACrByE,KAAM,CACFe,QAAQ,GAAD,OAAKxF,EAAMuB,UAAUxB,EAAED,MAAvB,YAAgCE,EAAMuB,UAAUxB,EAAED,MAAlD,cAA6DE,EAAMuB,UAAUxB,EAAED,OACtF2F,iBAAkB,YAClBC,mBAAoB,WACpBC,eAAgB,YAChBC,gBAAgB,mBAAD,OAAqB5F,EAAME,QAAQiB,OAAnC,oBACf0E,SAAU,WACVnF,QAAS,OACToF,cAAe,MACfnF,SAAU,OACVC,eAAgB,UAEpB,UAAW,CACPI,WAAY,QAEhB,QAAW,CACPJ,eAAgB,oBAYTiD,EARK,wEAA8C,GAA9C,IAAGE,eAAH,MAAa,GAAb,MAAiBD,iBAAjB,MAA6B,GAA7B,EAAiCE,EAAjC,EAAiCA,SAAjC,OAChB,qBACIF,UAAWiC,IAAWhC,EAAQU,KAAMV,EAAQD,IAAcA,GAD9D,SAGKE,O,SCMMH,eANA,SAAA7D,GAAK,MAAK,CACrByE,KAAM,CACFuB,YAAahG,EAAMuB,UAAU7B,EAAEE,MAC/BX,aAAce,EAAMuB,UAAUxB,EAAEH,UAGzBiE,EA9BA,wEASX,GARAC,EADW,EACXA,UACAC,EAFW,EAEXA,QACAqB,EAHW,EAGXA,QACAa,EAJW,EAIXA,IACAC,EALW,EAKXA,MACApF,EANW,EAMXA,KANW,IAOXtC,YAPW,MAOJ,SAPI,MAQXO,aARW,MAQH,UARG,SAUX,cAAC,IAAD,CACI+E,UAAW,CAACC,EAAQU,KAAOX,GAAa,IAAKqC,KAAK,KAClDC,QAAQ,YACRC,KAAK,QACL7H,KAAMA,EACNO,MAAOA,EACPmH,MAAOA,EAEPd,QAASA,EARb,SAUKtE,GAAQoF,GAHJD,MCkBEvC,EAzCA,SAAA1D,GAAK,MAAK,CACrBsG,UAAW,CACP5F,QAAS,OACT6F,oBAAqB,iBACrBtH,aAAc,OACduH,UAAW,MACXC,OAAQ,MACR,4BAA6B,CACzBF,oBAAqB,kBAEzB,WAAY,CACRG,UAAW,QAEf,eAAiB,CACbC,WAAW,WAGnB5F,KAAM,CACFhC,MAAOiB,EAAME,QAAQa,MAEzB6F,QAAS,CACLD,WAAW,UAEfE,gBAAiB,CACb5H,aAAc,KAElB6H,UAAW,CACPpG,QAAS,SAEbqG,MAAO,CACHC,OAAQ,EACRvG,MAAO,QAEXe,KAAM,CACFd,QAAS,UAEbuG,WAAY,CACRhI,aAAc,U,oOClChBiI,GAAgB,SAAhBA,EAAiBC,EAASC,GAAV,IAAeC,EAAf,uDAA0B,GAA1B,OAAiC,IAAIC,SAAQ,SAACnJ,EAASoJ,GACzE,mBAA4CJ,GAArCK,EAAP,KAAwBC,EAAxB,WAEAH,QAAQI,IAAIF,EAAajK,KAAI,SAACoK,GAAD,OAAOP,EAAIO,OACnCC,MAAK,SAACC,GAAD,OACFJ,GAAoBA,EAAiBK,OAC/BZ,EAAcO,EAAkBL,EAAKS,GAClCD,MAAK,SAACG,GAAD,OAAU5J,EAAQkJ,EAASW,OAAOD,OACvCE,MAAMV,GACTpJ,EAAQkJ,EAASW,OAAOH,OAEjCI,MAAMV,OAYAW,GARD,WAAwC,IAAvCC,EAAsC,uDAA3B,GAAIf,EAAuB,uCAAlBgB,EAAkB,uDAAN,EACrCjB,EAAUkB,aAAWD,EAAWD,GAEtC,OAAOA,EAASL,OACVZ,GAAcC,EAASC,GACvB,ICpBJkB,I,OAAU,SAACC,GAAD,IAAStC,EAAT,uDAAe,QAAf,OAA2BsC,EAAM,WACvCtC,EADuC,aAC/BsC,EAD+B,MAE3C,KAEAC,GAAY,SAAAC,GAAK,OAAI,YAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAEpC,OAAOL,GADkB,SAAVG,EAAmBC,EAASC,KAItCC,GAAW,iEAEXC,GAAW,SAACN,GAAD,sCACKA,EAAS,IAAK,GADnB,YACyBD,GAAQC,GADjC,6IAUTK,GAVS,cAcXE,GAAe,SAAAL,GAAK,OAAI,SAAAM,GAAU,iDAGpCP,GAAUC,EAAVD,CAAiBO,GAHmB,0EAKGN,EALH,0SA0BhCO,KA1BgC,mBA2BhCH,KA3BgC,2BA8BpCD,GA9BoC,SAiClCK,GAAS,SAAAR,GAAK,OAAI,SAAAM,GAAU,6BAE9BP,GAAUC,EAAVD,CAAiBO,GAFa,oEAISN,EAJT,iPAsB9BG,GAtB8B,SAyB5BM,GAAW,SAAAT,GAAK,OAAI,SAAAM,GAAU,+BAEhCP,GAAUC,EAAVD,CAAiBO,GAFe,kEAIMN,EAJN,kJAiBhCG,GAjBgC,SAoB9BI,GAAU,SAACT,GAAD,qCACKA,EAAS,IAAM,GADpB,YAC0BD,GAAQC,GADlC,4IASJM,KATI,uCAYRD,GAZQ,cA+GVO,GAAsB,SAACC,EAAcvB,EAASY,GAAxB,OAAkC,SAAAjK,GAC1D,MAII6K,YAAO,GAAI,CAAC,OAAQ,SAAU7K,EAAM,YAAaqJ,GAJrD,IACIyB,mBADJ,SAEIC,EAFJ,EAEIA,YACAC,EAHJ,EAGIA,UAGEC,EAAe,CACjBX,aAAc,eACdG,OAAQ,mBACRC,SAAU,sBAGRQ,EAA0B,SAAVjB,EAAmBe,EAAYD,EAC/CI,EAAgBN,YAAOK,EAAe,CAACD,EAAajL,GAAO,UAAW4K,GAEtEQ,EAA0B,QAAVnB,EAAkBe,EAAYD,EAC9CM,EAAgBR,YAAOO,EAAe,CAACH,EAAajL,GAAO,UAAW4K,GAI5E,MAAO,CACHT,OAAkB,QAAVF,GAAoBe,EAAYA,EAAYK,EACpDnB,OAAkB,SAAVD,GAAoBe,EAAYA,EAAYG,EACpDL,iBAIFQ,GAAwB,SAACC,GAC7B,MAAqB,CAAC,SAAU,eAAgB,YAC7CxM,KAAI,SAAAiB,GAAI,OAAI6K,YAAO,EAAG,CAAC,OAAQ,SAAU7K,EAAM,cAAeuL,MAC9DC,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAIC,KAFbC,EAAR,oBAME,OAFAC,QAAQC,IAAI,iBAAkBF,GAEvBG,KAAKC,KAAKJ,EAAS,KAAM,GAG9BK,GAAY,SAAC,GAAD,IAChBC,EADgB,EAChBA,KADgB,IAEhBhC,aAFgB,MAER,OAFQ,EAGhBiC,EAHgB,EAGhBA,aAHgB,IAIhBC,wBAJgB,MAIG,GAJH,MAKhBC,oBALgB,MAKD,GALC,QAMX,CACLC,MAAM,+BAAD,OACoBJ,EADpB,oCAGCG,EAAatB,YAAcR,GAAaL,EAAbK,CAAoB8B,GAAgB,GAHhE,mBAICD,EAAiBrB,YAAcL,GAAOR,EAAPQ,CAAc0B,GAAoB,GAJlE,gBAOLlC,QACAqC,WAAY,SAACf,GACT,IAKMgB,EAAS5B,GACX,CACIwB,mBACAC,gBAEJb,EACAtB,GAGJ2B,QAAQC,IAAI,aAAcN,GAC1BK,QAAQC,IAAI,qBAAsBK,GAElC,IAAMM,EAAsBC,OAAOC,UAAUR,GACvCA,EAAe,EACfZ,GAAsBC,GAE5BK,QAAQC,IAAI,0CAA2CW,EAAqBN,GAE5E,IAAMS,EAAe,GAIrB,MA3BoB,CAChB,CAAC,eAAgB,gBACjB,CAAC,mBAAoB,WAuBpBC,SAAQ,mCAAEnF,EAAF,KAAOzH,EAAP,YAAiB2M,EAAalF,GAAO8E,EAAOvM,MACzD4L,QAAQC,IAAI,qBAAsBc,GAC3B,CACH7B,YAAapL,OAAOmN,OAAOF,GAAcG,MAAK,mBAAsC,IAAtC,EAAGhC,eACjD6B,aAAa,2BACRA,GADO,IAEVT,aAAcM,MAIxBO,WAAY,eACZC,eAAgB,CACZZ,EAAatB,YACbqB,EAAiBrB,aAEhBgC,MAAK,SAAA5L,GAAC,OAAU,IAANA,OAIX+L,GAAe,SAAC,GAAD,IACjBC,EADiB,EACjBA,IACAC,EAFiB,EAEjBA,KAFiB,IAGjBlD,aAHiB,MAGT,OAHS,EAIjBiC,EAJiB,EAIjBA,aAJiB,IAKjBC,wBALiB,MAKE,GALF,MAMjBiB,0BANiB,MAMI,GANJ,MAOjBhB,oBAPiB,MAOF,GAPE,QAQd,CACHC,MAAM,sCAAD,OACyBc,EADzB,qBAC0CD,EAD1C,0HAQCd,EAAatB,YAAcR,GAAaL,EAAbK,CAAoB8B,GAAgB,GARhE,qBASCD,EAAiBrB,YAAcL,GAAOR,EAAPQ,CAAc0B,GAAoB,GATlE,qBAUCiB,EAAmBtC,YAAcJ,GAAST,EAATS,CAAgB0C,GAAsB,GAVxE,oBAaLnD,QACAqC,WAAY,SAACf,GACT,IAMMgB,EAAS5B,GACX,CACIwB,mBACAiB,qBACAhB,gBAEJb,EACAtB,GAGJ2B,QAAQC,IAAI,aAAcN,GAC1BK,QAAQC,IAAI,qBAAsBK,GAElC,IAAMM,EAAsBC,OAAOC,UAAUR,GACvCA,EAAe,EACfZ,GAAsBC,GAE5BK,QAAQC,IAAI,0CAA2CW,EAAqBN,GAE5E,IAAMS,EAzBc,CAChB,CAAC,eAAgB,gBACjB,CAAC,mBAAoB,UACrB,CAAC,qBAAsB,aAuBtBU,QAAO,SAACC,EAAD,0BAAM7F,EAAN,KAAWzH,EAAX,wBAAC,eACFsN,GADC,mBAEH7F,EAAO8E,EAAOvM,OACf,IAER,MAAO,CACH8K,YAAapL,OAAOmN,OAAOF,GAAcG,MAAK,mBAAsC,IAAtC,EAAGhC,eACjD6B,aAAa,2BACRA,GADO,IAEVT,aAAcM,MAIxBO,WAAY,eACZC,eAAgB,CACZZ,EAAatB,YACbqB,EAAiBrB,YACjBsC,EAAmBtC,aAElBgC,MAAK,SAAA5L,GAAC,OAAU,IAANA,OAGbqM,GAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQzD,EAAX,EAAWA,OAAX,MAAyB,CAC3CsC,MAAM,qBAAD,OACQmB,EADR,6EAIKnD,GAASN,GAJd,mCAQLuC,WAAY,SAACf,GAAD,MAAW,CACnBkC,QAASlC,EACTlC,QAASwB,YAAO,GAAI,CAAC,OAAQ,OAAQ,WAAY,SAAUU,GAC3DT,YAAaD,aAAO,EAAO,CAAC,OAAQ,OAAQ,WAAY,WAAY,eAAgBU,GACpFmC,SAAU,CACNF,OAAQ3C,YAAO,GAAI,CAAC,OAAQ,OAAQ,MAAOU,GAC3CxB,OAAQc,YAAO,GAAI,CAAC,OAAQ,OAAQ,WAAY,WAAY,aAAcU,QAKhFoC,GAAe,SAAC,GAAD,IAAGH,EAAH,EAAGA,OAAQzD,EAAX,EAAWA,OAAX,MAAyB,CAC1CsC,MAAM,qBAAD,OACQmB,EADR,6EAIKhD,GAAQT,GAJb,mCAQLuC,WAAY,SAACf,GAAD,MAAW,CACnBkC,QAASlC,EACTlC,QAASwB,YAAO,GAAI,CAAC,OAAQ,OAAQ,UAAW,SAAUU,GAC1DT,YAAaD,aAAO,EAAO,CAAC,OAAQ,OAAQ,UAAW,WAAY,eAAgBU,GACnFmC,SAAU,CACNF,OAAQ3C,YAAO,GAAI,CAAC,OAAQ,OAAQ,MAAOU,GAC3CxB,OAAQc,YAAO,GAAI,CAAC,OAAQ,OAAQ,UAAW,WAAY,aAAcU,MAGjFwB,WAAY,8BAGVa,GAAsB,SAAC,GAAD,IAAGJ,EAAH,EAAGA,OAAQzD,EAAX,EAAWA,OAAX,MAAyB,CACjDsC,MAAM,qBAAD,OACQmB,EADR,mFAIKnD,GAASN,GAJd,mCAQLuC,WAAY,SAACf,GAAD,MAAW,CACnBkC,QAASlC,EACTlC,QAASwB,YAAO,GAAI,CAAC,OAAQ,OAAQ,WAAY,SAAUU,GAC3DT,YAAaD,aAAO,EAAO,CAAC,OAAQ,OAAQ,WAAY,WAAY,eAAgBU,GACpFmC,SAAU,CACNF,OAAQ3C,YAAO,GAAI,CAAC,OAAQ,OAAQ,MAAOU,GAC3CxB,OAAQc,YAAO,GAAI,CAAC,OAAQ,OAAQ,WAAY,WAAY,aAAcU,QC5PvEsC,GApLE,SAAAC,GACb,IAAMC,EAAa,SAAC/N,GAEhB,IAcMgO,EAdgB,CAClB,aAAgB,CACZC,EACAC,GAEJ,0BAA6B,CACzBC,GAEJ,aAAgB,CACZF,EACAC,IAIsBlO,IAAS,GAEvC,OAAO,SAACuL,GAAD,OAAUyC,EAAQ1E,OACnBR,QAAQI,IACN8E,EACKjP,KAAI,SAACqP,GAAD,OAAYA,EAAO7C,OAE3BnC,MAAK,SAACiF,GAAD,OAAqBA,EACtBhB,QAAO,SAACiB,EAAaC,GAAd,OAAoCA,EAAkBD,KAAc/C,MAElFA,IAGJiD,EAAkB,SAAlBA,EAAkBC,GAAS,OAAI,eAACC,EAAD,uDAAa,GAAb,6BAAoB,gEAAAjD,EAAA,yDAAOkD,EAAP,+BAAwB,GAE5DC,EACbF,EADA5D,YAFiD,EASjD2D,EAAUC,GAHVrC,EANiD,EAMjDA,MACAC,EAPiD,EAOjDA,WACAS,EARiD,EAQjDA,YAGc6B,EAXmC,gCAYzCd,EAAQzB,GAZiC,+CAa/C,GAb+C,WAW/CwC,EAX+C,OAmBjDvC,EAAWuC,GAnBsC,IAgBjDxF,eAhBiD,MAgBvC,GAhBuC,EAiBpCyF,EAjBoC,EAiBjDhE,YACA4C,EAlBiD,EAkBjDA,SAGEqB,EArB+C,uBAsB9CJ,GAtB8C,aAuB9CtF,KAGAyF,EA1B8C,sBA2B/CN,EAAgBC,EAAhBD,CAA2Bd,EAA3Bc,CAAqCO,GA3BU,yCA4BzChB,EAAWhB,EAAXgB,CAAuBgB,GA5BkB,yGA+BnDC,EAAgB,eAACvB,EAAD,uDAAW,GAAX,OAAkB,SAAAhG,GAAG,OAAI,SAAAwH,GAC3C,IAAMC,EAAcxP,OAAOyP,OAAO1B,EAAQ2B,KAAtB1P,OAAA,KAAAA,CAAA,GAA+B+H,EAAMwH,IAEzD,OAAOvP,OAAOyP,OAAO1B,EAAS,CAAE2B,KAAMF,OAGpCG,EAAe,SAAA5H,GAAG,OAAI,SAAA8D,GAAI,MAAK,CACjCiC,OAAQ3C,YAAO,GAAI,CAAC,OAAQ,MAAOU,GACnCxB,OAAQc,YAAO,GAAI,CAAC,OAAQpD,EAAK,WAAY,aAAc8D,GAC3DT,YAAaD,aAAO,EAAO,CAAC,OAAQpD,EAAK,WAAY,eAAgB8D,MAGnE4C,EAA6B,uCAAG,4CAAA1C,EAAA,6DAAMF,EAAN,+BAAa,GACzC+D,EAD4B,+BAAA7D,EAAA,MACL,WAAM8D,GAAN,mBAAA9D,EAAA,6DACnB+D,EAAwB3E,YAAO,GAAI,CAAC,OAAQ,WAAY,SAAU0E,GAClEE,EAA0BJ,EAAa,WAAbA,CAAyBE,GAFhC,SAIOf,EAAgBZ,GAAhBY,CAAqCiB,EAArCjB,CAA8DgB,GAJrE,cAInBE,EAJmB,yBAMlBV,EAAcO,EAAdP,CAAsB,WAAtBA,CAAkC,CAAEW,MAAOD,KANzB,2CADK,+DASEhG,GAAM6B,EAAM+D,EAAsB,IATpC,cAS5BM,EAT4B,0BAW3B,kBAAMA,KAXqB,2CAAH,qDAc7B1B,EAAmB,uCAAG,WAAM3C,GAAN,mBAAAE,EAAA,6DAClBnB,EAAeO,YAAO,GAAI,CAAC,OAAQ,SAAU,eAAgB,SAAUU,GAEvEsE,EAHkB,+BAAApE,EAAA,MAGS,WAAOqE,GAAP,mBAAArE,EAAA,6DACvBsE,EAAiBlF,YAAO,GAAI,CAAC,OAAO,UAAU,SAAUiF,GACxDE,EAAmBX,EAAa,UAAbA,CAAwBS,GAFpB,SAIJtB,EAAgBb,GAAhBa,CAA8BwB,EAA9BxB,CAAgDuB,GAJ5C,cAIvBE,EAJuB,yBAMtB,CACHzC,OAAQ3C,YAAO,GAAI,CAAC,OAAQ,MAAOiF,GACnCzG,QAAS,CAAEsG,MAAOM,KARO,2CAHT,+DAcavG,GAAMY,EAAcuF,EAA0B,IAd3D,cAclBK,EAdkB,0BAgBjB,SAAC3E,GACJ,IAAM4E,EAA0BC,EAAmB7E,EAAnB6E,CAAyB,UAAzBA,CAAoCF,GAEpE,MAAO,CACH3E,KAAM7L,OAAOyP,OAAOkB,YAAO,GAAI,OAAQ9E,GACnC,CACI+E,OAAQ5Q,OAAOyP,OAAOtE,YAClB,CACIP,aAAc6F,GAElB,CAAC,OAAQ,UACT5E,UA3BI,2CAAH,sDAmCnB6E,EAAqB,SAAA7E,GAAI,OAAK,SAAA9D,GAAG,OAAI,SAAA8I,GACvC,IAAMC,EAAmB3F,YAAO,GAAI,CAAC,OAAQ,SAAU,gBAAiBU,GAGlEkF,EAFsB5F,YAAO,GAAI,CAAC,OAAQ,SAAU,eAAgB,SAAUU,GAG/ExM,KAAI,SAAC2R,GACF,IAAMlD,EAAS3C,YAAO,GAAI,CAAC,OAAQ,MAAO6F,GACpCC,EAAOJ,EACRK,MAAK,SAAA1P,GAAC,OAAIA,EAAEsM,SAAWA,KAE5B,OAAOmD,EACD3B,EAAc0B,EAAd1B,CAAkCvH,EAAlCuH,CAAuC2B,EAAKtH,SAC5CqH,KAId,OAAOhR,OAAOyP,OAAOqB,EAAkB,CAAEb,MAAOc,OAG9CxC,EAAoB,uCAAG,WAAM1C,GAAN,mBAAAE,EAAA,6DACnBnB,EAAeO,YAAO,GAAI,CAAC,OAAQ,SAAU,eAAgB,SAAUU,GAEvEsF,EAHmB,+BAAApF,EAAA,MAGS,WAAOqE,GAAP,mBAAArE,EAAA,6DACxBqF,EAAkBjG,YAAO,GAAI,CAAC,OAAQ,WAAY,SAAUiF,GAC5DiB,EAAoB1B,EAAa,WAAbA,CAAyBS,GAFrB,SAIJtB,EAAgBjB,GAAhBiB,CAA+BuC,EAA/BvC,CAAkDsC,GAJ9C,cAIxBE,EAJwB,yBAMvB,CACHxD,OAAQ3C,YAAO,GAAI,CAAC,OAAO,MAAOiF,GAClCzG,QAAS,CAAEsG,MAAOqB,KARQ,2CAHT,+DAeatH,GAAMY,EAAcuG,EAA2B,IAf5D,cAenBI,EAfmB,0BAiBlB,SAAC1F,GACJ,IAAM4E,EAA0BC,EAAmB7E,EAAnB6E,CAAyB,WAAzBA,CAAqCa,GAErE,MAAO,CACH1F,KAAM7L,OAAOyP,OAAOkB,YAAO,GAAI,OAAQ9E,GACnC,CACI+E,OAAQ5Q,OAAOyP,OAAOtE,YAClB,CACIP,aAAc6F,GAElB,CAAC,OAAQ,UACT5E,UA5BK,2CAAH,sDAoC1B,OAAOwC,GCrJImD,GAvCD,CACVC,SAAU,WACVC,WAAY,aACZC,cAAe,gBACfC,gBAAiB,aACjBC,UAAW,YACXC,YAAa,cACbC,kBAAmB,oBACnBC,oBAAqB,sBACrBC,wBAAyB,0BACzBC,0BAA2B,4BAC3BC,sBAAuB,wBACvBC,wBAAyB,0BACzBC,aAAc,eACdC,YAAa,cACbC,YAAa,cACbC,kBAAmB,oBACnBC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,aAAc,eACdC,WAAY,aACZC,cAAe,gBACfC,aAAc,eACdC,eAAgB,iBAChBC,QAAS,UACTC,UAAW,YACXC,cAAe,gBACfC,gBAAiB,kBACjBC,WAAY,aACZC,aAAc,eACdC,aAAc,eACdC,eAAgB,iBAChBC,aAAc,eACdC,gBAAiB,kBACjBC,eAAgB,iBAChBC,iBAAkB,oBCnBhBC,GAAY,SAAAC,GAAQ,OAAI,IAAI1K,SAAQ,SAACnJ,EAASoJ,GAChDyK,EAASC,OACJrK,MAAK,SAAAmC,GAAI,OAAwB,MAApBiI,EAASE,OACjB/T,EAAQ4L,GACRxC,EAAOrJ,OAAOyP,OAAO5D,EAAM,CAAEmI,OAAQF,EAASE,aAEnDjK,OAAM,SAAAkK,GACHA,EAAMD,OAASF,EAASE,OACxB3K,EAAO4K,UAIbC,GAAqB,SAAC,GAAD,QAAGC,QAAH,MAAqB,6FAA6FC,UAAlH,MAAa,GAAb,IAErBhG,GAAU,SAAAiG,GAAS,OAAI,SAAA1H,GAAK,OAC9B2H,MAAOD,EAAUE,eAAiB,iCAAmC,CACjEC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BJ,EAAUK,QAEzCnR,KAAMoR,KAAKC,UAAU,CAAEjI,YAEtBjD,KAAKmK,MAERgB,GAAoB,SAACzJ,EAAD,OAAgBoB,EAAhB,EAAgBA,aAAhB,OAAmCsI,aAAK,CAC9D,CAACC,cAAuB,IAAhB3J,GAAwB4J,MAChC,CAACD,aAAO3J,GAAe2B,OAAOC,UAAUR,IAAiBA,GAAgB,GAAIyI,MAC7E,CAACF,aAAO3J,GAAgC,QAAjBoB,GAAyByI,MAChD,CAACA,KAAYD,SAGXE,GAAQ,eAACC,EAAD,uDAAM,IAAN,OAAe,IAAI/L,SAAQ,SAAAnJ,GAAO,OAAImV,WAAWnV,EAASkV,OACpEE,GAAkB,EAEhBC,GAAc,uCAAG,WAAMC,EAAS5L,GAAf,SAAAoC,EAAA,6DACnBG,QAAQC,IAAI,gBADO,SAEb+I,KAFa,eAGjBG,GAHiB,kBAIZA,IAAmB,GACpBG,GAAID,EAAS5L,GACb,CACEzD,MAAO,QACPiO,QAAS,kCARE,2CAAH,wDAYdsB,GAAsB,WAA8B,IAA7BnV,EAA4B,uDAArB,GAAIqJ,EAAiB,uDAAP,GAC9C,cAAmBA,EAAnB,GAAQiH,EAAR,KACM8E,EAAQvK,YAAO,EAAG,CAAC,OAAQ,SAAU7K,EAAM,cAAesQ,GAChE,OAAO8E,GAGLC,GAAwB,WAA8B,IAA7BrV,EAA4B,uDAArB,GAAIqJ,EAAiB,uDAAP,GAC1C+L,EAAQ/L,EACTgE,QAAO,SAACC,EAAKgD,GAGV,OAAOhD,EAFWzC,YAAO,GAAI,CAAC,OAAQ,SAAU7K,EAAM,SAAUsQ,GAC3DhH,SAEN,GAEP,OAAO8L,GAGLF,GAAG,uCAAG,6EAAAzJ,EAAA,6DAAQsI,EAAR,EAAQA,UAAWrF,EAAnB,EAAmBA,UAAW4G,EAA9B,EAA8BA,SAAYjM,EAA1C,+BAAoD,GAApD,EAKJqF,EAAUqF,GAHV1H,EAFI,EAEJA,MACAC,EAHI,EAGJA,WACAS,EAJI,EAIJA,WAEJnB,QAAQC,IAAI,cAAeQ,GAE3BiJ,EAAS,CACLtV,KAAMkR,GAAMa,aACZwD,QAAS,CACLC,KAAMnM,EAAQC,OACdmM,YAAapM,EAAQC,OACrBoM,eAA2C,QAA3B3B,EAAU7H,aACpB,EACA6H,EAAU7H,aAChB5B,aAAc+K,GAAsB,eAAgBhM,GACpDsM,kBAAmBR,GAAoB,eAAgB9L,GACvDoB,OAAQ4K,GAAsB,SAAUhM,GACxCuM,YAAaT,GAAoB,SAAU9L,GAC3CqB,SAAU2K,GAAsB,WAAYhM,GAC5CwM,cAAeV,GAAoB,WAAY9L,MAIjDyM,EAAmBhI,GAAQiG,GAzBzB,kBA2BiB+B,EAAiBzJ,GA3BlC,UA2BEiE,EA3BF,QA4BAsD,GAAmBtD,GA5BnB,uBA6BM,IAAI/Q,MAAM,wBA7BhB,yBAgCmBsO,GAASiI,EAATjI,CAA2Bd,EAA3Bc,CAAuCyC,GAhC1D,eAgCEyF,EAhCF,OAiCEC,EAjCF,uBAkCG3M,GAlCH,CAmCA0M,IAnCA,EAyCAzJ,EAAWgE,GAFXxF,EAvCA,EAuCAA,YACA6B,EAxCA,EAwCAA,aAGEsJ,EAAmBC,aAAenC,EAAWpH,GA3C/C,kBA6CG4H,GAAkBzJ,EAAamL,EAA/B1B,CAAiDwB,GAClDb,GAAI,CAAEnB,UAAWkC,EAAkBvH,YAAW4G,YAAYU,GAC1D,CACEjC,UAAWkC,EACX5M,QAAS2M,IAjDb,yCAoDJpK,QAAQC,IAAI,kBAAZ,MACMsK,EAAoB3B,aAAK,CAC3B,CAACZ,GAAoBe,MACrB,CAACyB,aAAO,SAAU,KAAMzB,MACxB,CAACyB,aAAO,SAAU,KAAMzB,MACxB,CAACyB,aAAO,UAAW,wBAAyBzB,MAC5C,CAAC0B,YAAQ,uBAAuBvC,KAAMzD,YAAO,GAAI,SAAUsE,MAC3D,CAAC0B,YAAQ,SAASvC,KAAMzD,YAAO,GAAI,YAAasE,MAChD,CAACA,KAAYD,QAEX4B,EAAkB9B,aAAK,CACzB,CACI2B,EACA1B,aAAO,CACH7O,MAAO,OACPiO,QAAS,gGAGjB,CACIuC,aAAO,SAAU,KACjB3B,aAAO,CACH7O,MAAO,QACPiO,QAAS,oEAGjB,CACIwC,YAAQ,QAAQvC,KAAMzD,YAAO,GAAI,WACjCoE,aAAO,CACH7O,MAAO,QACPiO,QAAQ,eAAD,OAAiB,KAAMA,SAAW,aAGjD,CACIc,KACAF,aAAO,CACH7O,MAAO,QACPiO,QAAQ,UAAD,OAAY,KAAMA,SAAW,eAK1C0C,EAAeD,EAAgB,EAAD,IACpC1K,QAAQC,IAAI,qBAAsB0K,GA9F9B,kBAgGGJ,EAAkB,EAAD,IAClBnB,GAAe,CAAEjB,YAAWrF,YAAW4G,YAAYjM,GADlD,eAGIkN,IAnGP,0DAAH,sDA0GMrB,M,oBCtLTsB,GAAY,uCAAG,WAAMzC,EAAWuB,GAAjB,yBAAA7J,EAAA,sEAEPgL,EAAU1C,EAAU0C,QACpBlL,EAAOkL,EACR1X,KAAI,SAACkN,GAAD,MAAW,CACZ8H,UAAU,2BACHA,GADE,IAEL9H,SAEJyC,aACA4G,eAVK,SAac5L,GAAM6B,EAAM2J,GAAK,GAb/B,cAaPwB,EAbO,OAePC,EAfO,2BAgBN5C,GAhBM,IAiBT6C,MAAO,KAELC,EAAa,GACnBH,EACK9J,SAAQ,YAA6B,IAA1BmH,EAAyB,EAAzBA,UAAW1K,EAAc,EAAdA,QACb4C,EAAO6K,aAAK,OAAQ/C,GAC1B4C,EAAeC,MAAM3K,GAAQ8K,aAAK,CAAC,mBAAoB,eAAgB,QAAShD,GAChF8C,EAAWG,KAAK3N,MAGlB4N,EAAY,CACdlD,UAAW4C,EACXtN,QAASwN,EAAWK,QAGxBtL,QAAQC,IAAI,kBAAmBoL,GAhClB,kBAkCNA,GAlCM,wCAoCbrL,QAAQC,IAAI,2BAAZ,MApCa,+DAAH,wDAyCH2K,M,uEZpBTW,IARyBrX,EAQiB,CAAC,OAAQ,SAAU,SAR3B,SAAAsX,GAAK,OAAIA,EAC5C/J,QAAO,SAACC,EAAKqD,GACV,IAAM1E,EAAOoL,YAAKvX,EAAO6Q,GACnB2G,GAAahK,EAAIrB,IAAS,GAAK,EAErC,OAAOvM,OAAOyP,OAAO7B,EAAd5N,OAAA,KAAAA,CAAA,GAAsBuM,EAAOqL,MACrC,MAIDC,GAA6B,SAAAH,GAAK,OAAIA,EACvC/J,QAAO,SAACC,EAAD,GAAoC,IAAD,IAA5BkK,cAA4B,MAAnB,GAAmB,MAAfC,aAAe,MAAP,EAAO,EACjCC,GAAcpK,EAAIkK,IAAW,GAAKC,EAExC,OAAO/X,OAAOyP,OAAO7B,EAAd5N,OAAA,KAAAA,CAAA,GAAsB8X,EAASE,MACvC,KAEDC,GAAkB,eAACC,EAAD,uDAAQ,GAAR,OAAe,WAAiB,IAAhBC,EAAe,uDAAP,GACtCC,EAAcpY,OAAOqY,QAAQH,GAC7BI,EAAetY,OAAOqY,QAAQF,GAE9BI,EAAe,uBACdH,GADc,aAEdE,IAEF3K,QAAO,SAACC,EAAD,GAAyB,IAAD,mBAAjBrB,EAAiB,KAAXvE,EAAW,KACtBwQ,GAAY5K,EAAIrB,IAAS,GAAKvE,EAEpC,OAAOhI,OAAOyP,OAAO7B,EAAd5N,OAAA,KAAAA,CAAA,GAAsBuM,EAAOiM,MACrC,IAEP,OAAOD,IAGLE,GAAiB,SAAC,GAAD,IAAE5M,EAAF,0BAAa,CAChC4B,KAAMtC,YAAO,GAAI,CAAC,OAAQ,SAAU,QAASU,GAC7C2B,IAAKrC,YAAO,GAAI,CAAC,OAAQ,SAAU,QAAS,OAAQU,GACpD6M,YAAavN,YAAO,GAAI,CAAC,OAAQ,SAAU,eAAgBU,KAGzD8M,GAAgB,SAAAzB,GAAK,OAAI,SAAAjG,GAAI,OAAKiG,EAAM0B,SAASjB,YAAK,CAAC,OAAQ,SAAU,SAAU1G,MAmBnF4H,GAAmB,WAAoB,IAAnBlO,EAAkB,uDAAP,GAC3BmO,EAAY,IAAIC,KAEhBC,EAAcrO,EACftL,KAAI,SAAA4Z,GACD,IAAM1V,EAAO4H,YAAO,GAAG,CAAC,OAAQ,QAAS8N,GAGzC,MAAO,CACHnB,OAHkB3M,YAAO,GAAI,CAAC,OAAQ,SAAU,SAAU8N,GAI1DlB,MAAOe,EAAUI,QAAQ3V,GAAMwU,UAI3C,MAAO,CACHoB,eAAgBH,EAAYrL,QAAO,SAACC,GAAD,6DAAsB,GAAtB,IAAQmK,aAAR,MAAgB,EAAhB,SAA6BA,EAAQnK,IAAI,GAC5EwL,WAAYvB,GAA2BmB,KAIzCK,GAAqB,SAACC,EAASzN,GACjC,IAAM0N,EAtCiB,SAACD,EAASzN,GACjC,IAAMiM,EAAS3M,YAAO,GAAI,CAAC,OAAQ,SAAU,SAAUU,GAavD,OAZmBV,YAAO,GAAI,CAAC,OAAQ,UAAW,SAAUU,GAGvD8B,QAAO,SAACC,EAAKiC,GACV,IAAMlF,EAAWQ,YAAO,GAAI,CAAC,OAAQ,WAAY,SAAU0E,GACtD2J,OAAOb,GAAc,GAAD,oBAAKW,GAAL,CAAcxB,MAIvC,OAFAlK,EAAI0J,KAAJ,MAAA1J,EAAG,aAASjD,IAELiD,IACR,IA0BiB6L,CAAmBH,EAASzN,GAEpD,EAGIgN,GAAiBU,GAHrB,IACIJ,sBADJ,MACqB,EADrB,MAEIC,kBAFJ,MAEiB,GAFjB,EAKA,MAAO,CACHM,aAAcH,EAAgB3P,OAC9B+P,eAAgBlC,GAAiB8B,GACjCK,0BAA2BT,EAC3BU,sBAAuBT,IAIzBU,GAAwB,SAACR,EAASzN,GACpC,IAAMiM,EAAS3M,YAAO,GAAI,CAAC,OAAQ,SAAU,SAAUU,GACjDlB,EAAWQ,YAAO,GAAI,CAAC,OAAQ,WAAY,SAAUU,GACtD2N,OAAOb,GAAc,GAAD,oBAAKW,GAAL,CAAcxB,MAEvC,EAGIe,GAAiBlO,GAHrB,IACIwO,sBADJ,MACqB,EADrB,MAEIC,kBAFJ,MAEiB,GAFjB,EAKA,MAAO,CACHW,gBAAiBpP,EAASf,OAC1BoQ,kBAAmBvC,GAAiB9M,GACpCsP,6BAA8Bd,EAC9Be,yBAA0Bd,IAI5Be,GAAkB,SAACtO,GACrB,IACMuO,EADUjP,YAAO,GAAI,CAAC,OAAQ,UAAW,SAAUU,GAEpD2N,QAAO,SAAAhY,GAAC,MAAmC,aAA/BmW,YAAK,CAAC,OAAQ,SAAUnW,MAEnC6Y,EAAc5C,GAAiB2C,GAErC,MAAO,CACHE,UAAWF,EAAYxQ,OACvB2Q,UAAWF,IAIbG,GAAS,eAAClB,EAAD,uDAAW,GAAX,OAAkB,WAAgB,IAAfzN,EAAc,uDAAP,GAC/B2B,EAAMrC,YAAO,GAAI,CAAC,OAAQ,aAAc,QAAS,SAAUU,GAC3D4B,EAAOtC,YAAO,GAAI,CAAC,OAAQ,aAAc,QAASU,GAClDiM,EAAS3M,YAAO,GAAI,CAAC,OAAQ,SAAU,SAAUU,GACjD4O,EAAMtP,YAAO,GAAI,CAAC,OAAQ,OAAQU,GAClC6O,EAAYvP,YAAO,EAAG,CAAC,OAAQ,aAAcU,GAC7C8O,EAAYxP,YAAO,EAAG,CAAC,OAAQ,aAAcU,GAC7C+O,EAAezP,YAAO,EAAG,CAAC,OAAQ,gBAAiBU,GACnDgP,EAAY1P,YAAO,GAAI,CAAC,OAAQ,aAAcU,GAC9CiP,EAAW3P,YAAO,GAAI,CAAC,OAAQ,YAAaU,GAElD,EAKIwN,GAAmBC,EAASzN,GALhC,IACI6N,oBADJ,MACmB,EADnB,EAEIC,EAFJ,EAEIA,eACAC,EAHJ,EAGIA,0BACAC,EAJJ,EAIIA,sBAGJ,EAKIC,GAAsBR,EAASzN,GALnC,IACIkO,uBADJ,MACsB,EADtB,EAEIC,EAFJ,EAEIA,kBACAC,EAHJ,EAGIA,6BACAC,EAJJ,EAIIA,yBAGJ,EAGIC,GAAgBtO,GAFhByO,EADJ,EACIA,UACAC,EAFJ,EAEIA,UAGEQ,EAAS,CACXtN,OACAD,MACAsK,SACA2C,MAEAC,YACAC,YACAC,eACAI,OAAQN,EAAYC,EAEpBE,YACAC,WACAG,IAAKC,aAAiB,IAAIC,KAAKL,GAAW,IAAIK,KAAKN,KAAe,EAElEP,YACAC,YAEAR,kBACAC,oBACAC,+BACAC,2BAEAR,eACAC,iBACAC,4BACAC,wBAEAlP,SAAU+O,EAAeK,EACzBqB,WAAYnD,GAAgB+B,EAAhB/B,CAAmC0B,GAC/C0B,oBAAqBpD,GAAgBiC,EAAhBjC,CAA0C4B,GAC/DyB,uBAAwBrB,EAA+BL,GAG3D,OAAOmB,IAGLQ,GAAqB,eAACjC,EAAD,uDAAW,GAAI3P,EAAf,8CAA2BgN,aAClD6C,aAAO,SAAAhY,GAAC,OAAIga,cAAK,SAAA3Z,GAAC,OAAIA,IAAML,EAAEsW,SAAQwB,MACtCja,YAAImb,GAAOlB,IACXmC,KACApc,YAAI8L,YAAO,GAAI,CAAC,OAAQ,SAAU,eAAgB,WAJAwL,CAKpDhN,IAwBI+R,GAAe/E,aACjBtX,aAfgB,SAACwM,GACjB,IAAMgP,EAAY1P,YAAO,GAAI,CAAC,OAAQ,aAAcU,GAC9C8P,EAAWxQ,YAAO,GAAI,CAAC,OAAQ,YAAaU,GAC5ClF,EAAQwE,YAAO,GAAI,CAAC,OAAQ,SAAUU,GACtC+P,EAASzQ,YAAO,GAAI,CAAC,OAAQ,SAAU,SAAUU,GAEvD,MAAO,CACHgP,YACAC,SAAUD,EACVc,WACAE,MAAO,OAAOzH,KAAKzN,IAAUiV,EAAOxO,MAAK,SAAA5L,GAAC,MAAI,OAAO4S,KAAKuD,YAAK,CAAC,OAAQ,QAASnW,WAMrFia,KACApc,YAAI8L,YAAO,GAAI,CAAC,OAAQ,SAAU,SAAU,YAmC1C2Q,GAAiBnF,aACnBtX,aAdkB,SAACwM,GACnB,IAAMgP,EAAY1P,YAAO,GAAI,CAAC,OAAQ,aAAcU,GAC9CkQ,EAAM5Q,YAAO,GAAI,CAAC,OAAQ,MAAO,QAASU,GAE1CmQ,EAvBa,SAACD,GACpB,IACI,IAAME,EAASC,iBAAMH,GACfI,EAASC,iBAAML,GACfM,EAASC,iBAAMP,GACfQ,EAAcC,sBAAWT,GAQ/B,MANoB,EACfQ,GAAeN,GAAqB,IAAXE,GAA2B,IAAXE,GAAgB,SACzDE,GAAeJ,GAAqB,IAAXE,GAAgB,QAC1C,SACFnL,KAAKuL,SAGT,MAAMxI,GACJ,MAAO,SAQSyI,CAAeX,GAEnC,MAAO,CACHY,KAAM9B,EACNnC,YAAaqD,EACbC,kBAMJP,KACApc,YAAI8L,YAAO,GAAI,CAAC,OAAQ,SAAU,WAAY,YazR5CyR,GAAY,SAAC5U,GAOf,MANmC,kBAAVA,GAAsBA,EAAM4B,QAAU5B,GACvD,aAAaoM,KAAb,UAAqBpM,KAAY,UAAUoM,KAAV,UAAkBpM,KAAYA,GAC/D6U,MAAMC,QAAQ9U,IAAUA,EAAM4B,QAAUmT,GAAU/U,IAClDA,GAAShI,OAAOD,KAAKiI,GAAO4B,QAAUoT,GAAWhV,IAChC,mBAAVA,GAAuBA,GAKpC+U,GAAY,SAAAE,GACd,IAAMC,EAAWD,EACZtP,QAAO,SAACC,EAAKqD,GAAN,6BACDrD,GACC,CAACgP,GAAU3L,OAChB,IAEP,OAAOiM,EAAStT,QAAUsT,GAGxBF,GAAa,SAAAG,GACf,IAAMC,EAAYpd,OAAOqY,QAAQ8E,GAC5BxP,QAAO,SAACC,EAAD,GAAwB,IAAD,mBAAhB7F,EAAgB,KAAXC,EAAW,KACrBqV,EAAWT,GAAU5U,GAE3B,OAAO,2BACA4F,GACEyP,EAAQ,gBACJtV,EAAMsV,GACT,MAGX,IAEP,OAAOrd,OAAOD,KAAKqd,GAAWxT,QAAUwT,GCjCtCE,GAAe,CACjBxF,OAAQ,GACRyF,eAAgB,EAChBC,gBAAiB,GACjBC,cAAe,EACfC,iBAAkB,EAClBC,kBAAmB,EACnBC,qBAAsB,EACtBC,qBAAsB,EACtBC,wBAAyB,EACzBC,SAAU,EACVC,uBAAwB,EACxBC,eAAgB,IAGdC,GAAyB,SAACC,EAAaC,EAAQjB,EAAKkB,GAA3B,OAAwCre,OAAOqY,QAAQ8E,GACjFxP,QAAO,SAACC,EAAD,GAAwB,IAAD,mBAAhB7F,EAAgB,KAAXC,EAAW,KACrBsW,EAAWH,EAAYpW,IAAQ,GAC/BwW,EAAO,uCACNjB,IACAgB,GAFM,iBAGT/R,KAAMxE,GACLqW,GAAUE,EAASF,IAAW,IAAMC,GAAYrW,KAGrD,OAAOhI,OAAOyP,OAAO7B,EAAd5N,OAAA,KAAAA,CAAA,GAAsB+H,EAAMwW,MACpC,KAoIQC,GAlIQ,WAAgB,IAAf3S,EAAc,uDAAP,GACrB4S,EAAqB,SAACN,EAAaC,EAAQjB,EAAKrF,GAA3B,OAAsC9X,OAAOqY,QAAQ8E,GAC3ExP,QAAO,SAACC,EAAD,GAAwB,IAAD,mBAAhB7F,EAAgB,KAAXC,EAAW,KACrB0W,EAAkBP,EAAYpW,IAAQ,GACtC4W,EAAiBD,EAAgBN,IAAW,GAC5CQ,EAAc,2BACbD,GADa,mBAEf7G,GAAU6G,EAAe7G,IAAW,IAAM9P,GAAS,KAGlDuW,EAAO,uCACNjB,IACAoB,GAFM,iBAGT5G,OAAQ/P,GACPqW,EAASQ,IAGd,OAAO5e,OAAOyP,OAAO7B,EAAd5N,OAAA,KAAAA,CAAA,GAAsB+H,EAAMwW,MACpC,KACDM,EAAWhT,EACZ8B,QAAO,SAACC,EAAK4M,GACV,IACI1C,EAWA0C,EAXA1C,OADJ,EAYI0C,EAVAQ,cAFJ,MAEa,EAFb,IAYIR,EATAS,WAHJ,MAGU,EAHV,IAYIT,EARAF,iBAJJ,MAIgB,EAJhB,IAYIE,EAPAD,iBALJ,MAKgB,GALhB,IAYIC,EANA7P,gBANJ,MAMe,EANf,IAYI6P,EALAY,kBAPJ,MAOiB,GAPjB,IAYIZ,EAJAd,oBARJ,MAQmB,EARnB,IAYIc,EAHAb,sBATJ,MASqB,GATrB,IAYIa,EAFAT,uBAVJ,MAUsB,EAVtB,IAYIS,EADAR,yBAXJ,MAWwB,GAXxB,EAcM8E,EAAwBL,EAAmB7Q,EAAK,iBAAkBwN,EAAYtD,GACpF9X,OAAOyP,OAAO7B,EAAKkR,GAEnB,IAAMC,EAAyBN,EAAmB7Q,EAAK,kBAAmB2M,EAAWzC,GACrF9X,OAAOyP,OAAO7B,EAAKmR,GAEnB,IAAMC,EAAuBd,GAAuBtQ,EAAK,gBAAiBwN,GAC1Epb,OAAOyP,OAAO7B,EAAKoR,GAEnB,IAAMC,EAA2Bf,GAAuBtQ,EAAK,oBAAqB+L,GAClF3Z,OAAOyP,OAAO7B,EAAKqR,GAEnB,IAAMC,EAA8BhB,GAAuBtQ,EAAK,uBAAwBoM,GACxFha,OAAOyP,OAAO7B,EAAKsR,GAEnB,IAAMC,EAAwBjB,GAAuBtQ,EAAK,iBAAkB2M,GAC5Eva,OAAOyP,OAAO7B,EAAKuR,GAEnB,IAAMC,EAA2BlB,GAAuBtQ,EAAK,oBAAqB2M,EAAW,GAC7Fva,OAAOyP,OAAO7B,EAAKwR,GAEA,aAAO,IAAIC,IAAJ,uBACnBrf,OAAOD,KAAK4Z,IADO,aAEnB3Z,OAAOD,KAAKia,IAFO,aAGnBha,OAAOD,KAAKwa,OAIdrN,SAAQ,SAACnF,GACN,IAAMuW,EAAW1Q,EAAI7F,IAAQ,GACvBwW,EAAO,uCACNjB,IACAgB,GAFM,IAGTxG,OAAQ/P,EACRiW,wBAAyBM,EAASN,wBAA0B,GAAK,IAGrEhe,OAAOyP,OAAO7B,EAAd5N,OAAA,KAAAA,CAAA,GAAsB+H,EAAMwW,OAIpC,IAAMD,EAAW1Q,EAAIkK,IAAW,GAE1BwH,EAAO,uBAAQhB,EAASgB,SAAW,IAA5B,CAAiCtE,IACxCuE,EAAgBnT,KAAKoT,MAAMF,EAAQ3R,QAAO,SAACC,EAAKpM,GAAN,OAAYoM,EAAMpM,IAAG,GAAK8d,EAAQ1V,QAE5E6V,EAAM,uBAAQnB,EAASmB,QAAU,IAA3B,CAAgCxE,IACtCyE,EAAetT,KAAKoT,MAAMC,EAAO9R,QAAO,SAACC,EAAKpM,GAAN,OAAYoM,EAAMpM,IAAG,GAAKie,EAAO7V,QAE/E,OAAO5J,OAAOyP,OAAO7B,EAAd5N,OAAA,KAAAA,CAAA,GACF8X,EADE9X,OAAA,IAAAA,QAAA,IAAAA,QAAA,IAAAA,CAAA,GAEIsd,IACAgB,GAHJ,IAICxG,SACAvL,KAAMuL,EACN6H,mBAAoBrB,EAASqB,mBAAqB,GAAKrF,EACvDoD,kBAAmBY,EAASZ,kBAAoB,GAAK/S,EACrDiT,sBAAuBU,EAASV,sBAAwB,GAAKlE,EAC7DoE,yBAA0BQ,EAASR,yBAA2B,GAAK/D,EACnEgE,UAAWO,EAASP,UAAY,GAAK,EACrCuB,UACAtE,OAAQuE,EACRE,SACAxE,IAAKyE,QAId,IAGDE,EAAa,aAAO,IAAIP,IAAIxT,EAAKxM,KAAI,SAAAmC,GAAC,OAAIA,EAAEsW,YAE5C+H,EAAe7f,OAAOmN,OAAO0R,GAC9BrF,QAAO,gBAAG1B,EAAH,EAAGA,OAAH,OAAgB8H,EAAcxS,MAAK,SAAA5L,GAAC,OAAIA,IAAMsW,QAEpD/X,EAAO,CACT,gBACA,mBACA,iBACA,qBAGE+f,EAAcD,EACf/T,MAAK,SAACC,EAAGC,GACN,IAAM+T,EAAShgB,EACV4N,QAAO,SAACC,EAAK7F,GAAN,OAAc6F,GAAO7B,EAAEhE,IAAQ,KAAI,GAI/C,OAFehI,EACV4N,QAAO,SAACC,EAAK7F,GAAN,OAAc6F,GAAO5B,EAAEjE,IAAQ,KAAI,GAC/BgY,KAGxB,OAAOD,GCjILE,GAAU,eAACzT,EAAD,uDAAQ,GAAR,MAAgB,CAC5BjM,KAAMkR,GAAMC,SACZoE,QAAStJ,IAWP0T,GAAa,eAACvL,EAAD,uDAAS,GAAT,MAAiB,CAChCpU,KAAMkR,GAAMM,YACZ+D,QAASnB,IAmBPwL,GAAqB,eAAC3L,EAAD,uDAAiB,GAAjB,OAAwB,SAACqB,EAAUuK,GAC1D,IAEuBC,EAEnBD,IAHAE,QACI9L,cAOR,OAHAA,GAAiB6L,GAAwB7L,IAAkB6L,GACpDE,GAAU1K,GAEVA,EAAS,CACZtV,KAAMkR,GAAMsB,cACZ+C,QAAStB,MAoBXgM,GAAoBC,YACtBC,YAAM,KACNphB,YAAIqhB,KACJlH,YAAOiD,UAuDLkE,GAAoB,eAACnU,EAAD,uDAAgB,GAAhB,OAAuB,SAACoJ,GAAD,OAAcA,EAAS,CACpEtV,KAAMkR,GAAMoB,aACZiD,QAASrJ,MAGPoU,GAAqB,eAACC,EAAD,uDAAiB,OAAjB,OAA4B,SAACjL,GAAD,OAAcA,EAAS,CAC1EtV,KAAMkR,GAAMqB,WACZgD,QAASgL,MAGPP,GAAY,SAAC1K,GACfA,EAAS,CAAEtV,KAAMkR,GAAME,aACvBkE,EAAS,CAAEtV,KAAMkR,GAAM0B,YACvB0C,EAAS,CAAEtV,KAAMkR,GAAMQ,sBACvB4D,EAAS,CAAEtV,KAAMkR,GAAM4B,kBACvBwC,EAAS,CAAEtV,KAAMkR,GAAMoC,mBACvBgC,EAAS,CAAEtV,KAAMkR,GAAMgC,iBACvBoC,EAAS,CAAEtV,KAAMkR,GAAMU,4BACvB0D,EAAS,CAAEtV,KAAMkR,GAAM8B,eACvBsC,EAAS,CAAEtV,KAAMkR,GAAMY,0BACvBwD,EAAS,CAAEtV,KAAMkR,GAAMgB,qBAIrBsO,GAAkB,SAAClL,EAAUuK,GAC/B,IAAQvV,EAAiBuV,IAAjBvV,aAERgL,EAAS,CACLtV,KAAMkR,GAAMmC,eACZkC,QAAS2I,GAAe5T,MAI1BmW,GAAoB,wEAAqD,GAArD,IAAGV,QAAW5S,GAAd,aAA8C,GAA9C,GAAcA,KAAMD,EAApB,EAAoBA,IAApB,IAAyBkL,mBAAzB,MAAuC,GAAvC,QAA8D,CACpFjL,OACAD,MACAkL,gBAGE9B,GAAkB,SAAAoK,GACpB,MAMIA,EALAX,QAOEY,EAAU,GARhB,aAKQ,GALR,GAEQzT,KAOI,gBATZ,EAGQC,MAOK,cAVb,EAIQiH,OAOK,gBAER8E,OAAOiD,SAkBZ,OAHgBwE,EACXtT,QAAO,SAACC,EAAKsT,EAASC,GAAf,OAAqBvT,EAdjB,SAACuT,GAGb,MAAO,CACG,IAANA,GACI,iBAAM,YACVA,IALaF,EAAQrX,OAAS,GAM1B,iBAAM,SACVuX,EAAI,GACA,iBAAM,OACZjQ,KAAKuL,QAPA,GAW4B2E,CAAQD,GAAKD,IAAS,KAK3DG,GAAkB,SAAAL,GACpB,MAMIA,EALAX,QAOEiB,EAAU,EARhB,aAKQ,GALR,GAEQ9T,IAFR,EAGQC,KAHR,EAIQiH,OAKH6M,OAAM,SAAAtQ,GAAI,MAAoB,kBAATA,GAAqBA,EAAKrH,OAAS,KAE7D,MAAO,CACH4X,QAASF,EACTrN,MAAQqN,EAKF,KAJA,CACEpb,MAAO,QACPiO,QAASyC,GAAgBoK,MAOnCS,GAAa,wEAA0B,GAA1B,IAAGC,kBAAH,uDAAiC,WAAO9L,EAAUuK,GAAjB,2CAAApU,EAAA,yDAC1CiV,EAAQb,IADkC,EAGDkB,GAAgBL,GAA9CW,EAH+B,EAGxCH,QAHwC,IAGfvN,aAHe,MAGP,GAHO,GAK/C0N,GAAkB/L,EAAS,CACxBtV,KAAMkR,GAAMe,YACZsD,QAAS5B,IAGb0N,GAAkB/L,EAAS,CACvBtV,KAAMkR,GAAMgB,oBAGhBmP,GAAkB/L,EAAS,CACvBtV,KAAMkR,GAAMc,cAGhB0O,EAAMY,iBACEF,GACDpB,GAAU1K,EAAU,WApBqB,WAyBxCuK,IADAE,EAxBwC,EAwBxCA,SAEY1P,YAAO,GAAI,UAAW0P,GAECzW,OA5BK,kCA6BhCkN,GAAauJ,EAASzK,GA7BU,6DA8BhCJ,GAAI,CAAEnB,UAAWgM,EAASrR,UAAWzB,GAAcqI,aA9BnB,mCA4BpCvB,EA5BoC,EA4BpCA,UAAW1K,EA5ByB,EA4BzBA,QAGbkY,EAAalR,YAAO,GAAI,aAAc0P,GAEtCyB,EAAMvG,GAAmBsG,EAAYlY,GACrCoY,EAAWtJ,GAAe9O,GAC1BqB,EAAW8Q,GAAenS,GAC1BoB,EAAS2Q,GAAa/R,GAE5BiM,EAAS,CACLtV,KAAMkR,GAAMyB,QACZ4C,QAASiM,IAGblM,EAAS,CACLtV,KAAMkR,GAAM2B,cACZ0C,QAASkM,IAGbnM,EAASkL,IAETlL,EAAS,CACLtV,KAAMkR,GAAM+B,aACZsC,QAAS7K,IAGb4K,EAAS,CACLtV,KAAMkR,GAAM6B,WACZwC,QAAS9K,IAGb6K,EAAS,CACLtV,KAAMkR,GAAMO,kBACZ8D,QAASxB,EAAU3H,eAEvBkJ,EAAS,CACLtV,KAAMkR,GAAMW,sBACZ0D,QAASxB,EAAU5H,mBAEvBmJ,EAAS,CACLtV,KAAMkR,GAAMS,wBACZ4D,QAASxB,EAAU3G,qBAGvBkI,EAAS,CAAEtV,KAAMkR,GAAMiB,YAzEqB,kDA4E5CvG,QAAQC,IAAI,uBAAZ,MACAyJ,EAAS,CACLtV,KAAMkR,GAAMe,YACZsD,QAAS,CACL3P,MAAO,QACPiO,QAAS,KAAMA,SAAW,mBAGlCyB,EAAS,CAAEtV,KAAMkR,GAAMiB,YApFqB,0DAAjC,yDAwFbuP,GAAoB,eAACvU,EAAD,uDAAQ,OAAR,OAAmB,SAACmI,GAC1C,IAAMqM,EAAWC,OAAQ,YAAqBzU,EAAtB,UAExB,EAOIwU,EANA5B,eADJ,MACc,GADd,IAOI4B,EALAL,sBAFJ,MAEqB,GAFrB,IAOIK,EAJArX,oBAHJ,MAGmB,GAHnB,IAOIqX,EAHA1K,iBAJJ,MAIe,GAJf,IAOI0K,EAFAlX,cALJ,MAKa,GALb,IAOIkX,EADAjX,gBANJ,MAMe,GANf,EASAsV,GAAU1K,GAEU,CAChB,CAAC,QAAS,eACV,CAAC,MAAO,aACR,CAAC,OAAQ,cACT,CAAC,gBAAiB,iBAClB,CAAC,eAAgB,oBAAqB,IACtC,CAAC,qBAAsB,0BAA2B,IAClD,CAAC,mBAAoB,wBAAyB,KAGtC1I,SAAQ,YAAqC,IAAD,mBAAlC2I,EAAkC,KAAzBvV,EAAyB,YAAnB6hB,OAAmB,MAAR,GAAQ,EACpDvM,EAAS,CACLtV,KAAMkR,GAAMlR,GACZuV,QAASwK,EAAQxK,IAAYsM,OAIrCvM,EAAS,CACLtV,KAAMkR,GAAMkC,gBACZmC,QAAS+L,IAGbhM,EAAS,CACLtV,KAAMkR,GAAM2B,cACZ0C,QAASkL,GAAkBkB,KAG/BrM,EAAS,CACLtV,KAAMkR,GAAMyB,QACZ4C,QAASjL,IAEbgL,EAAS,CACLtV,KAAMkR,GAAMmC,eACZkC,QAAS0B,EAAU3N,OACb2N,EACAiH,GAAe5T,KAGzBgL,EAAS,CACLtV,KAAMkR,GAAM6B,WACZwC,QAAS9K,IAGb6K,EAAS,CACLtV,KAAMkR,GAAM+B,aACZsC,QAAS7K,IAGb4K,EAAS,CACLtV,KAAMkR,GAAMiB,cAId2P,GAAmB,SAACxM,EAAUuK,GAChC,IAAMa,EAAQb,IAER1S,EAAOkK,YAAK,CAAC,UAAW,QAASqJ,GAYjCqB,EAXgB7B,YAClB8B,YAAQ,CAAC,UAAW,WAAY,eAAgB,WAAY,SAAU,aACtEC,YAAW,CAAC,UAAW,UACvBA,YAAW,CAAC,UAAW,iBACvBA,YAAW,CAAC,UAAW,eAAgB,gBACvCA,YAAW,CAAC,UAAW,mBAAoB,gBAC3CA,YAAW,CAAC,UAAW,qBAAsB,gBAC7CC,YAAM,iBAAkB/U,GACxBuP,GAGeyF,CAAczB,GAC3BjN,EAAOY,KAAKC,UAAUyN,EAAY,KAAM,GACxCK,EAAO,IAAIC,KAAK,CAAC5O,GAAO,CAAEzT,KAAM,qBAGtC,MAAO,CACH2G,KAHU2b,IAAIC,gBAAgBH,GAI9BI,SAAS,GAAD,OAAKnL,YAAK,CAAC,UAAW,OAAQqJ,GAA9B,YAAwCvT,EAAxC,WC1WDsV,gBARS,SAAC/B,GAAD,MAAY,CAChCY,eAAgBZ,EAAMY,mBAGC,SAAAhM,GAAQ,MAAK,CACpCoN,kBAAmB,SAACxhB,GAAD,OAAOoU,EAASoM,GAAkBxgB,QAG1CuhB,CAA6Cpd,YAAWH,EAAXG,EAvD1C,SAACS,GACf,IACIP,EAGAO,EAHAP,QACA+b,EAEAxb,EAFAwb,eACAoB,EACA5c,EADA4c,kBAGJ,OACI,sBAAKpd,UAAWC,EAAQkD,WAAxB,UACQ,cAACrD,EAAD,0FAII,CACI,QACA,SACA,WACA,aACA,cACA,SACA,wBACA,OACA,OACA,SACA,WACA,SACA,QACA,QACA,QACA,OACA,WACA,WAECrG,KAAI,SAACoO,EAAM0T,GAAP,OAAa,cAAC,EAAD,CACdnZ,MAAOyF,EAEP5M,MAAO+gB,IAAmBnU,EAAO,UAAY,YAC7CvG,QAAS,SAACtH,GACNA,EAAEuH,iBACF6b,EAAkBvV,KAJjB0T,a,wECrC3BjZ,GAAU,CACZ,KAAQ,cAAC,KAAD,IACR,MAAS,cAAC,KAAD,KAqCEvC,gBApBA,SAAA7D,GAAK,MAAK,CACrByE,KAAM,CACFe,QAAS,SACT9E,QAAS,OACTiE,WAAY,SACZwc,aAAc,OAElB3f,KAAM,CACFwF,OAAQ,EACRpC,WAAY5E,EAAMuB,UAAUxB,EAAEF,OAC9B2F,QAAS,EACTzG,MAAO,QAEXoT,MAAO,CACHiP,gBAAiB,WAErBC,KAAM,CACFD,gBAAiB,cAGVvd,EAlCC,wEAOZ,GAPY,IACZsO,MACI/N,EAFQ,EAERA,MACAiO,EAHQ,EAGRA,QAEJtO,EALY,EAKZA,QACAD,EANY,EAMZA,UANY,OAQZ,sBAAKA,UAAS,UAAKC,EAAQK,GAAb,YAAuBL,EAAQU,KAA/B,YAAuCX,GAArD,UACKsC,GAAQhC,GACT,cAACR,EAAD,CAAGE,UAAWC,EAAQvC,KAAtB,SAA6B6Q,UCa/BiP,GAAa,SAACC,EAAUzB,GAAX,IAA2BhX,EAA3B,uDAA0C,GAA1C,MAAiD,CAChEyY,GAAY,WACZzB,GAAc,kBAAeA,EAAf,SACdhX,EAAahB,QAAU,gBACvB,YACFsH,KAAKuL,UAED6G,GAAW,SAAC,GAAoB,IAAlBvb,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAMrB,OALgB8M,aAAK,CACjB,CAACyO,YAAO,iBAAkBxO,aAAO,yBAAyBX,KAAKpM,KAC/D,CAACub,YAAO,cAAexO,aAAO,kBAAkBX,KAAKpM,KACrD,CAACiN,KAAYF,aAAO,YAAYX,KAAKpM,MAHzB8M,CAIb/M,IAkOQgb,gBA1BS,SAAC/B,GAAD,MAAY,CAChCqC,SAAUrC,EAAMqC,SAChBpP,MAAO+M,EAAM/M,MACbrJ,aAAcoW,EAAMpW,aACpBgX,eAAgBZ,EAAMY,mBAGC,SAAAhM,GAAQ,MAAK,CACpC4N,UAAW,YAAmF,IAAhF9O,EAA+E,EAA/EA,MAAOlH,EAAwE,EAAxEA,IAAKC,EAAmE,EAAnEA,KAAM8G,EAA6D,EAA7DA,cAAesN,EAA8C,EAA9CA,WAAYrV,EAAkC,EAAlCA,aAAciX,EAAoB,EAApBA,cACrE7N,EAASqK,GAAWvL,IACpBkB,EHpNS,eAACpI,EAAD,uDAAO,GAAP,OAAc,SAACoI,EAAUuK,GACtC,IAEauD,EAETvD,IAHAE,QACI7S,IAOR,OAHAA,GAAOkW,GAAclW,IAAQkW,GACtBpD,GAAU1K,GAEVA,EAAS,CACZtV,KAAMkR,GAAMK,UACZgE,QAASrI,KGwMAmW,CAASnW,IAClBoI,EH3HU,eAACnI,EAAD,uDAAQ,GAAR,OAAe,SAACmI,EAAUuK,GACxC,IAEcyD,EAEVzD,IAHAE,QACI5S,KAOR,OAHAA,GAAQmW,GAAenW,IAASmW,GACzBtD,GAAU1K,GAEVA,EAAS,CACZtV,KAAMkR,GAAMmB,WACZkD,QAASpI,KG+GAoW,CAAUpW,IACnBmI,EAASsK,GAAmB3L,IAC5BqB,EH/IgB,eAACiM,EAAD,uDAAc,GAAd,OAAqB,SAACjM,EAAUuK,GACpD,IAAM2D,EAAevD,GAAkBsB,GAInBkC,EAEhB5D,IAHAE,QACIwB,WAOR,OAHAiC,EAAala,QAAUoa,YAAIT,YAAOQ,EAAmBD,KAC9CxD,GAAU1K,GAEVA,EAAS,CACZtV,KAAMkR,GAAMuB,aACZ8C,QAASiO,KGiIAG,CAAgBpC,IACzBjM,EAAS+K,GAAkBnU,IAC3BoJ,EAASgL,GAAqC,QAAlB6C,EACtB,OACA,SAGVS,QAAS,SAAC1iB,GAAD,OAAOoU,EAAS6L,GAAWjgB,KACpC2iB,gBAAiB,kBAAMvO,EAASwM,KAChCY,kBAAmB,SAACxhB,GAAD,OAAOoU,EAASoM,GAAkBxgB,QAI1CuhB,CAA6Cpd,YAAWH,EAAXG,EAvN3C,SAACS,GACd,IACIod,EAQApd,EARAod,UACAU,EAOA9d,EAPA8d,QACAb,EAMAjd,EANAid,SACApP,EAKA7N,EALA6N,MAJJ,EASI7N,EAJAwE,oBALJ,MAKmB,GALnB,EAMI/E,EAGAO,EAHAP,QACA+b,EAEAxb,EAFAwb,eACAuC,EACA/d,EADA+d,gBAGJ,EAAoCrd,mBAAS,CACzC4N,OAAO,EACPjH,MAAM,EACND,KAAK,EACL+G,eAAe,EACfsN,YAAY,IALhB,mBAAOuC,EAAP,KAAmBC,EAAnB,KAQA,EAAgCvd,mBAAS,CACrC2c,cAAe,MACfjX,aAAc,EACdkI,MAAO,GACPjH,KAAM,GACND,IAAK,GACL+G,cAAe,GACfsN,WAAY,KAPhB,mBAAOyC,EAAP,KAAiBC,EAAjB,KAUMC,EAAW,SAACzc,EAAKC,GAAN,OAAgBuc,EAAY,2BACtCD,GADqC,mBAEvCvc,EAAMC,MAGLyc,EAAa,SAAC1c,GAAD,MAAU,CACzBnC,UAAWC,EAAQgD,MACnBoL,MAAOmQ,EAAWrc,GAClBC,MAAOsc,EAASvc,GAChBG,QAAS,WACTY,OAAQ,SACR4b,WAAYN,EAAWrc,IAAQ,gBAC/B4c,OAAQ,SAACC,GACL,IAAM5c,EAAQmD,YAAO,GAAI,CAAC,SAAU,SAAUyZ,GAExCpD,EAAU8B,GAAS,CAAEvb,MAAKC,UAChCqc,EAAc,2BACPD,GADM,mBAERrc,GAAMyZ,KAGXtV,QAAQC,IAAI,0BAA2BpE,EAAIC,EAAMwZ,GAEjDA,GACOgD,EAASzc,EAAKC,IAEzB6c,SAAU,SAACD,GACP,IAAM5c,EAAQmD,YAAO,GAAI,CAAC,SAAU,SAAUyZ,GAC9CP,EAAc,2BACPD,GADM,mBAERrc,GAAM,KAGXyc,EAASzc,EAAKC,IAElB8c,QAAS,kBAAMT,EAAc,2BACtBD,GADqB,mBAEvBrc,GAAM,QA6Bf,OACI,eAAC,EAAD,CACInC,UAAWC,EAAQ8C,gBACnBhC,MAAM,GACNE,WAAW,OACXD,MAAM,+DAJV,UAMI,uBACIme,SAjCS,SAACH,GAClBA,EAAMzd,iBAEN,IAAM6d,EAjFK,SAAAV,GAAQ,OAAI,SAAAvc,GAC3B,IAAMC,EAAQsc,EAASvc,GAGvB,OAFgBub,GAAS,CAAEvb,MAAKC,WA+ENid,CAAWX,GAC3BY,EAAgB,CAClB,MAASF,EAAc,SACvB,IAAOA,EAAc,OACrB,KAAQA,EAAc,QACtB,cAAiBA,EAAc,iBAC/B,WAAcA,EAAc,eAGhCX,EAAca,GAEd,IAAMC,EAAUnlB,OAAOmN,OAAO+X,GACzB3D,OAAM,SAAA/f,GAAC,OAAKA,KAEjB0K,QAAQC,IAAI,6BAA8BmY,GAC1Ca,IAAY9B,GACLG,EAAUc,GAEjBa,IAAY9B,GACLa,KAUH,UAGI,sBAAKte,UAAWC,EAAQuC,UAAxB,UACI,eAACgd,GAAA,EAAD,CACIpd,MAAOsc,EAASb,cAChBoB,SAAU,SAACjlB,GAAD,OAAO4kB,EAAS,gBAAiB5kB,EAAEylB,OAAOrd,QACpDyc,WAAY,CAAE,aAAc,kBAHhC,UAKI,cAACa,GAAA,EAAD,CAAUtd,MAAM,MAAhB,+BACA,cAACsd,GAAA,EAAD,CAAUtd,MAAM,QAAhB,mDAEJ,eAACod,GAAA,EAAD,CACIpd,MAAOsc,EAAS9X,aAChBqY,SAAU,SAACjlB,GAAD,OAAO4kB,EAAS,eAAgB5kB,EAAEylB,OAAOrd,QACnDyc,WAAY,CAAE,aAAc,kBAHhC,UAKI,cAACa,GAAA,EAAD,CAAUtd,MAAO,EAAGjF,SAAO,EAA3B,8BACA,cAACuiB,GAAA,EAAD,CAAUtd,MAAO,GAAjB,gCACA,cAACsd,GAAA,EAAD,CAAUtd,MAAO,IAAjB,iCACA,cAACsd,GAAA,EAAD,CAAUtd,MAAM,MAAhB,2BAGJ,cAACud,GAAA,EAAD,2BACQd,EAAW,QADnB,IAEIe,MAAM,kBAGV,cAACD,GAAA,EAAD,2BACQd,EAAW,SADnB,IAEIe,MAAM,gBAEV,cAACD,GAAA,EAAD,2BACQd,EAAW,UADnB,IAEIe,MAAM,YAEV,eAAC9f,EAAD,CAAGE,UAAU,YAAb,mDAC0C,mBAAGA,UAAWC,EAAQhD,KAAMoE,KAAK,qCAAjC,oBAD1C,2HAKJ,cAAC,EAAD,CACIrB,UAAS,UAAKC,EAAQ8C,gBAAb,YAAgC9C,EAAQ6C,SACjD/B,MAAM,GACNE,WAAW,WACXD,MAAM,mBAJV,SAMI,sBAAKhB,UAAWC,EAAQuC,UAAxB,UACI,cAACmd,GAAA,EAAD,2BACQd,EAAW,eADnB,IAEIe,MAAM,iDAEV,cAACD,GAAA,EAAD,2BACQd,EAAW,kBADnB,IAEIe,MAAM,kCAKlB,sBAAK5f,UAAWC,EAAQuC,UAAxB,UACI,cAAC,EAAD,CACIxC,UAAS,UAAKC,EAAQgD,MAAb,YAAsBhD,EAAQ6C,SACvCpI,KAAM+iB,EAAW,WAAa,SAC9Bnb,QAAQ,YACRrH,MAAM,UACNmH,MAAOob,GAAWC,EAAU,GAAIzB,EAAiB,GAAKhX,KAGtDqJ,GACO,cAAC,GAAD,CACCA,MAAOA,EACPrO,UAAWC,EAAQ6C,iBAMlC2a,IACOzB,GACDhX,EAAahB,OAAS,GACtB,cAAClE,EAAD,UAAG,2CAAGE,UAAWC,EAAQhD,MAAUshB,KAAhC,gDChNpBf,GAAa,SAACC,GAAD,IAAWzY,EAAX,uDAA0B,GAA1B,MAAiC,CAChDyY,GAAY,WACZzY,EAAahB,QAAU,gBACvB,YACFsH,KAAKuL,UAED6G,GAAW,SAAC,GAAoB,IAAlBvb,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAMrB,OALgB8M,aAAK,CACjB,CAACyO,YAAO,iBAAkBxO,aAAO,yBAAyBX,KAAKpM,KAC/D,CAACub,YAAO,WAAYxO,aAAO,iBAAiBX,KAAKpM,KACjD,CAACiN,KAAYF,aAAO,YAAYX,KAAKpM,MAHzB8M,CAIb/M,IAmNQgb,gBAvBS,SAAC/B,GAAD,MAAY,CAChCqC,SAAUrC,EAAMqC,SAChBpP,MAAO+M,EAAM/M,MACbrJ,aAAcoW,EAAMpW,iBAGG,SAAAgL,GAAQ,MAAK,CACpC4N,UAAW,YAA+E,IAA5E9O,EAA2E,EAA3EA,MAAOqC,EAAoE,EAApEA,QAAS0O,EAA2D,EAA3DA,SAAUlR,EAAiD,EAAjDA,cAAe/H,EAAkC,EAAlCA,aAAciX,EAAoB,EAApBA,cACjE7N,EAASqK,GAAWvL,IACpBkB,EJ9Ia,eAACmB,EAAD,uDAAW,GAAX,OAAkB,SAACnB,EAAUuK,GAC9C,IAAMuF,EAAenF,GAAkBxJ,GAEvC,EAIIoJ,IAHAE,QACItJ,QAAS4O,OAFjB,MAEkC,GAFlC,EASA,OAHA3B,YAAIT,YAAOoC,EAAgBD,KACpBpF,GAAU1K,GAEVA,EAAS,CACZtV,KAAMkR,GAAMwB,eACZ6C,QAAS6P,KIgIAE,CAAa7O,IACtBnB,EJrKc,eAAC6P,EAAD,uDAAY,GAAZ,OAAmB,SAAC7P,EAAUuK,GAChD,IAEkB0F,EAEd1F,IAHAE,QACIoF,SAOR,OAHAA,GAAYI,GAAmBJ,IAAaI,GACrCvF,GAAU1K,GAEVA,EAAS,CACZtV,KAAMkR,GAAMG,cACZkE,QAAS4P,KIyJAK,CAAcL,IACvB7P,EAASsK,GAAmB3L,IAC5BqB,EAAS+K,GAAkBnU,IAC3BoJ,EAASgL,GAAqC,QAAlB6C,EACtB,OACA,SAGVS,QAAS,SAAC1iB,GAAD,OAAOoU,EAAS6L,GAAWjgB,KACpC2iB,gBAAiB,kBAAMvO,EAASwM,QAIrBW,CAA6Cpd,YAAWH,EAAXG,EAxM3C,SAACS,GACd,IACIod,EAOApd,EAPAod,UACAU,EAMA9d,EANA8d,QACAb,EAKAjd,EALAid,SACApP,EAIA7N,EAJA6N,MAJJ,EAQI7N,EAHAwE,oBALJ,MAKmB,GALnB,EAMI/E,EAEAO,EAFAP,QACAse,EACA/d,EADA+d,gBAGJ,EAAoCrd,mBAAS,CACzC4N,OAAO,EACPH,eAAe,EACfwC,SAAS,EACT0O,UAAU,IAJd,mBAAOrB,EAAP,KAAmBC,EAAnB,KAOA,EAAgCvd,mBAAS,CACrC2c,cAAe,MACfjX,aAAc,EACdkI,MAAO,GACP+Q,SAAU,GACVlR,cAAe,GACfwC,QAAS,KANb,mBAAOuN,EAAP,KAAiBC,EAAjB,KASMC,EAAW,SAACzc,EAAKC,GAAN,OAAgBuc,EAAY,2BACtCD,GADqC,mBAEvCvc,EAAMC,MAGLyc,EAAa,SAAC1c,GAAD,MAAU,CACzBnC,UAAWC,EAAQgD,MACnBoL,MAAOmQ,EAAWrc,GAClBC,MAAOsc,EAASvc,GAChBG,QAAS,WACTY,OAAQ,SACR4b,WAAYN,EAAWrc,IAAQ,gBAC/B4c,OAAQ,SAACC,GACL,IAAM5c,EAAQmD,YAAO,GAAI,CAAC,SAAU,SAAUyZ,GAExCpD,EAAU8B,GAAS,CAAEvb,MAAKC,UAChCqc,EAAc,2BACPD,GADM,mBAERrc,GAAMyZ,KAGXtV,QAAQC,IAAI,0BAA2BpE,EAAIC,EAAMwZ,GAEjDA,GACOgD,EAASzc,EAAKC,IAEzB6c,SAAU,SAACD,GACP,IAAM5c,EAAQmD,YAAO,GAAI,CAAC,SAAU,SAAUyZ,GAC9CP,EAAc,2BACPD,GADM,mBAERrc,GAAM,KAGXyc,EAASzc,EAAKC,IAElB8c,QAAS,kBAAMT,EAAc,2BACtBD,GADqB,mBAEvBrc,GAAM,QA4Bf,OACI,eAAC,EAAD,CACInC,UAAWC,EAAQ8C,gBACnBhC,MAAM,GACNE,WAAW,OACXD,MAAM,yDAJV,UAMI,uBACIme,SAhCS,SAACH,GAClBA,EAAMzd,iBAEN,IAAM6d,EA9EK,SAAAV,GAAQ,OAAI,SAAAvc,GAC3B,IAAMC,EAAQsc,EAASvc,GAGvB,OAFgBub,GAAS,CAAEvb,MAAKC,WA4ENid,CAAWX,GAC3BY,EAAgB,CAClB,MAASF,EAAc,SACvB,cAAiBA,EAAc,iBAC/B,QAAWA,EAAc,WACzB,SAAYA,EAAc,aAG9BX,EAAca,GAEd,IAAMC,EAAUnlB,OAAOmN,OAAO+X,GACzB3D,OAAM,SAAA/f,GAAC,OAAKA,KAEjB0K,QAAQC,IAAI,6BAA8BmY,GAC1Ca,IAAY9B,GACLG,EAAUc,GAEjBa,IAAY9B,GACLa,KAUH,UAGI,sBAAKte,UAAWC,EAAQuC,UAAxB,UACI,eAACgd,GAAA,EAAD,CACIpd,MAAOsc,EAASb,cAChBoB,SAAU,SAACjlB,GAAD,OAAO4kB,EAAS,gBAAiB5kB,EAAEylB,OAAOrd,QACpDyc,WAAY,CAAE,aAAc,kBAHhC,UAKI,cAACa,GAAA,EAAD,CAAUtd,MAAM,MAAhB,+BACA,cAACsd,GAAA,EAAD,CAAUtd,MAAM,QAAhB,mDAEJ,eAACod,GAAA,EAAD,CACIpd,MAAOsc,EAAS9X,aAChBqY,SAAU,SAACjlB,GAAD,OAAO4kB,EAAS,eAAgB5kB,EAAEylB,OAAOrd,QACnDyc,WAAY,CAAE,aAAc,kBAHhC,UAKI,cAACa,GAAA,EAAD,CAAUtd,MAAO,EAAGjF,SAAO,EAA3B,8BACA,cAACuiB,GAAA,EAAD,CAAUtd,MAAO,EAAjB,8BACA,cAACsd,GAAA,EAAD,CAAUtd,MAAO,IAAjB,iCACA,cAACsd,GAAA,EAAD,CAAUtd,MAAM,MAAhB,2BAGJ,cAACud,GAAA,EAAD,2BACQd,EAAW,YADnB,IAEIe,MAAM,sCAEV,cAACD,GAAA,EAAD,2BACQd,EAAW,aADnB,IAEIe,MAAM,eAEV,cAACD,GAAA,EAAD,2BACQd,EAAW,UADnB,IAEIe,MAAM,YAEV,eAAC9f,EAAD,CAAGE,UAAU,YAAb,mDAC0C,mBAAGA,UAAWC,EAAQhD,KAAMoE,KAAK,qCAAjC,oBAD1C,2HAKJ,cAAC,EAAD,CACIrB,UAAS,UAAKC,EAAQ8C,gBAAb,YAAgC9C,EAAQ6C,SACjD/B,MAAM,GACNE,WAAW,WACXD,MAAM,mBAJV,SAMI,cAAC2e,GAAA,EAAD,2BACQd,EAAW,kBADnB,IAEIe,MAAM,+BAId,sBAAK5f,UAAWC,EAAQuC,UAAxB,UACI,cAAC,EAAD,CACIxC,UAAS,UAAKC,EAAQgD,MAAb,YAAsBhD,EAAQ6C,SACvCpI,KAAM+iB,EAAW,WAAa,SAC9Bnb,QAAQ,YACRrH,MAAM,UACNmH,MAAOob,GAAWC,EAAU,GAAIzY,KAGhCqJ,GACO,cAAC,GAAD,CACCA,MAAOA,EACPrO,UAAWC,EAAQ6C,iBAMlC2a,GACMzY,EAAahB,OAAS,GACtB,cAAClE,EAAD,UAAG,2CAAGE,UAAWC,EAAQhD,MAAUshB,KAAhC,gDCjNXxe,eAAWH,EAAXG,EARG,SAAC,GAAD,IAAGE,EAAH,EAAGA,QAAH,OACd,eAACkgB,EAAD,CAAOngB,UAAWC,EAAQ+C,UAA1B,UACI,cAACod,GAAD,IACA,cAAC,GAAD,IACA,cAACC,GAAD,U,gDCmEOC,GA3EM,WAA2D,IAAD,yDAAP,GAAhDtgB,EAAuD,EAAvDA,UAAuD,IAA5C8R,aAA4C,MAApC,GAAoC,MAAhC9U,YAAgC,MAAzB,GAAyB,MAArBtC,YAAqB,MAAd,GAAc,EACrE8gB,EAAU,SAACD,GAGb,MAAO,CACG,IAANA,GACI,iBAAM,IACVA,IALazJ,EAAM9N,OAAS,GAMxB,iBAAM,SACVuX,EAAI,GACA,iBAAM,OACZjQ,KAAKuL,QAPA,IAUL0J,EAAYC,cAAW,SAAAtkB,GAAK,MAAK,CACnCyE,KAAM,SAAAH,GAAK,MAAK,CACZvF,MAAOuF,EAAMvF,MACbwlB,aAAa,aAAD,OAAejgB,EAAMvF,OACjC2B,QAAS,eACTgB,WAAY,OACZmE,SAAU,WACV,WAAY,CACRnE,WAAY,IACZ8iB,QAAS,WACT3e,SAAU,WACV4e,OAAQ,OACRrO,KAAM,QAEV,UAAW,CACP1U,WAAY,IACZ8iB,QAAS,WACT3e,SAAU,WACV4e,OAAQ,OACRpO,MAAO,cAKbqO,EAAW,SAAC,GAAqB,IAAnB3lB,EAAkB,EAAlBA,MAAO2kB,EAAW,EAAXA,MACjB3f,EAAUsgB,EAAU,CAAEtlB,UAC5B,OACI,sBACI+E,UAAWC,EAAQU,KADvB,SAGKif,KAKPiB,EAAO,SAAC,GAAD,IAAG5lB,EAAH,EAAGA,MAAO2kB,EAAV,EAAUA,MAAV,OACT,sBACIkB,MAAO,CAAE7lB,SADb,SAGK2kB,KAIT,OACI,eAACvf,EAAD,CAAGC,MAAO,EAAGN,UAAWA,EAAxB,oBACQhD,EADR,KAGQ8U,EACKrY,KAAI,SAAC4R,EAAMkQ,GAAP,OAAa,eAAC,WAAD,WACbC,EAAQD,GAEI,SAAT7gB,EACM,cAACkmB,EAAD,eAAcvV,IACd,cAACwV,EAAD,eAAUxV,MALSkQ,UCjE/C3b,GAAS,iBAAO,CAClBmhB,cAAe,CACXC,UAAW,UAEfC,YAAa,CACTrkB,QAAS,OACTC,SAAU,OACVC,eAAgB,iBAEpBokB,sBAAuB,CACnBvkB,MAAO,MACPwkB,SAAU,SACVje,OAAQ,aACR,4BAA6B,CACzBvG,MAAO,SAGfykB,uBAAwB,CACpBzkB,MAAO,OACPwkB,SAAU,UAEdE,UAAW,CACP1kB,MAAO,QACPnB,OAAQ,QACR,4BAA6B,CACzBmB,MAAO,QACPnB,OAAQ,QACR,aAAc,CACVT,SAAU,qBAItBumB,QAAS,CACL3kB,MAAO,OACPnB,OAAQ,QACRL,aAAc,OACd,4BAA6B,CACzBK,OAAQ,SAEZ,4BAA6B,CACzBA,OAAQ,UAGhB+lB,UAAW,CACP5kB,MAAO,OACPnB,OAAQ,QACR,eAAgB,CACZuD,QAAS,OAEb,4BAA6B,CACzBvD,OAAQ,QACR,eAAgB,CACZuD,QAAS,OAEb,2BAA4B,CACxBA,QAAS,MAGjB,4BAA6B,CACzBvD,OAAQ,QACR,iBAAkB,CACdoB,QAAS,QAEb,aAAc,CACVmC,QAAS,KAEb,aAAc,CACVhE,SAAU,uBAQXymB,GAFM,SAACC,GAAD,OAAW1hB,YAAWH,GAAXG,CAAmB0hB,I,UCzE7CC,GAAgB,SAAA3K,GAClB,IAAM4K,EAAS5K,GAAQ,IAAIxB,KAAKwB,EAAK8D,MAAM,KAAK,IAAI+G,UAGpD,OAFmBD,GAAUnb,KAAKoT,MAAO+H,EAJ5B,SAgBXE,GAAc,SAAA1f,GAAG,OAAI,SAAA8D,GAAI,OAAIA,EAC9B8B,QAAO,SAACC,EAAKqD,GACV,IAAMyW,EAAY9Z,EAAIhE,OAAS,EACzBgE,EAAI+Z,MAAM,EAAG/Z,EAAIhE,OAAS,GAC1B,GAEAge,EAAcha,EAAIA,EAAIhE,OAAS,IAAM,GAS3C,OAtBU,SAACie,EAAM3G,GACrB,IAAM4G,EAAgBR,GAAcO,GAC9BE,EAAmBT,GAAcpG,GAEvC,OAAQ4G,GAAiBC,GAAqBD,IAAkBC,EAYhDC,EAFKJ,EAAYA,EAAYhe,OAAS,IAAM,IAEzB7B,GAAMkJ,EAAKlJ,IACpC6F,EACG9D,OAAO,CAAC,CAACmH,KACZyW,EACG5d,OAAO,CAAC8d,EAAY9d,OAAOmH,OAGrC,MAMQgX,GAJC,SAAA3nB,GAAI,OAAI,SAAAyH,GAAG,OAAI,SAAA8D,GAAI,MAAK,CACpC,KAAQ4b,GAAY1f,EAAZ0f,CAAiB5b,IAC1BvL,MCjCG4nB,GAAgB,SAAArc,GAAI,OAAIA,EACzB8B,QAAO,SAACC,EAAD,GAAoB,IAClBT,EADiB,EAAXtB,KAEPxM,KAAI,SAAAmC,GAAC,OAAIA,EAAEK,KAIhB,OAFA+L,EAAI0J,KAAJ,MAAA1J,EAAG,aAAST,IAELS,IACR,KAEDua,GAAe,SAACtc,GAClB,IAAMuc,EAAYF,GAAcrc,GAIhC,OAFiBwc,aAAMjc,KAAKkc,IAAKF,IAK/BG,GAAe,SAAC1c,GAClB,IAAMuc,EAAYF,GAAcrc,GAE1B2c,EAAWH,aAAMjc,KAAKqc,IAAKL,GAEjC,OAAOI,EAAW,EACZ,EACAA,GAGJE,GAAW,SAAC,EAAD,WACX5N,SAAU6N,OADC,MACO,GADP,MAEX7N,SAAU8N,OAFC,MAEO,GAFP,SAGZ,IAAIzN,KAAKwN,GAAOnB,UAAY,IAAIrM,KAAKyN,GAAOpB,WAE3CqB,GAAa,SAAClM,GAChB,IAAMmM,EAAO,IAAI3N,KAAKwB,GAChBoM,EAAQD,EAAKE,WAAa,EAC1BC,EAAOH,EAAKI,UAClB,MAAM,GAAN,OAAUJ,EAAKK,cAAf,YAAgCJ,EAAQ,GAAR,WAAiBA,GAAUA,EAA3D,YAAoEE,EAAO,GAAP,WAAgBA,GAASA,IAoB3FG,GAAiB,SAAC,GAA8C,IAjBhDngB,EAiBI4C,EAA2C,EAA3CA,KAAMwd,EAAqC,EAArCA,QAAqC,IAA5BC,iBAA4B,MAAhB,UAAgB,EAI3DC,EAHe1d,EAChB2N,QAAO,SAAAvI,GAAI,OAAIA,EAAK6J,UAAY,MAAM1G,KAAKnD,EAAKoY,OAGhDvd,KAAK4c,IAEJc,EAAcvB,GAAQ,OAARA,CAAgB,WAAhBA,CAA4BsB,GAC1CE,GAzBYxgB,EAyBkBugB,EAzBP,SAAAH,GAAO,OAAI,SAAAC,GAAS,OAAIrgB,EACpD5J,KAAI,SAAC2K,GACF,IAAMhC,EAAQgC,EACT2D,QAAO,SAACC,EAAKsT,GAAN,OAAmBA,EAAQmI,IAAY,GAAKzb,IAAK,GAQ7D,MAAO,CACH/L,EAPiB,CACjB,QAAWuK,KAAKoT,MAAMxX,EAAQgC,EAAMJ,QACpC,IAAO5B,EACP,MAASgC,EAAMJ,QAIC0f,GAChB9nB,EAAGqnB,GAAW7e,EAAM,GAAG8Q,iBAYkBuO,EAA3BK,CAAoCJ,GAE1D,OAAOG,GAGLE,GAAkB,SAACC,GAAD,OAAUA,EAAKC,MAClCxqB,KAAI,YAA2D,IAAxDmmB,EAAuD,EAAvDA,MAAO3kB,EAAgD,EAAhDA,MAAOwoB,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,UACrBzd,EADqD,EAArBA,MACb+d,EAAK/d,MAAQ,GAChC4d,EAAgBL,GAAe,CAAEvd,OAAMwd,UAASC,cAEtD,OAAOG,EAAc7f,QACb,CACApK,GAAIgmB,EACJ3kB,QACAgL,KAAM4d,MAGjBjQ,OAAOiD,UAENqN,GAAqB,SAAC5kB,EAASpD,EAAOioB,GACxC,MAA6BA,EACxBpc,QAAO,YAAuC,IAAD,mBAApCqc,EAAoC,KAA7BC,EAA6B,8DAAP,GAAO,IAArBpe,YAAqB,MAAd,GAAc,EACpCqe,EAAere,EAAK,GAAGrK,EACvB2oB,EAAate,EAAKA,EAAKjC,OAAS,GAAGpI,EAEzC,MAAO,EACFwoB,GAAS,IAAI7O,KAAK+O,GAAgBF,EAC7B,IAAI7O,KAAK+O,GACTF,GACLC,GAAO,IAAI9O,KAAKgP,GAAcF,EACzB,IAAI9O,KAAKgP,GACTF,KAEX,IAbP,mBAAOG,EAAP,KAAkBC,EAAlB,KAoBMC,EAAmBplB,EACpBsU,QAAO,WAAoB,IAAD,yDAAP,GAATmD,EAAgB,EAAhBA,KACD4N,EAAc,IAAIpP,KAAKwB,GAE7B,OAAO4N,EAAcH,GAAaG,EAAcF,KAEnDhrB,KAAI,SAAC4R,GAAD,oBACD7M,KAAM,IACN4D,MAAO,IAAImT,KAAKlK,EAAK0L,MAAM6K,UAC3BnjB,OAA6B,UAArB4M,EAAK+K,YACP/K,EAAKyH,YACL,IACF5W,EAAMiC,OAAOmB,SAjBL5E,EAiBwB2Q,EAAK+K,YAjBnB,CAC1BwO,MAAO,UACPC,MAAO,aACRnqB,IAAS,cAcsD,IAjB/C,IAACA,KAoBpB,OAAOgqB,GAGLI,GAAe,SAACC,GAClB,IAAMC,EAAY,UAAMD,GAClBE,EAAUze,KAAKC,KAA2B,GAAtBue,EAAahhB,QAEvC,EAAoBghB,EACfnK,MAAM,IACNqK,aAAY,WAAgC7Z,EAAM8Z,GAAW,IAAD,0BAA9Cnd,OAA8C,MAAxC,GAAwC,SAApCod,OAAoC,SACrDC,EAASC,SAASja,GAEhBka,EAAcH,EACdC,EAAS,EACTA,EAGAzL,EAAkB,IAAVuL,IAAgBI,EAAc,GAAMJ,EAAQF,GAAWM,EAAc,GAE7E9N,EAAWmC,GAASuL,EAAQF,EAC5B,EACAM,EAEN,MAAO,CAAC,GAAD,oBAEIvd,GAFJ,CAGCyP,IAEJmC,KAEL,IAIP,OA3BA,oBAyByB4L,UAAUnjB,KAAK,KC1ItCojB,GAAU,SAAAC,GAAmB,OAAI,SAAAzf,GAEnC,IAAM0f,EAAY,SAACC,GACf,IAAMhG,EAAQgG,EAAMC,QACdC,EAAgBF,EAAM3f,KAAK8f,WAC3BC,EAAgBJ,EAAM3f,KAAKggB,WAEjC,GAAsCP,EACjCpa,MAAK,SAAA1P,GAAC,OAAIA,EAAEhC,KAAOgmB,MAAU,IAD1B3Z,KAGFigB,QAHN,MAA+B,GAA/B,GAIK5a,MAAK,gBAAG1P,EAAH,EAAGA,EAAGK,EAAN,EAAMA,EAAN,OAAcL,IAAMkqB,GAAiB7pB,IAAM+pB,KAMrD,OAJiBE,EACXA,EAAeC,UACfH,GAKJI,EAAO,SAAC,GAAD,IAAGnrB,EAAH,EAAGA,MAAH,OAAe,sBACxB6lB,MAAO,CACHlkB,QAAS,QACTD,MAAO,OACPnB,OAAQ,OACR0B,WAAYjC,MAIdorB,EAAS9gB,YAAO,GAAI,CAAC,QAAS,UAAWU,GAC/C,OACI,cAAC,KAAD,CACIqgB,KACID,EACK5sB,KAAI,SAACmsB,GAAD,MAAW,CACZ,cAACQ,EAAD,CAAMnrB,MAAO2qB,EAAMW,aACnBX,EAAMC,QACN,iCAASF,EAAUC,aAOrCY,GAAOhF,IAAa,WAMd,IAAD,yDAAP,GALAzgB,EAKO,EALPA,MAKO,IAJPkF,YAIO,MAJA,GAIA,MAHP3G,eAGO,MAHG,GAGH,MAFPmnB,mBAEO,SADPxmB,EACO,EADPA,QAEM/D,EAAQwqB,eAERC,EAAW1gB,EACZqF,MAAK,wEAAa,GAAVsb,EAAH,EAAGA,MAAH,MAA8B,SAAVA,MAAqB,CAAE3gB,KAAM,GAAIge,MAAO,IAChE4C,EAAgB9C,GAAgB4C,GAChCG,EAAevE,GAAasE,GAC5BE,EAAepE,GAAakE,GAE5BG,EAAY/gB,EACbqF,MAAK,wEAAa,GAAVsb,EAAH,EAAGA,MAAH,MAA8B,UAAVA,MAAsB,CAAE3gB,KAAM,GAAIge,MAAO,IACjEgD,EAAiBlD,GAAgBiD,GACjCE,EAAgB3E,GAAa0E,GAG7BvB,EAAsBuB,EACvBxtB,KAAI,WAAgB,IAAf4R,EAAc,uDAAP,GACHwY,EAAgBxY,EAAKpF,KACtBxM,KAAI,SAAC0tB,GAAD,MAAe,CAChBlrB,EAAGuK,KAAKoT,MAAMuN,EAASlrB,GAAK6qB,EAAeI,IAC3CtrB,EAAGurB,EAASvrB,EACZuqB,UAAWgB,EAASlrB,MAG5B,OAAO4nB,EAAc7f,QAAd,2BACAqH,GADA,IAEHpF,KAAM4d,OAGbjQ,OAAOiD,SAENuQ,EAAmBrmB,EACnB,GACA4lB,EAAS1C,MAEToD,EAAoBL,EAAU/C,MAE9BrlB,EAAU6nB,EACV,CACE,CACIa,OAAQ,YACRC,UAAW,SACXC,SAAS,EACTC,YAAa,GACbC,WAAY,GACZC,aAAc,EACdC,cAAe,gBACfC,UAAW,GACXC,WAAY,GACZC,YAAa,EACbC,WAAY,GACZC,YAAa,SACbC,kBAAmB,oBACnBC,aAAa,EACbC,cAAelsB,EAAME,QAAQY,KAAKR,UAGxC,GAEA2nB,EAAW0C,EAAc3iB,OAAOwhB,GAEhChB,EAAmBR,GAAmB5kB,EAASpD,EAAOioB,GAEtDkE,EAAU,SAACvW,GAAD,OAAWA,EAAMtK,MAAK,SAAA5L,GAAC,OAAImP,YAAO,GAAI,OAAQnP,GAAGoI,WAEjE,OAAOqkB,EAAQlE,IACX,sBAAKnkB,UAAWC,EAAQmhB,uBAAxB,UACI,sBAAKphB,UAAWC,EAAQghB,YAAxB,UACI,cAAC,GAAD,CAAcvmB,KAAK,OAAOsC,KAAM+D,EAAO+Q,MAAOsV,IAE1CC,GACO,cAAC,GAAD,CAAc3sB,KAAK,OAAOoX,MAAOuV,OAIhD,qBAAKrnB,UAAWC,EAAQshB,UAAxB,SACI,cAAC,KAAD,qCACIre,OAAQ,CAAEolB,IAAK,GAAI/V,MAAO,GAAIoO,OAAQ,GAAIrO,KAAM,IAChDrM,KAAMke,EACNoE,OAAM,uBACC5B,EAAS1C,MAAMxqB,KAAI,SAAAmC,GAAC,OAAIA,EAAEX,UAD3B,aAEC+rB,EAAU/C,MAAMxqB,KAAI,SAAAmC,GAAC,OAAIA,EAAEX,WAElCutB,UAAW,EACXC,MAAM,YACNC,SAAS,EACTP,YAAa1B,IAAe,EAC5BkC,OAAQ,CACJjuB,KAAM,OACNkuB,OAAQ,YAEZC,QAAQ,gBACRC,OAAQ,CACJpuB,KAAM,SACNmoB,IAAKkE,EACLrE,IAAKoE,GAETiC,WAAY,CACRH,OAAQ,QACRI,SAAU,EACVC,YAAa,GACbC,cAAe,IAEnBtqB,QAASA,EACTuqB,SAAU,CACNH,SAAU,EACVI,WAAY,GAEhBC,kBAAmB,GAEf3E,EAAiB1gB,QACV,CAAE1E,QAASolB,IAIlBgB,EAAoB1hB,QACb,CACCslB,UAAW,CACPN,SAAU,EACVI,WAAY,EACZR,OAAQ,SAACW,GACL,IAAMC,EAAiBhjB,KAAKoT,MAAM2P,GAAgBrC,EAAgBJ,IAClE,OAAOhC,GAAa0E,OA9C5C,IAmDIC,aAAa,EACbC,aAAa,IACbC,aAAclE,GAAQC,GACtBxpB,MAAOA,EAAMiC,kBAOlBqoB,MC7GArJ,gBALS,SAAC/B,GAAD,MAAY,CAChCpW,aAAcoW,EAAMpW,aACpBI,SAAUgW,EAAMhW,YAGL+X,EArFW,WAGd,IAAD,yDAAP,GAAO,IAFPnY,oBAEO,MAFQ,GAER,MADPI,gBACO,MADI,GACJ,EACP,EAAiBshB,eAAThsB,EAAR,EAAQA,KACR,OACI,eAACylB,EAAD,WACI,cAAC,EAAD,CACIpf,MAAM,sBADV,SAIQqE,EAASpB,OAAS,GAAK,8BACnB,cAAClE,EAAD,mIAIZ,cAAC,GAAD,CACIR,QAAS8F,EACTa,KAAM,CACF,CACIge,MAAO,CACH,CACIrE,MAAO,WACP3kB,MAAO,UACPwoB,QAAS,YAEb,CACI7D,MAAO,YACP3kB,MAAO,UACPwoB,QAAS,cAGjBmD,MAAO,OACP3gB,KAAMjB,GAEV,CACIif,MAAO,CACH,CACIrE,MAAO,UACP3kB,MAAgB,SAATP,EAAkB,UAAY,OACrC+oB,QAAS,WAGjBmD,MAAO,QACP3gB,KAAMjB,MAKlB,cAAC,GAAD,CACI1F,QAAS8F,EACTa,KAAM,CACF,CACIge,MAAO,CACH,CACIrE,MAAO,aACP3kB,MAAO,UACPwoB,QAAS,QAGjBmD,MAAO,OACP3gB,KAAMjB,GAEV,CACIif,MAAO,CACH,CACIrE,MAAO,UACP3kB,MAAgB,SAATP,EAAkB,UAAY,OACrC+oB,QAAS,WAGjBmD,MAAO,QACP3gB,KAAMjB,YC1ExB4kB,GAAkB,eAAC3jB,EAAD,uDAAQ,GAAR,OAAeA,EAClCxM,KAAI,SAAC4R,GAAD,oBACD6J,SAAU7J,EAAK6J,UAEX7J,EAAK4K,MACC,CAAE4T,IAAK,GACP,CAAEC,MAAO,QAmDZ3M,gBALS,SAAC/B,GAAD,MAAY,CAChCjW,OAAQiW,EAAMjW,OACdC,SAAUgW,EAAMhW,YAGL+X,EA/CM,WAGT,IAAD,yDAAP,GAAO,IAFPhY,cAEO,MAFE,GAEF,MADPC,gBACO,MADI,GACJ,EACDa,EAAO2jB,GAAgBzkB,GAE7B,OAAOc,GAAQA,EAAKjC,OAAS,GACzB,eAACmc,EAAD,WACI,cAAC,EAAD,CACIpf,MAAM,yBADV,SAGI,8BACI,cAACjB,EAAD,0GAGR,cAAC,GAAD,CACIR,QAAS8F,EACTa,KAAM,CACF,CACIge,MAAO,CACH,CACIrE,MAAO,SACP3kB,MAAO,UACPwoB,QAAS,QACTC,UAAW,SAEf,CACI9D,MAAO,OACP3kB,MAAO,UACPwoB,QAAS,MACTC,UAAW,UAGnBkD,MAAO,OACP3gB,iB,UC/CT8jB,GALM,SAAAC,GAAS,OAAI,SAAA7vB,GAAI,OAAIA,EACrCqN,MAAK,SAAArF,GAAG,OAAI6nB,EACRxiB,MAAK,SAAA2f,GAAQ,OAAIA,EAAShlB,WCO7B8nB,GAAMzI,IAAa,WASb,IAAD,yDAAP,GAAO,IARPvb,YAQO,MARA,GAQA,MAPPikB,YAOO,MAPA,GAOA,MANPC,cAMO,MANE,WAMF,MALPC,eAKO,MALG,OAKH,MAJP1H,WAIO,MAJD,GAIC,EAHPziB,EAGO,EAHPA,QAGO,IAFPoqB,cAEO,MAFE,WAEF,MADPC,mBACO,MADO,GACP,EACDpuB,EAAQwqB,eACR6D,EAAc3W,aAAO,SAAAvI,GAAI,OAAI6e,EAAK1iB,MAAK,SAAA5L,GAAC,OAAIyP,EAAKzP,EAAE6nB,cAAWxd,GAE9DukB,EAAa,SAAAhZ,GAAI,OAAI,SAACrL,EAAGC,GAAJ,SACpBD,EAAEqL,IAAS,IAAMpL,EAAEoL,IAAS,QAAUrL,EAAEqL,IAAS,MAAQpL,EAAEoL,IAAS,IAAM,IAE3EmS,EAAawG,EACbI,EAAYrkB,KAAKskB,EAAWL,IAC5BI,EAEAE,EAAY/H,EACZiB,EAAW5B,MAAM,EAAGW,EAAM,GAC1BiB,EAEAxpB,EAAO+vB,EAAKzwB,KAAI,SAAAmC,GAAC,OAAIA,EAAE6nB,WAE7B,OAAOsG,GAAa9jB,EAAb8jB,CAAmB5vB,IACtB,sBAAK6F,UAAWC,EAAQihB,sBAAxB,UACI,cAAC,GAAD,CAAclkB,KAAMstB,EAAaxY,MAAOoY,IACxC,qBAAKlqB,UAAWC,EAAQshB,UAAxB,SACI,cAAC,KAAD,CACItb,KAAMwkB,EACNtwB,KAAMA,EACNiwB,QAASA,EACTlnB,OAAQ,CAAEolB,IAAK,EAAG/V,MAAO,GAAIoO,OAAQ,GAAIrO,KAAM,IAC/C5Q,QAAS,GACTgpB,UAAU,UACVL,OAAQA,EACRM,YAAa,SAACvoB,GAAD,MAAsB,eAAXioB,EAAA,UACf7jB,KAAKokB,IAAIxoB,IACZA,GACNmmB,OAAQ2B,EAAKzwB,KAAI,SAAAmC,GAAC,OAAIA,EAAEX,SACxB8tB,WAAY,CACRC,SAAU,EACVE,cAAe,IAEnBC,SAAU,CACNH,SAAU,GAEd6B,aAAa,EACbnC,SAAS,EACTxsB,MAAOA,EAAMiC,iBAOlB8rB,M,UCnEf,GAAuB3N,EAAQ,IAAvBvK,GAAR,GAAQA,KAAMP,GAAd,GAAcA,KAERsZ,GAAc,SAAC7kB,EAAM9D,GACvB,IAAM4oB,EAAa9kB,EACd8B,QAAO,SAACC,EAAKiR,GACV,IAAM/G,EAAS+G,EAAS/G,OAClB8Y,EAAU/R,EAAS9W,IAAQ,GAC3B8oB,EAAQ7wB,OAAOmN,OAAOyjB,GAASjjB,QAAO,SAACC,EAAKsT,GAAN,OAAkBtT,EAAMsT,IAAS,GAE7E,OAAOlhB,OAAOyP,OAAO7B,EAAd5N,OAAA,KAAAA,CAAA,GAAsB8X,EAAS+Y,MACvC,IAEDC,EAAe9wB,OAAOqY,QAAQsY,GAC/B7kB,MAAK,kBAAIC,EAAJ,+CAAsBA,KAE1B2J,EAAQob,EACTnjB,QAAO,SAACC,EAAD,8BAA4BA,IAAK,GAU7C,EAAsBkjB,EACjBnjB,QAAO,cAGF,IAAD,IAFCojB,kBAED,MAFc,EAEd,MAFiBC,iBAEjB,MAF6B,GAE7B,qBADAlZ,EACA,KADQ9P,EACR,KACKipB,EAZY,SAACjpB,GAIvB,OAFkBA,GADK,IAAM0N,GAWLwb,CAAkBlpB,GAGtC,MAAO,CACH+oB,WAHkBA,EAAaE,EAI/BD,UAAWhpB,EAAQ,GAAKipB,EAAc,EAA3B,uBAEAD,GAFA,CAGHlZ,IAEFkZ,KAEX,IAjBCA,EAAR,EAAQA,UAoBR,OAAOA,EAAUpnB,SAAWiC,EAAKjC,OAAS,EACpCknB,EAAazxB,KAAI,0CACjB2xB,GAsEKG,GArBS,SAACtlB,EAAM9D,GAC3B,IAAMipB,EAAYN,GAAY7kB,EAAM9D,GAC9BqpB,EAAeJ,EAAUpnB,OAASiC,EAAKjC,OAEvCynB,EAlDQ,SAACxlB,EAAM9D,EAAKipB,EAAWI,GACrC,IAAME,EAAa,SAACC,GAAD,IAAc1lB,EAAd,uDAAqB,GAArB,OAA4B7L,OAAOqY,QAAQxM,GACzD8B,QAAO,SAACC,EAAD,0BAAO4jB,EAAP,KAAaxpB,EAAb,YAAwBupB,EAAYnkB,MAAK,SAAA5L,GAAC,OAAIA,IAAMgwB,KACtD5jB,EACAA,EAAM5F,IAAO,IAEjBypB,EAAY,SAACxgB,GAAD,6BACX+f,EAAU3xB,KAAI,SAAAmC,GAAC,OAAImW,GAAK,CAAC5P,EAAKvG,GAAIyP,IAAS,MADhC,aAGVmgB,EACM,CAACE,EAAWN,EAAW5Z,GAAKrP,EAAKkJ,KACjC,MAIRygB,EAAqBV,EACtB3xB,KAAI,SAACmyB,GACF,IAAMG,EAAW9lB,EAAKqF,MAAK,SAAA1P,GAAC,OAAIA,EAAEsW,SAAW0Z,KAC7C,OAAOC,EAAUE,MAGnBC,EAAoB/lB,EACrB2N,QAAO,gBAAG1B,EAAH,EAAGA,OAAH,OAAiBkZ,EAAU5jB,MAAK,SAAA5L,GAAC,OAAIA,IAAMsW,QAClDnK,QAAO,SAACC,EAAKqD,GACV,IAEM4gB,EAFgBJ,EAAUxgB,GAG3B5R,KAAI,SAAC2I,EAAOmZ,GAAR,OAAcnZ,GAAS4F,EAAIuT,IAAM,MAG1C,MAAM,GAAN,oBACO0Q,EAAalK,MAAM,EAAGkK,EAAajoB,OAAS,IADnD,CAEI,MAEL,IAEP,MAAM,GAAN,oBACO8nB,GADP,aAGQE,EAAkBhoB,OACZ,CAACgoB,GACD,KASCE,CAAUjmB,EAAM9D,EAAKipB,EAAWI,GAW/C,MAAO,CACHW,MAVO,uBACJf,GADI,aAGHI,EACM,CAAC,UACD,KAMVC,WChHOlD,GAFA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WCS5E6D,GAAQ5K,IAAa,WAKf,IAAD,yDAAP,GAJAzgB,EAIO,EAJPA,MAIO,IAHPkF,YAGO,MAHA,GAGA,MAFPwd,eAEO,MAFG,GAEH,EADPxjB,EACO,EADPA,QAEM/D,EAAQwqB,eACd,EAGI6E,GAAgBtlB,EAAMwd,GAFtB0I,EADJ,EACIA,MACAV,EAFJ,EAEIA,OAGEY,EAAgB,SAACZ,GAAD,OAAYA,EAC7BjkB,MAAK,SAAA8kB,GAAG,OAAIA,EACR9kB,KAAKqP,aAGd,OAAOwV,EAAcZ,IACjB,gCACI,cAAC,GAAD,CAAczuB,KAAM+D,EAAOf,UAAWC,EAAQ8gB,gBAC9C,qBAAK/gB,UAAWC,EAAQohB,UAAxB,SACI,cAAC,KAAD,CACIzB,MAAM,KACN3Z,KAAMwlB,EACNtxB,KAAMgyB,EACNjpB,OAAQ,CAAEolB,IAAK,EAAG/V,MAAO,GAAIoO,OAAQ,GAAIrO,KAAM,IAC/Cia,eAAgB,CAAEC,KAAM,QAASC,UAAW,CAAC,CAAC,SAAU,MACxDC,cAAe,GACfC,kBAAmB,GACnBC,kBAAmB,CAAEJ,KAAM,QAASC,UAAW,CAAC,CAAC,SAAU,MAC3DI,iBAAkB,IAClBC,cAAe,EACfC,SAAU,IACVC,kBAAmB,IACnBC,aAAc,GACdC,eAAgB,CAAEV,KAAM,QAASC,UAAW,CAAC,CAAC,SAAU,KACxDlE,OAAQA,GACR4E,eAAe,EACfC,gBAAiB,EACjBC,sBAAuB,IACvBC,mBAAoB,IACpBC,yBAA0B,IAC1B7E,SAAS,EACT8E,gBAAiB,GACjBC,cAAe,EACfvxB,MAAOA,EAAMiC,iBAOlBiuB,MCwBAjP,gBAJS,SAAC/B,GAAD,MAAY,CAChCzJ,UAAWyJ,EAAMzJ,aAGNwL,CAAyBpd,aARzB,SAAA7D,GAAK,MAAK,CACrBQ,cAAeR,EAAME,QAAQM,iBAOOqD,EA3ErB,WAGP,IAAD,yDAAP,GAAO,IAFP4R,iBAEO,MAFK,GAEL,EADP1R,EACO,EADPA,QAEA,OACI,eAACkgB,EAAD,WACI,cAAC,EAAD,CACIpf,MAAM,4BADV,SAGI,8BACI,cAACjB,EAAD,uNAKJ6R,EAAU3N,OAAS,GAEX,qCACI,sBAAKhE,UAAWC,EAAQvD,cAAxB,UACI,cAAC,GAAD,CAAOuJ,KAAM0L,EAAW8R,QAAQ,iBAAiB1iB,MAAM,0BACvD,cAAC,GAAD,CAAOkF,KAAM0L,EAAW8R,QAAQ,kBAAkB1iB,MAAM,8BAE5D,cAAC,GAAD,CACIkF,KAAM0L,EACNyY,QAAQ,SACRE,YAAY,WACZH,OAAO,gBACPzH,IAAK,EACLwH,KAAM,CACF,CACIzG,QAAS,gBACTxoB,MAAO,UACP2kB,MAAO,SAEX,CACI6D,QAAS,mBACTxoB,MAAO,UACP2kB,MAAO,eAInB,cAAC,GAAD,CACI3Z,KAAM0L,EACNyY,QAAQ,SACRE,YAAY,OACZH,OAAO,oBACPzH,IAAK,EACLwH,KAAM,CACF,CACIzG,QAAS,oBACTxoB,MAAO,UACP2kB,MAAO,YAEX,CACI6D,QAAS,WACTxoB,MAAO,UACP2kB,MAAO,uB,UCzDzC8N,GAAQlM,IAAa,WAQf,IAAD,yDAAP,GAAO,IAPPzgB,aAOO,MAPC,GAOD,MANP4sB,kBAMO,MANM,GAMN,MALP1nB,YAKO,MALA,GAKA,MAJP9L,YAIO,MAJA,GAIA,MAHPwC,aAGO,MAHC,IAGD,MAFPnB,cAEO,MAFE,IAEF,EADPyE,EACO,EADPA,QAEM/D,EAAQwqB,eACRkH,EAAgB3nB,EACjB8B,QAAO,SAACC,EAAKqD,GAAN,OAAerD,EAAI9D,OACvB/J,EACKV,KAAI,SAAA0I,GAAG,OAAIkJ,EAAK,GAAD,OAAIlJ,EAAJ,mBACrB,IAEP,OAAO4nB,GAAa9jB,EAAb8jB,CAAmB5vB,IACtB,gCACI,cAAC,GAAD,CAAc6F,UAAWC,EAAQ8gB,cAAejP,MAC5C6b,EAAW3pB,OACL2pB,EACA,CAAC,CAAE/N,MAAO7e,MAEpB,cAAC,KAAD,CACIpE,MAAOA,EACPnB,OAAQA,EACR0H,OAAQ,CAAEolB,IAAK,EAAG3H,OAAQ,EAAGpO,MAAO,IAAKD,KAAM,KAC/Cub,QAAS,EACTC,eAAgB5xB,EAAMiC,OAAOc,SAC7B8uB,eAAgB,EAChBxF,OAAQ,CAAC,UAAW,WACpByF,UAAU,SACVC,gBAAgB,EAChBC,gBAAiB,GACjBC,WAAY,EACZzF,SAAS,EACT0B,QAAQ,OACRjwB,KAAMA,EACN8L,KAAMA,EACNmoB,SAAU,IACVlyB,MAAOA,EAAMiC,OACbkwB,cAAe,IACfC,UAAW,IACXC,cAAe,kBAAMX,EAAcY,iBAMpCd,MC4CAe,GAtGS,SAACxV,EAAUyV,GAE/B,IAAMC,EAAgB,CAClBtZ,IAAK,EACLsC,eAAgB,EAChBoC,kBAAmB,EACnBhC,kBAAmB,EACnBC,qBAAsB,EACtBH,cAAe,EACfC,iBAAkB,EAClBG,qBAAsB,EACtBC,wBAAyB,EACzB9C,OAAQ,EACR+C,SAAU,EACVyW,kBAAmB,EACnBxW,uBAAwB,GAGtByW,EAAuB5V,EACxBrF,QAAO,SAAAhY,GAAC,OAAI8yB,GACP9yB,EAAEsW,SAAWwc,KAElB9a,QAAO,kBAKF,CALE,EACJiE,cADI,EAEJC,iBAFI,EAGJH,eAHI,EAIJoC,mBAMFvS,MAAK,SAAA5L,GAAC,OAAIA,EAAI,QAEdzB,EAAO,CACT,gBACA,mBACA,iBACA,qBAGE+f,EAAc2U,EACf3oB,MAAK,SAACC,EAAGC,GACN,IAAM+T,EAAShgB,EACV4N,QAAO,SAACC,EAAK7F,GAAN,OAAc6F,GAAO7B,EAAEhE,IAAQ,KAAI,GAI/C,OAFehI,EACV4N,QAAO,SAACC,EAAK7F,GAAN,OAAc6F,GAAO5B,EAAEjE,IAAQ,KAAI,GAC/BgY,KAGlB2U,EAAMtoB,KAAKC,KAAKyT,EAAYlW,OAAS,IAAM,IAC3C+qB,EAAWD,EAAM,GACjB5U,EAAY6H,MAAM,EAAG+M,GACrB5U,EAEA8U,EAAWD,EACZnb,QAAO,SAAAhY,GAAC,OAAK8yB,GAAgB9yB,EAAEsW,SAAWwc,KAC1C3mB,QAAO,SAAC+H,EAAOnJ,GACZ,IAAMsoB,EAAY70B,OAAOqY,QAAQ9L,GAC5BiN,QAAO,gBAAIxR,EAAJ,2BAAgB6U,MAAMC,QAAQ9U,IAAU,QAAQoM,KAAKpM,IAAUA,EAAQ,KAC9E2F,QAAO,SAACmnB,EAAD,0BAAgB/sB,EAAhB,KAAqBC,EAArB,YAAgChI,OAAOyP,OAAOqlB,EAAd90B,OAAA,KAAAA,CAAA,GAA+B+H,EAAMC,GAAS0N,EAAM3N,IAAQ,OAAO,IAE/G,OAAO/H,OAAOyP,OAAOiG,EAAOmf,KAC7B,IAEDjd,EAAY+c,EAAS/qB,OACrBmrB,EAAe/0B,OAAOqY,QAAQuc,GAC/BjnB,QAAO,SAACC,EAAD,EAAoBuT,GAApB,uBAAOpZ,EAAP,KAAYC,EAAZ,YACJhI,OAAOyP,OACH7B,EADJ5N,OAAA,KAAAA,CAAA,GACY+H,EAAMqE,KAAKoT,MAAMxX,EAAQ4P,OAHxB5X,OAAA,IAAAA,QAAA,IAAAA,CAAA,GAILu0B,GAJK,IAIUhoB,KAAM,QAASqL,eAGxCL,EAAYsH,EACb3N,MAAK,SAAA1P,GAAC,OAAIA,EAAEsW,SAAWwc,MAAiB,CAAEU,qBAAsB,IAiBrE,MAAO,CACHD,eACAE,UAjBcpW,EACblR,QAAO,SAACunB,EAAW3oB,GAChB,IAGM4oB,EAHkBn1B,OAAOqY,QAAQ9L,GAClCiN,QAAO,gBAAIxR,EAAJ,2BAAgB6U,MAAMC,QAAQ9U,IAAU,QAAQoM,KAAKpM,MAG5D2F,QAAO,SAACC,EAAD,GAAwB,IAAD,mBAAhB7F,EAAgB,KAAXC,EAAW,KACrBotB,EAAUF,EAAUntB,IAAQ,EAElC,OAAO/H,OAAOyP,OAAO7B,EAAd5N,OAAA,KAAAA,CAAA,GAAsB+H,EAAMqtB,EAAUptB,EAAQotB,EAAUptB,MAChE,IAEP,OAAOhI,OAAOyP,OAAOylB,EAAWC,KACjCZ,GAKHrd,MAAO2H,EACPtS,KAAM+nB,EACA/c,EACA,KCzFR8d,GAA4B,SAAC,GAAoC,IAAD,IAAjCJ,iBAAiC,MAArB,GAAqB,MAAjB/d,MAC3CnX,EAAO,CACT,gBACA,mBACA,iBACA,qBAGEu1B,QAR4D,MAAT,GAAS,GAS7DxpB,MAAK,SAACC,EAAGC,GACN,IAAM+T,EAAShgB,EACV4N,QAAO,SAACC,EAAK7F,GAAN,OAAc6F,GAAO7B,EAAEhE,IAAQ,KAAI,GAI/C,OAFehI,EACV4N,QAAO,SAACC,EAAK7F,GAAN,OAAc6F,GAAO5B,EAAEjE,IAAQ,KAAI,GAC/BgY,KAEnB4H,MAAM,EAAG,GAERjQ,EAAQ,CACV,CACI6d,KAAM,gBACN1E,MAAO,oBACP2E,SAAU,wBAEd,CACID,KAAM,cACN1E,MAAO,uBACP2E,SAAU,2BAEd,CACID,KAAM,YACN1E,MAAO,iBACP2E,SAAU,sBA+BlB,OA3BkBF,EACbj2B,KAAI,SAAAkN,GACD,IAAMV,EAAO6L,EACRrY,KAAI,YAA+B,IAA5Bk2B,EAA2B,EAA3BA,KAAM1E,EAAqB,EAArBA,MAAO2E,EAAc,EAAdA,SACXC,EAAgBlpB,EAAKskB,IAAU,EAC/B6E,EAAmBnpB,EAAKipB,IAAa,EAE3C,MAAO,CACHD,OACA1E,MAAO4E,EACAA,GAAiBR,EAAUpE,IAAU,GAAM,IAC5C,EACN2E,SAAUE,EACHA,GAAoBT,EAAUO,IAAa,GAAM,IAClD,EACNC,gBACAC,uBAIZ,MAAO,CACH/uB,MAAO4F,EAAKuL,OACZjM,OACA9L,KAAM,CAAC,QAAS,iBAuCjBgjB,gBAJS,SAAC/B,GAAD,MAAY,CAChCzJ,UAAWyJ,EAAMzJ,aAGNwL,EAhCI,WAEP,IAAD,yDAAP,GAAO,IADPxL,iBACO,MADK,GACL,EACDoe,EAAYtB,GAAgB9c,GAE5Bqe,EAAqBP,GAA0BM,GAErD,OACI,eAAC5P,EAAD,WACI,cAAC,EAAD,CACIpf,MACI,qCACI,cAACV,EAAD,CAAGC,MAAO,EAAV,kCACA,eAACD,EAAD,CAAGC,MAAO,EAAV,qCAAqC,sBAAMwgB,MAAO,CAAE7lB,MAAO,WAAtB,mBAArC,QAAyF,sBAAM6lB,MAAO,CAAE7lB,MAAM,WAArB,4BAGjG+F,MAAM,wFAINgvB,EAAmBhsB,OAAS,GACrBgsB,EACEv2B,KAAI,SAACypB,EAAM3H,GAAP,OAAa,cAAC,GAAD,eAAmB2H,GAAP3H,YCvCvC4B,gBAJS,SAAC/B,GAAD,MAAY,CAChCzJ,UAAWyJ,EAAMzJ,cAhBM,SAAA3B,GAAQ,MAAK,CACpCoK,QAAS,SAACxe,GAAD,OAAOoU,EAASigB,GAAcr0B,QAkB5BuhB,CAA6Cpd,aAf7C,SAAA7D,GAAK,MAAK,CACrB,UAAa,CACTU,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChB,WAAY,CACR8D,SAAU,OASsCb,EAhD3C,wEAIb,GAJa,IACb4R,iBADa,MACD,GADC,EAEbyI,EAFa,EAEbA,QACAna,EAHa,EAGbA,QAHa,OAIN,mCACP,eAACkgB,EAAD,CAAOngB,UAAU,UAAjB,UACI,cAACK,EAAD,CAAGC,MAAO,EAAV,wBAGA,qBAAKN,UAAWC,EAAQiwB,UAAxB,SAEQve,EACKlY,KAAI,WAAa8hB,GAAb,IAAGrJ,EAAH,EAAGA,OAAH,OACD,cAAC,EAAD,CACI9P,MAAO8P,EAEPjX,MAAM,YACNqG,QAAS,SAACtH,GACNA,EAAEuH,iBACF6Y,EAAQpgB,EAAEm2B,cAAc/tB,OACxBguB,QAAUA,OAAOC,SAAS,EAAG,KAL5B9U,iBCoBlB4B,gBALS,SAAC/B,GAAD,MAAY,CAChCe,SAAUf,EAAMe,SAChBH,eAAgBZ,EAAMY,kBAGXmB,EAvCS,WAAwC,IAAD,yDAAP,GAA7BhB,EAAoC,EAApCA,SAAUH,EAA0B,EAA1BA,eAE7BpU,EAGAuU,EAHAvU,IACAC,EAEAsU,EAFAtU,KACAiL,EACAqJ,EADArJ,YAGJ,OAAQkJ,GAAkBnU,GAAQD,EAE1B,cAACuY,EAAD,UACI,cAAC,EAAD,CACIpf,MACI,cAACV,EAAD,CAAGC,MAAO,EAAV,SAEQsH,IAAQC,EAEA,sBAAMiZ,MAAO,CAAE7lB,MAAO,WAAtB,SAAoC4M,IAGpC,qCACI,sBAAMiZ,MAAO,CAAE7lB,MAAO,WAAtB,SAAoC2M,IADxC,IACoD,sBAAMkZ,MAAO,CAAE7lB,MAAO,WAAtB,SAAoC4M,SAM5G7G,MAAO8R,MAKjB,QCpBKwd,GATE,kBAAM,qCACnB,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QCDEC,GAAU,UACVC,GAAU,UAEVC,GAAa,SAAC,EAMhBC,GACE,IALEvB,EAKH,EALGA,aACAE,EAIH,EAJGA,UACA1oB,EAGH,EAHGA,KA0CEgqB,EAAS,CACX,CACI1qB,KAjBa,SAAA6L,GAAK,OAAIA,EACzBrY,KAAI,YAAwB,IAAD,EAApBk2B,EAAoB,EAApBA,KAAMlM,EAAc,EAAdA,QACJmN,EAAejqB,EAAK8c,IAAY,EAChCoN,EAAgB1B,EAAa1L,IAAY,EACzC2K,EAAWiB,EAAU5L,IAAY,EAEvC,OAAO,EAAP,CACIkM,QADJ,eAEKe,EAAYE,EAAexC,EAAY,KAF5C,uBAGYyC,EAAgBzC,EAAY,KAHxC,yBAIQsC,EAJR,YAI6BE,GAJ7B,+BAKIC,GALJ,KAWMC,CAxCA,CACV,CACInB,KAAM,gBACNlM,QAAS,qBAEb,CACIkM,KAAM,cACNlM,QAAS,wBAEb,CACIkM,KAAM,YACNlM,QAAS,kBAEb,CACIkM,KAAM,aACNlM,QAAS,YAEb,CACIkM,KAAM,UACNlM,QAAS,YAsBTkK,WAAY,CACR,CAAE/N,MAAO8Q,EAAUz1B,MAAOs1B,IAC1B,CAAE3Q,MAAO,QAAS3kB,MAAOu1B,KAE7Br2B,KAAM,CAACu2B,EAAU,SACjB/zB,MAAO,IACPnB,OAAQ,MAIhB,OAAOm1B,GAGLI,GAAW,SAAC,GAGX,IAFH5B,EAEE,EAFFA,aAGM6B,EAAqB,CADzB,EADFrqB,KAEkCwoB,GAElC,MAAO,CACH,CACIjF,KAAK,CACD,CACIzG,QAAS,gBACTxoB,MAAOs1B,GACP3Q,MAAO,kBAEX,CACI6D,QAAS,mBACTxoB,MAAOu1B,GACP5Q,MAAO,sBAGfuK,OAAQ,GACRlkB,KAAM+qB,GAEV,CACI9G,KAAM,CACF,CACIzG,QAAS,iBACTxoB,MAAOs1B,GACP3Q,MAAO,mBAEX,CACI6D,QAAS,oBACTxoB,MAAOu1B,GACP5Q,MAAO,uBAGfuK,OAAQ,GACRlkB,KAAM+qB,GAEV,CACI9G,KAAM,CACF,CACIzG,QAAS,WACTxoB,MAAOs1B,GACP3Q,MAAO,cAEX,CACI6D,QAAS,oBACTxoB,MAAOu1B,GACP5Q,MAAO,iBAGfuK,OAAQ,GACRlkB,KAAM+qB,GAEV,CACI9G,KAAM,CACF,CACIzG,QAAS,SACTxoB,MAAOs1B,GACP3Q,MAAO,YAGfuK,OAAQ,GACRlkB,KAAM+qB,GAEV,CACI9G,KAAM,CACF,CACIzG,QAAS,MACTxoB,MAAOu1B,GACP5Q,MAAO,WAGfuK,OAAQ,GACRlkB,KAAM+qB,KAKZC,GAAa,WAAyC,IAAxChrB,EAAuC,uDAAhC,GAAIb,EAA4B,uDAAjB,GAAIsrB,EAAa,uCACjDQ,EAAejrB,EAChB2N,QAAO,wEAAgB,GAAbsB,EAAH,EAAGA,SAAH,OAAuBA,KAE7Bic,EAAaD,EACdtd,QAAO,qBAAG1B,SAAwBwe,KAEjCU,EAAaF,EACdtd,QAAO,qBAAG1B,SAAwBwe,KAEvC,MAAO,CACH,CACIpxB,QAAS8F,EACTa,KAAM,CAAC,CACHge,MAAO,CACH,CACIrE,MAAO,gBACP3kB,MAAOs1B,GACP9M,QAAS,gBACTxd,KAAMmrB,GAEV,CACIxR,MAAO,gBACP3kB,MAAOu1B,GACP/M,QAAS,gBACTxd,KAAMkrB,IAGdvK,MAAO,UAGf,CACItnB,QAAS8F,EACTa,KAAM,CAAC,CACHge,MAAO,CACH,CACIrE,MAAO,eACP3kB,MAAOs1B,GACP9M,QAAS,SACTxd,KAAMmrB,GAEV,CACIxR,MAAO,eACP3kB,MAAOu1B,GACP/M,QAAS,SACTxd,KAAMkrB,IAGdvK,MAAO,UAGf,CACItnB,QAAS8F,EACTa,KAAM,CAAC,CACHge,MAAO,CACH,CACIrE,MAAO,cACP3kB,MAAOs1B,GACP9M,QAAS,MACTxd,KAAMmrB,GAEV,CACIxR,MAAO,cACP3kB,MAAOu1B,GACP/M,QAAS,MACTxd,KAAMkrB,IAGdvK,MAAO,YAmHRzJ,gBA1BS,SAAC/B,GAAD,MAAY,CAChCpW,aAAcoW,EAAMpW,aACpBI,SAAUgW,EAAMhW,SAChBuM,UAAWyJ,EAAMzJ,UACjBhL,KAAMyU,EAAMzU,SAGW,SAAAqJ,GAAQ,MAAK,CACpCqhB,WAAY,SAACz1B,GAAD,OAAOoU,EzBhSE,CACrBtV,KAAMkR,GAAME,iByBiTDqR,CAA6Cpd,aAf7C,SAAA7D,GAAK,MAAK,CACrB,cAAiB,CACbS,MAAO,OACPC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAEpB4B,KAAM,CACF4yB,UAAW,QAEfC,UAAW,CACPzwB,WAAY5E,EAAMuB,UAAUxB,EAAED,UAIsB+D,EA7G3C,WAOL,IAAD,yDAAP,GAAO,IANPiF,oBAMO,MANQ,GAMR,MALPI,gBAKO,MALI,GAKJ,MAJPuM,iBAIO,MAJK,GAIL,EAHPhL,EAGO,EAHPA,KACA0qB,EAEO,EAFPA,WACApxB,EACO,EADPA,QAEM8vB,EAAYtB,GAAgB9c,EAAWhL,GACvCgqB,EAASF,GAAWV,EAAWppB,GAC/BujB,EAAO6G,GAAShB,GAChByB,EAASP,GAAWjsB,EAAcI,EAAUuB,GAElD,OACI,mCACI,eAACwZ,EAAD,WACI,cAAC,EAAD,CACIpf,MACI,eAACV,EAAD,CAAGC,MAAO,EAAV,UACI,sBAAMwgB,MAAO,CAAE7lB,MAAOs1B,IAAtB,SAAkC5pB,IAClC,cAAC,EAAD,CACI3G,UAAWC,EAAQsxB,UACnBjvB,QAAQ,WACRC,KAAK,QACLH,MAAM,oBACNnH,MAAM,YACNqG,QAAS,SAACtH,GACNA,EAAEuH,iBACF8vB,UAIhBrwB,MAAK,yCAAoC2F,EAApC,0CAA0EopB,EAAUZ,aAAand,UAAjG,UAhBT,SAkBI,gCACI,cAAClS,EAAD,oHACA,eAACK,EAAD,WACI,cAACC,EAAD,6DACA,cAACA,EAAD,+EACA,cAACA,EAAD,2CACA,cAACA,EAAD,kDAMRuwB,EAAO3sB,QAEC,qBAAKhE,UAAWC,EAAQvD,cAAxB,SAEQi0B,EACKl3B,KAAI,SAACypB,EAAM3H,GAAP,OAAa,cAAC,GAAD,eAAmB2H,GAAP3H,QAMlD2O,EAAKlmB,QACEkmB,EACEzwB,KAAI,SAACypB,EAAM3H,GAAP,OAAa,cAAC,GAAD,eAAiB2H,GAAP3H,MAGpCiW,EAAOxtB,QACAwtB,EACE/3B,KAAI,SAACypB,EAAM3H,GAAP,OAAa,cAAC,GAAD,eAAkB2H,GAAP3H,MAGzC,cAAC,EAAD,CACIvb,UAAWC,EAAQvB,KACnB4D,QAAQ,WACRC,KAAK,QACLH,MAAM,oBACNnH,MAAM,YACNqG,QAAS,SAACtH,GACNA,EAAEuH,iBACF8vB,IACAjB,QAAUA,OAAOC,SAAS,EAAG,e,UC9S/CoB,GAAMjQ,IAAa,WAIb,IAAD,yDAAP,GAHAzgB,EAGO,EAHPA,MAGO,IAFPkF,YAEO,MAFA,GAEA,EADPhG,EACO,EADPA,QAEM/D,EAAQwqB,eAEd,OAAOzgB,EAAKjC,QACR,sBAAKhE,UAAWC,EAAQmhB,uBAAxB,UACI,qBAAKphB,UAAWC,EAAQghB,YAAxB,SACI,cAAC,GAAD,CAAcvmB,KAAK,OAAOsC,KAAM+D,MAGpC,qBAAKf,UAAWC,EAAQqhB,QAAxB,SACI,cAAC,KAAD,CACIrb,KAAMA,EACNsiB,OAAQ,CAAEmJ,MAAO,cACjBxuB,OAAQ,CAAEolB,IAAK,EAAG/V,MAAO,GAAIoO,OAAQ,EAAGrO,KAAM,IAC9CoW,SAAS,EACTiJ,YAAa,IACb5E,SAAU,EACV6E,aAAc,EACdC,wBAAyB,EACzBC,YAAa,EACbC,YAAa,GACbC,SAAU,GACVC,iBAAiB,EACjBC,uBAAwB,EACxBC,uBAAwB,EACxBC,mBAAoB,CAAE5F,KAAM,SAC5B6F,mBAAoB,GACpBC,4BAA6B,GAC7BC,4BAA6B,GAC7BC,uBAAwBt2B,EAAME,QAAQY,KAAKR,QAE3CN,MAAOA,EAAMiC,iBAOlBszB,MCcAtU,gBAJS,SAAC/B,GAAD,MAAY,CAChCpW,aAAcoW,EAAMpW,gBAGTmY,EAtDG,WAEN,IAAD,yDAAP,GAAO,IADPnY,oBACO,MADQ,GACR,EACDytB,EAAW,GACXC,EAAa1tB,EAAavL,KAAI,SAAAmb,GAEhC,OADA6d,EAAS7d,EAAO/M,OAAU4qB,EAAS7d,EAAO/M,OAAS,GAAK,EACjD,YAAC,eACD+M,GADP,kCAEaA,EAAO/M,MAAS,OAG3B8qB,EAAcv4B,OAAOD,KAAKs4B,GAE1BG,EAAUx4B,OAAOqY,QAAQggB,GAC1BvsB,MAAK,gEACLzM,KAAI,WAAgB8hB,GAAhB,uBAAE1T,EAAF,KAAQzF,EAAR,WAAuB,CACxBxI,GAAIiO,EACJ+X,MAAO/X,EACP5M,MAAOstB,GAAOhN,EAAIgN,GAAOvkB,QACzB5B,MAAOA,MAGf,OAAQ,mCACJ,eAAC+d,EAAD,WACI,cAAC,EAAD,CAAkBpf,MAAM,4BACxB,cAAC,GAAD,CACIkF,KAAM2sB,EACN7xB,MAAM,sBAEV,cAAC,GAAD,CACI0lB,aAAa,EACb1lB,MAAM,2BACNkF,KAAM,CACF,CACIge,MAAO0O,EACFl5B,KAAI,SAACoO,EAAM0T,GAAP,MAAc,CACfqE,MAAO/X,EACP5M,MAAOstB,GAAOhN,EAAIgN,GAAOvkB,QACzByf,QAAQ,QAAD,OAAU5b,GACjB6b,UAAW,YAEnBkD,MAAO,OACP3gB,KAAMysB,cCWfvV,gBAVS,SAAC/B,GAAD,MAAY,CAChCpW,aAAcoW,EAAMpW,aACpBmM,QAASiK,EAAMjK,SAAW,CAAC,UAAU,UAAU,UAAU,kBAQ9CgM,CAAyBpd,aALzB,SAAA7D,GAAK,MAAK,CACrBe,KAAM,CACFhC,MAAOiB,EAAME,QAAQa,SAGW8C,EAnDtB,WAIN,IAAD,yDAAP,GAAO,IAHPiF,oBAGO,MAHQ,GAGR,MAFPmM,eAEO,MAFG,GAEH,MADPlR,eACO,MADG,GACH,EACDyyB,EAAa1tB,EAAavL,KAAI,SAAAmb,GAAM,kCACnCA,GADmC,6BAElCA,EAAO1C,OAF2B,2BAEO0C,EAAOc,4BAGxD,OAAQ,mCACJ,eAACyK,EAAD,WACI,cAAC,EAAD,CACIpf,MAAM,sBADV,SAGI,gCACI,cAACjB,EAAD,sFACA,eAACA,EAAD,+BAAoB,mBAAGE,UAAWC,EAAQhD,KAAMoE,KAAK,4CAA4CwxB,IAAI,2BAAjF,uBAApB,sFACA,cAAC/yB,EAAD,sFAGR,cAAC,GAAD,CACI2mB,aAAa,EACb1lB,MAAM,oCACNkF,KAAM,CACF,CACIge,MAAO9S,EACF1X,KAAI,SAACq5B,EAAQvX,GAAT,MAAgB,CACjBqE,MAAM,GAAD,OAAKkT,GACV73B,MAAOstB,GAAOhN,EAAIgN,GAAOvkB,QACzByf,QAAQ,GAAD,OAAKqP,EAAL,+BAEflM,MAAO,OACP3gB,KAAMysB,eCtBfK,GAXF,kBAAM,qCACf,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QCUW5V,gBALS,SAAC/B,GAAD,MAAY,CAChCzU,KAAMyU,EAAMzU,KACZkZ,SAAUzE,EAAMyE,YAGL1C,EAjBO,SAAC3c,GAAD,OAClB,8BAEQ0O,aAAK,CACD,CAAC8jB,aAAcnc,QAAS,QAAS1H,aAAO,cAAC8jB,GAAD,MACxC,CAACD,aAAcnc,QAAS,YAAa1H,aAAO,cAAC,GAAD,MAC5C,CAACE,KAAYF,aAAO,cAAC+jB,GAAD,OAHxBhkB,CAIG1O,QCAAT,gBAdA,SAAA7D,GAAK,MAAK,CACrB,UAAW,CACP,KAAQ,CACJgH,OAAQ,EACRoa,gBAAiBphB,EAAME,QAAQc,WAAWC,UAGlDg2B,QAAS,CACLzxB,QAAS,EACT4b,gBAAiBphB,EAAME,QAAQc,WAAWC,QAC1Ci2B,SAAU,WAIHrzB,EAhBK,SAAC,GAAD,IAAGE,EAAH,EAAGA,QAASC,EAAZ,EAAYA,SAAZ,OAA2B,qBAAKF,UAAWC,EAAQkzB,QAAxB,SAAkCjzB,O,oFC2ElEid,gBARS,SAAC/B,GAAD,MAAY,CAChCiY,UAAWjY,EAAMiY,cAGM,SAAArjB,GAAQ,MAAK,CACpCsjB,YAAa,SAAC13B,GAAD,OAAOoU,EhC3CG,CACvBtV,KAAMkR,GAAMiC,mBgC6CDsP,CAA6Cpd,aA3C7C,SAAA7D,GAAK,MAAK,CACrBi3B,QAAS,CACLpxB,SAAU,WACVumB,IAAKpsB,EAAMuB,UAAU7B,EAAEE,MACvByW,MAAOrW,EAAMuB,UAAU7B,EAAEE,MACzB,QAAS,CACLgF,WAAY5E,EAAMuB,UAAU7B,EAAEE,OAElC,kBAAmB,CACfb,MAAOiB,EAAME,QAAQW,WAEzB,gBAAiB,CACbH,QAAS,QAEb,sBAAuB,CACnBA,QAAS,UAEb,qBAAsB,CAClBA,QAAS,QAEb,gBAAiB,CACbA,QAAS,QAEb,sBAAuB,CACnBA,QAAS,UAEb,uBAAwB,CACpBA,QAAS,SAGjB22B,KAAM,CACFt4B,MAAOiB,EAAME,QAAQY,KAAKR,YAY0BuD,EApE9C,SAAC,GAAyC,IAAvCE,EAAsC,EAAtCA,QAASozB,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YACjC,OACI,sBAAKtzB,UAAWC,EAAQkzB,QAAxB,UACI,mBAAGN,IAAI,kBAAkB7yB,UAAWC,EAAQhD,KAAMoE,KAAK,kCAAvD,SACI,cAAC,KAAD,CAAarB,UAAWC,EAAQszB,SAEpC,mBAAGV,IAAI,mBAAmB7yB,UAAWC,EAAQhD,KAAMoE,KAAK,6CAAxD,SACI,cAAC,KAAD,CAAYrB,UAAWC,EAAQszB,SAEnC,oBACIlyB,KAAK,SACLwxB,IAAI,eACJvxB,QAAS,SAACtH,GACNA,EAAEuH,iBACF+xB,KAEJtzB,UAAWqzB,EAPf,UASI,cAAC,KAAD,CAASrzB,UAAS,UAAKC,EAAQszB,KAAb,UAClB,cAAC,KAAD,CAAavzB,UAAS,UAAKC,EAAQszB,KAAb,qBCMvBC,GAzBF,kBACT,eAACC,GAAD,WACI,eAACtT,EAAD,CAAOngB,UAAU,UAAjB,UACI,cAAC,GAAD,IACA,cAAC,EAAD,CACIe,MACI,cAACV,EAAD,CAAGC,MAAO,EAAV,mCAEJU,MAAM,2IAJV,SAMI,gCACI,cAAClB,EAAD,oVACA,cAACA,EAAD,kSACA,cAACA,EAAD,iKACA,cAACA,EAAD,0UAIZ,qCACI,cAAC4zB,GAAD,IACA,cAAC,GAAD,W,UC+DGvW,gBALS,SAAC/B,GAAD,MAAY,CAChCqC,SAAUrC,EAAMqC,SAChBkW,YAAavY,EAAMuY,eAGRxW,CAAyBpd,aAvFzB,SAAA7D,GAAK,MAAK,CACrB,KAAQ,CACJ6F,SAAU,YAEd,MAAS,CACLA,SAAU,QACVpF,MAAO,MACP2rB,IAAK,MACLhW,KAAM,MACNshB,UAAW,wBACXC,OAAQ,IACRvW,gBAAiBphB,EAAME,QAAQc,WAAWE,MAC1CsE,QAAQ,GAAD,OAAKxF,EAAMuB,UAAU7B,EAAEI,MAAvB,YAAgCE,EAAMuB,UAAUxB,EAAED,OACzD,8BAA+B,CAC3BkB,WAAY,OACZogB,gBAAiB,UACjBwW,UAAW,QAEf,4BAA6B,CACzBt4B,OAAQ,OACRL,aAAce,EAAMuB,UAAUxB,EAAED,QAGxC,QAAW,CACP+F,SAAU,QACVumB,IAAK,EACLhW,KAAM,EACN3V,MAAO,OACPnB,OAAQ,OACRq4B,OAAQ,IACRvW,gBAAiB,UACjBwW,UAAW,8BACX/0B,QAAS,IAEb,mBAAoB,CAChB,OAAQ,CACJA,QAAS,QAmDmBgB,EA9CzB,WAIH,IAAD,yDAAP,GAHA0d,EAGO,EAHPA,SAGO,IAFPkW,mBAEO,MAFO,GAEP,EADP1zB,EACO,EADPA,QAEA,EAOI0zB,EANAzjB,YADJ,MACW,EADX,IAOIyjB,EALAxjB,mBAFJ,MAEkB,EAFlB,IAOIwjB,EAJAvjB,sBAHJ,MAGqB,EAHrB,IAOIujB,EAHA3uB,oBAJJ,MAImB,EAJnB,IAOI2uB,EAFAxuB,cALJ,MAKa,EALb,IAOIwuB,EADAvuB,gBANJ,MAMe,EANf,EASM2uB,EAAa5jB,EAAcC,EAC3B4jB,EAAiB,KAAOD,GAAc,IACtCE,EAAiB9jB,EAAc6jB,EAErC,OACIvW,GAAY,gCACR,qBAAKzd,UAAYC,EAAQi0B,UACzB,sBAAKl0B,UAAYC,EAAQk0B,MAAzB,UACI,eAAC9zB,EAAD,CAAGC,MAAO,EAAV,UACK4P,EADL,IACY6jB,EAAU,aAASA,GAAe,MAE9C,cAACK,GAAA,EAAD,CAAgBp0B,UAAWC,EAAQo0B,OAAQ/xB,QAAQ,cAAcF,MAAO6xB,EAAeK,YAAaN,EAAiBC,IAErH,eAAC5zB,EAAD,CAAGC,MAAO,EAAV,UACK0E,EADL,oBAGA,eAAC3E,EAAD,CAAGC,MAAO,EAAV,UACK6E,EADL,aAGA,eAAC9E,EAAD,CAAGC,MAAO,EAAV,UACK8E,EADL,yBCzCD+X,gBATS,SAAC/B,GAAD,MAAY,CAChCiY,UAAWjY,EAAMiY,cAGM,SAAArjB,GAAQ,MAAK,CACpCoM,kBAAmB,SAACxgB,GAAD,OAAOoU,EAASukB,GAA0B34B,KAC7Dwe,QAAS,SAACxe,GAAD,OAAOoU,EAASukB,GAAgB34B,QAG9BuhB,EA5BH,WAAqD,IAAD,yDAAP,GAA1Cf,EAAiD,EAAjDA,kBAAmBiX,EAA8B,EAA9BA,UAAWjZ,EAAmB,EAAnBA,QAWzC,OAVAoa,qBAAU,WACN,IAAMC,EAAclvB,YAAO,GAAI,CAAC,WAAY,UAAU6qB,QAChDsE,EAAY,IAAIC,gBAAgBF,GAChC5sB,EAAO6sB,EAAUE,IAAI,SAAW,QAChCjuB,EAAO+tB,EAAUE,IAAI,SAAW,GAEtCxY,EAAkBvU,GAClBuS,EAAQzT,KACT,CAACyV,EAAmBhC,IAGnB,eAAC,IAAD,CAAkBle,MAAOA,EAAMm3B,GAA/B,UACI,cAAC,GAAD,IACA,cAAC,GAAD,UCtBNwB,GAAWC,YAAgB,CAC7BnuB,KAAM,WAAwB,IAAD,EAAtBA,EAAsB,uDAAf,GAAIouB,EAAW,uCACnBtd,GAAY,EAAD,kBACZ7L,GAAMC,UAAW,kBAAMkpB,EAAO9kB,WADlB,eAEZrE,GAAME,YAAa,iBAAM,MAFb,GAGdipB,EAAOr6B,MAEV,OAAO+c,EACDA,IACA9Q,GAEV8T,QAASqa,YAAgB,CACrBhmB,MAAO,eAACA,EAAD,uDAAS,GAAIimB,EAAb,8CAAyBA,EAAOr6B,OAASkR,GAAMM,YAChD6oB,EAAO9kB,QACPnB,GACNlH,IAAK,eAACA,EAAD,uDAAO,GAAImtB,EAAX,8CAAuBA,EAAOr6B,OAASkR,GAAMK,UAC5C8oB,EAAO9kB,QACPrI,GACNC,KAAM,eAACA,EAAD,uDAAQ,GAAIktB,EAAZ,8CAAwBA,EAAOr6B,OAASkR,GAAMmB,WAC9CgoB,EAAO9kB,QACPpI,GACNgY,SAAU,WAA4B,IAAD,EAA1BA,EAA0B,uDAAf,GAAIkV,EAAW,uCAC3Btd,GAAY,EAAD,kBACZ7L,GAAMG,eAAgB,kBAAMgpB,EAAO9kB,WADvB,eAEZrE,GAAMI,iBAAkB,iBAAM,MAFlB,GAGd+oB,EAAOr6B,MAEV,OAAO+c,EACDA,IACAoI,GAEVjZ,aAAc,eAACA,EAAD,uDAAgB,EAAGmuB,EAAnB,8CAA+BA,EAAOr6B,OAASkR,GAAMoB,aAC7D+nB,EAAO9kB,QACPrJ,GACN+H,cAAe,eAACA,EAAD,uDAAiB,GAAIomB,EAArB,8CAAiCA,EAAOr6B,OAASkR,GAAMsB,cAChE6nB,EAAO9kB,QACPtB,GACNwC,QAAS,eAACA,EAAD,uDAAW,GAAI4jB,EAAf,8CAA2BA,EAAOr6B,OAASkR,GAAMwB,eACpD2nB,EAAO9kB,QACPkB,GACN8K,WAAY,eAACA,EAAD,uDAAc,GAAI8Y,EAAlB,8CAA8BA,EAAOr6B,OAASkR,GAAMuB,aAC1D4nB,EAAO9kB,QACPgM,GACNnV,aAAc,iBAAC7B,EAAD,uDAAc,CAAEO,aAAa,GAAQuvB,EAArC,8CAAiD,EAAD,kBACzDnpB,GAAMO,kBAAoB4oB,EAAO9kB,SADwB,eAEzDrE,GAAMQ,oBAAsB,CAAE5G,aAAa,IAFc,GAG3DuvB,EAAOr6B,OAASuK,GACnB6C,mBAAoB,iBAAC7C,EAAD,uDAAc,CAAEO,aAAa,GAAQuvB,EAArC,8CAAiD,EAAD,kBAC/DnpB,GAAMS,wBAA0B0oB,EAAO9kB,SADwB,eAE/DrE,GAAMU,0BAA4B,CAAE9G,aAAa,IAFc,GAGjEuvB,EAAOr6B,OAASuK,GACnB4B,iBAAkB,iBAAC5B,EAAD,uDAAc,CAAEO,aAAa,GAAQuvB,EAArC,8CAAiD,EAAD,kBAC7DnpB,GAAMW,sBAAwBwoB,EAAO9kB,SADwB,eAE7DrE,GAAMY,wBAA0B,CAAEhH,aAAa,IAFc,GAG/DuvB,EAAOr6B,OAASuK,KAEvBwY,SAAU,eAACA,EAAD,wDAAmBsX,EAAnB,6CAA8B,CACpCA,EAAOr6B,OAASkR,GAAMc,aACd,kBAAM,GACdqoB,EAAOr6B,OAASkR,GAAMiB,WACd,kBAAM,GACd,kBAAM4Q,IAELnS,KAAKuL,QAP8B,IAQxC8c,YAAa,eAACA,EAAD,uDAAe,GAAIoB,EAAnB,8CAA8BA,EAAOr6B,OAASkR,GAAMa,aAC3DsoB,EAAO9kB,QACP0jB,GACNtlB,MAAO,WAAyB,IAAD,EAAvBA,EAAuB,uDAAf,GAAI0mB,EAAW,uCACrBtd,GAAY,EAAD,kBACZ7L,GAAMe,aAAc,kBAAMooB,EAAO9kB,WADrB,eAEZrE,GAAMgB,mBAAoB,iBAAM,MAFpB,GAGdmoB,EAAOr6B,MAEV,OAAO+c,EACDA,IACApJ,GAEV2N,eAAgB,WAAwB,IAAD,EAAtBnU,EAAsB,uDAAf,GAAIktB,EAAW,uCAC7Btd,GAAY,EAAD,kBACZ7L,GAAMkC,iBAAkB,kBAAMinB,EAAO9kB,WADzB,eAEZrE,GAAM0B,WAAY,iBAAM,MAFZ,GAGdynB,EAAOr6B,MAEV,OAAO+c,EACDA,IACA5P,GAEVsU,SAAU,eAACA,EAAD,uDAAY,GAAI4Y,EAAhB,6CAA2B,CACjCA,EAAOr6B,OAASkR,GAAM2B,eACfwnB,EAAO9kB,QACd8kB,EAAOr6B,OAASkR,GAAM4B,iBACf,GACP2O,GACF7Q,KAAKuL,UACP7R,aAAc,eAACkX,EAAD,uDAAO,GAAI6Y,EAAX,6CAAsB,CAChCA,EAAOr6B,OAASkR,GAAMyB,SACf6O,EAAIhY,OAAO6wB,EAAO9kB,SACzB8kB,EAAOr6B,OAASkR,GAAM0B,WAAa,GACnC4O,GACF5Q,KAAKuL,UACPlF,UAAW,eAACL,EAAD,uDAAS,GAAIyjB,EAAb,6CAAwB,CAC/BA,EAAOr6B,OAASkR,GAAMmC,gBACfgnB,EAAO9kB,QACd8kB,EAAOr6B,OAASkR,GAAMoC,kBAAoB,GAC1CsD,GACFhG,KAAKuL,UACP1R,OAAQ,eAACA,EAAD,uDAAU,GAAI4vB,EAAd,6CAAyB,CAC7BA,EAAOr6B,OAASkR,GAAM6B,YACftI,EAAOjB,OAAO6wB,EAAO9kB,SAC5B8kB,EAAOr6B,OAASkR,GAAM8B,cAAgB,GACtCvI,GACFmG,KAAKuL,UACPzR,SAAU,eAACA,EAAD,uDAAY,GAAI2vB,EAAhB,6CAA2B,CACjCA,EAAOr6B,OAASkR,GAAM+B,cACfvI,EAASlB,OAAO6wB,EAAO9kB,SAC9B8kB,EAAOr6B,OAASkR,GAAMgC,gBAAkB,GACxCxI,GACFkG,KAAKuL,UACPwc,UAAW,eAACA,EAAD,uDAAa,OAAQ0B,EAArB,8CACPA,EAAOr6B,OAASkR,GAAMiC,aACD,SAAdwlB,EAAuB,QAAU,OAClCA,KAGCwB,MCtHTG,GAAmB5E,OAAO6E,sCAAwClkB,IAClEmkB,GAAQC,YAAYN,GAAUG,GAChCI,YAAgBC,OAGpBC,iBACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,MAEJK,SAASC,eAAe,W","file":"static/js/main.f9cb6250.chunk.js","sourcesContent":["var map = {\n\t\"./en/index\": 294\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 425;","var map = {\n\t\"./TypeScript.json\": 427,\n\t\"./babel.json\": 428,\n\t\"./cypress.json\": 429,\n\t\"./deno.json\": 430,\n\t\"./electron.json\": 431,\n\t\"./facebook-react-old.json\": 432,\n\t\"./graphql.json\": 433,\n\t\"./jest.json\": 434,\n\t\"./kotlin.json\": 435,\n\t\"./material-ui.json\": 436,\n\t\"./next.js.json\": 437,\n\t\"./node.json\": 438,\n\t\"./prettier.json\": 439,\n\t\"./ramda.json\": 440,\n\t\"./react-cuurent.json\": 441,\n\t\"./react-new.json\": 442,\n\t\"./react-testing-library.json\": 443,\n\t\"./react.json\": 444,\n\t\"./react3.json\": 445,\n\t\"./svelte.json\": 446,\n\t\"./swift.json\": 447,\n\t\"./team.json\": 448,\n\t\"./vscode.json\": 449,\n\t\"./vue-next.json\": 450,\n\t\"./xstate.json\": 451\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 426;","import {\n    compose,\n    map,\n    none,\n    flatten,\n    filter,\n    path,\n    pathOr,\n} from 'ramda'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport {\n    major,\n    minor,\n    patch,\n    prerelease,\n} from 'semver'\nimport Sentiment from 'sentiment'\n\nconst formatCommentersObject = paths => items => items\n    .reduce((acc, item) => {\n        const user = path(paths, item)\n        const userCount = (acc[user] || 0) + 1\n\n        return Object.assign(acc, { [user]: userCount })\n    }, {})\n\nconst formatCommenters = formatCommentersObject(['node', 'author', 'login'])\n\nconst formatSentimentsCommenters = items => items\n    .reduce((acc, {author = '', score = 0}) => {\n        const totalScore = (acc[author] || 0) + score\n\n        return Object.assign(acc, { [author]: totalScore })\n    }, {})\n\nconst mergeCommenters = (left = {}) => (right = {}) => {\n    const leftEntries = Object.entries(left)\n    const rightEntries = Object.entries(right)\n\n    const mergedObject = [\n        ...leftEntries,\n        ...rightEntries,\n    ]\n        .reduce((acc, [user, value]) => {\n            const newTotal = (acc[user] || 0) + value\n\n            return Object.assign(acc, { [user]: newTotal })\n        }, {})\n\n    return mergedObject\n}\n\nconst formatRepoInfo = ([data]) => ({\n    repo: pathOr('', ['data', 'result', 'name'], data),\n    org: pathOr('', ['data', 'result', 'owner', 'org'], data),\n    description: pathOr('', ['data', 'result', 'description'], data),\n})\n\nconst filterByUsers = users => item => !users.includes(path(['node', 'author', 'login'], item))\n\nconst getAllCodeComments = (exclude, data) => {\n    const author = pathOr('', ['node', 'author', 'login'], data)\n    const allReviews = pathOr([], ['node', 'reviews', 'edges'], data)\n\n    const allCodeComments = allReviews\n        .reduce((acc, review) => {\n            const comments = pathOr([], ['node', 'comments', 'edges'], review)\n                .filter(filterByUsers([...exclude, author]))\n\n            acc.push(...comments)\n\n            return acc\n        }, [])\n\n    return allCodeComments\n}\n\nconst formatSentiments = (comments = []) => {\n    const sentiment = new Sentiment();\n\n    const sentimental = comments\n        .map(comment => {\n            const body = pathOr('',['node', 'body'], comment)\n            const commentAuthor = pathOr('', ['node', 'author', 'login'], comment)\n\n            return {\n                author: commentAuthor,\n                score: sentiment.analyze(body).score,\n            }\n        })\n\n    return {\n        sentimentScore: sentimental.reduce((acc, { score = 0 } = {}) => score + acc,0),\n        sentiments: formatSentimentsCommenters(sentimental),\n    }\n}\n\nconst formatCodeComments = (exclude, data) => {\n    const allCodeComments = getAllCodeComments(exclude, data)\n\n    const {\n        sentimentScore = 0,\n        sentiments = {},\n    } = formatSentiments(allCodeComments)\n\n    return {\n        codeComments: allCodeComments.length,\n        codeCommenters: formatCommenters(allCodeComments),\n        codeCommentSentimentScore: sentimentScore,\n        codeCommentSentiments: sentiments,\n    }\n}\n\nconst formatGeneralComments = (exclude, data) => {\n    const author = pathOr('', ['node', 'author', 'login'], data)\n    const comments = pathOr([], ['node', 'comments', 'edges'], data)\n        .filter(filterByUsers([...exclude, author]))\n\n    const {\n        sentimentScore = 0,\n        sentiments = {},\n    } = formatSentiments(comments)\n\n    return {\n        generalComments: comments.length,\n        generalCommenters: formatCommenters(comments),\n        generalCommentSentimentScore: sentimentScore,\n        generalCommentSentiments: sentiments,\n    }\n}\n\nconst formatApprovals = (data) => {\n    const reviews = pathOr([], ['node', 'reviews', 'edges'], data)\n    const ghApprovals = reviews\n        .filter(x => path(['node', 'state'], x) === 'APPROVED')\n\n    const ghApprovers = formatCommenters(ghApprovals)\n\n    return {\n        approvals: ghApprovals.length,\n        approvers: ghApprovers,\n    }\n}\n\nconst prData = (exclude = []) => (data = {}) => {\n    const org = pathOr('', ['node', 'repository', 'owner', 'login'], data)\n    const repo = pathOr('', ['node', 'repository', 'name'], data)\n    const author = pathOr('', ['node', 'author', 'login'], data)\n    const url = pathOr('', ['node', 'url'], data)\n    const additions = pathOr(0, ['node', 'additions'], data)\n    const deletions = pathOr(0, ['node', 'deletions'], data)\n    const changedFiles = pathOr(0, ['node', 'changedFiles'], data)\n    const createdAt = pathOr('', ['node', 'createdAt'], data)\n    const mergedAt = pathOr('', ['node', 'mergedAt'], data)\n\n    const {\n        codeComments = 0,\n        codeCommenters,\n        codeCommentSentimentScore,\n        codeCommentSentiments,\n    } = formatCodeComments(exclude, data)\n\n    const {\n        generalComments = 0,\n        generalCommenters,\n        generalCommentSentimentScore,\n        generalCommentSentiments,\n    } = formatGeneralComments(exclude, data)\n\n    const {\n        approvals,\n        approvers,\n    } = formatApprovals(data)\n\n    const prInfo = {\n        repo,\n        org,\n        author,\n        url,\n\n        additions,\n        deletions,\n        changedFiles,\n        prSize: additions + deletions,\n\n        createdAt,\n        mergedAt,\n        age: differenceInDays(new Date(mergedAt), new Date(createdAt)) || 1,\n\n        approvals,\n        approvers,\n\n        generalComments,\n        generalCommenters,\n        generalCommentSentimentScore,\n        generalCommentSentiments,\n\n        codeComments,\n        codeCommenters,\n        codeCommentSentimentScore,\n        codeCommentSentiments,\n\n        comments: codeComments + generalComments,\n        commenters: mergeCommenters(generalCommenters)(codeCommenters),\n        commenterSentiments: mergeCommenters(generalCommentSentiments)(codeCommentSentiments),\n        commentsSentimentScore: generalCommentSentimentScore + codeCommentSentimentScore,\n    }\n\n    return prInfo\n}\n\nconst formatPullRequests = (exclude = [], results) => compose(\n    filter(x => none(y => y === x.author, exclude)),\n    map(prData(exclude)),\n    flatten,\n    map(pathOr([], ['data', 'result', 'pullRequests', 'edges'])),\n)(results)\n\n\n// TODO: is this used?\nconst formatRepo = (data) => ({\n    name: pathOr('', ['data', 'result', 'name'], data),\n    org: pathOr('', ['data', 'result', 'owner', 'login'], data),\n    pullRequests: formatPullRequests(data),\n})\n\nconst formatIssue = (data) => {\n    const createdAt = pathOr('', ['node', 'createdAt'], data)\n    const closedAt = pathOr('', ['node', 'closedAt'], data)\n    const title = pathOr('', ['node', 'title'], data)\n    const labels = pathOr([], ['node', 'labels', 'edges'], data)\n\n    return {\n        createdAt,\n        mergedAt: createdAt,\n        closedAt,\n        isBug: /bug/i.test(title) || labels.some(x => /bug/i.test(path(['node', 'name'], x))),\n    }\n}\n\nconst formatIssues = compose(\n    map(formatIssue),\n    flatten,\n    map(pathOr([], ['data', 'result', 'issues', 'edges'])),\n)\n\nconst getReleaseType = (tag) => {\n    try {\n        const majorV = major(tag)\n        const minorV = minor(tag)\n        const patchV = patch(tag)\n        const prereleaseV = prerelease(tag)\n\n        const releaseType = [\n            !prereleaseV && majorV && minorV === 0 && patchV === 0 && 'MAJOR',\n            !prereleaseV && minorV && patchV === 0 && 'MINOR',\n            'PATCH',\n        ].find(Boolean)\n\n        return releaseType\n    } catch(error) {\n        return 'PATCH'\n    }\n}\n\nconst formatRelease = (data) => {\n    const createdAt = pathOr('', ['node', 'createdAt'], data)\n    const tag = pathOr('', ['node', 'tag', 'name'], data)\n\n    const releaseType = getReleaseType(tag)\n\n    return {\n        date: createdAt,\n        description: tag,\n        releaseType,\n    }\n}\n\nconst formatReleases = compose(\n    map(formatRelease),\n    flatten,\n    map(pathOr([], ['data', 'result', 'releases', 'edges'])),\n)\nexport {\n    formatRepo,\n    formatRepoInfo,\n    formatPullRequests,\n    formatIssues,\n    formatReleases,\n}\n","import { createTheme } from '@material-ui/core/styles'\n\nconst themeColor = type => ({\n    light: '#232023',\n    dark: '#eee',\n})[type]\n\nconst themeColorBg = type => ({\n    light: '#fff',\n    dark: '#232023',\n})[type]\n\nconst fontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\nconst fontSize = 12\n\nconst defaultCopy = (type) => ({\n    color: themeColor(type),\n    marginTop: 0,\n    marginBottom: '0.8rem',\n    fontSize: '1rem',\n    fontWeight: '400',\n    fontFamily,\n})\n\nconst markerSettings = {\n    legendOrientation: 'horizontal',\n    legendPosition: 'top-right',\n    height: 10,\n    legendOffsetX: 0,\n    legendOffsetY: -4,\n}\n\nconst spacing = {\n    x: {\n        tiny: '0.2rem',\n        small: '0.5rem',\n        medium: '0.8rem',\n        large: '1.2rem',\n    },\n    y: {\n        tiny: '0.5rem',\n        small: '0.8rem',\n        medium: '1rem',\n        large: '1.4rem',\n    },\n}\n\nconst theme =  (type = 'light') => createTheme({\n    type,\n    palette: {\n        type,\n        secondary: {\n            contrastText: '#ccc',\n            dark: '#1e6392',\n            light: '#7986cb',\n            main: '#1f77b4',\n        },\n        primary: {\n            contrastText: '#ccc',\n            dark: '#b10e4f',\n            light: '#d65287',\n            main: '#e82573',\n        },\n        mainCopy: {\n            color: themeColor(type),\n            fontSize: '1rem',\n            fontWeight: '400',\n            fontFamily,\n        },\n        groupedCharts: {\n            width: '100%',\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-evenly',\n        },\n        iconHover: ({\n            light: '#d65287',\n            dark: '#e82573',\n        })[type],\n        text: {\n            primary: themeColor(type),\n        },\n        link: ({\n            light: '#1f77b4',\n            dark: '#e82573',\n        })[type],\n        background: {\n            default: themeColorBg(type),\n            paper: themeColorBg(type),\n        },\n        shadow:({\n            light: '#ccc',\n            dark: '#666',\n        })[type],\n        switch: themeColor(type),\n    },\n    typography: { useNextVariants: true },\n    mySpacing: spacing,\n    copy: {\n        body: {\n            ...defaultCopy(type),\n            lineHeight: '1.3rem',\n        },\n        list: {\n            ...defaultCopy(type),\n            color: themeColor(type),\n        },\n        listItem: {\n            color: themeColor(type),\n            marginBottom: '0.2rem',\n        },\n        h4: {\n            ...defaultCopy(type),\n            marginBottom: '0.5rem',\n            fontSize: '1.3rem',\n            fontWeight: '500',\n        },\n        h3: {\n            ...defaultCopy(type),\n            fontSize: '2rem',\n            fontWeight: '500',\n        },\n        h2: {\n            ...defaultCopy(type),\n            fontSize: '3rem',\n            fontWeight: '200',\n        },\n        h1: {\n            ...defaultCopy(type),\n            fontSize: '4rem',\n            fontWeight: '300',\n        },\n    },\n    charts: {\n        fontFamily,\n        fontSize,\n        textColor: themeColor(type),\n        crosshair: {\n            line: {\n                stroke: themeColor(type),\n            },\n        },\n        axis: {\n            legend: {\n                text: { fill: themeColor(type) },\n            },\n            ticks: {\n                text: { fill: themeColor(type) },\n            },\n        },\n        legends: {\n            hidden: {\n                symbol: {\n                    fill: '#eee',\n                    opacity: 1,\n                },\n                text: {\n                    fill: '#eee',\n                    fontWeight: '400',\n                    opacity: 1,\n                },\n            },\n            text: {\n                fontWeight: '800',\n            },\n        },\n        legendsTextFill: themeColor(type),\n        dotColor: themeColor(type),\n        tooltip: {\n            fontFamily,\n            fontSize,\n            container: {\n                background: themeColorBg(type),\n                color: themeColor(type),\n                boxShadow: `0 1px 2px ${themeColor(type)}`,\n            },\n        },\n        grid: {\n            line: {\n                stroke: '#999',\n            },\n        },\n        markers: {\n            primary: {\n                lineStyle: {\n                    stroke:({\n                        light: '#077314',\n                        dark: '#077314',\n                    })[type],\n                    strokeWidth: 1,\n                },\n                textStyle: {\n                    fontFamily,\n                    fontSize,\n                    fill: ({\n                        light: '#077314',\n                        dark: '#077314',\n                    })[type],\n                },\n                ...markerSettings,\n            },\n            secondary: {\n                lineStyle: {\n                    stroke:({\n                        light: '#8b4ff0',\n                        dark: '#6b3dba',\n                    })[type],\n                    strokeWidth: 1,\n                },\n                textStyle: {\n                    fontFamily,\n                    fontSize,\n                    fill: ({\n                        light: '#8b4ff0',\n                        dark: '#6b3dba',\n                    })[type],\n                },\n                ...markerSettings,\n            },\n            tertiary: {\n                lineStyle: {\n                    stroke:({\n                        light: '#87cac6',\n                        dark: '#6b3dba',\n                    })[type],\n                    strokeWidth: 1,\n                    strokeDasharray:'2 6',\n                },\n                textStyle: {\n                    fontFamily,\n                    fontSize,\n                    fill: ({\n                        light: '#87cac6',\n                        dark: '#6b3dba',\n                    })[type],\n                },\n                ...markerSettings,\n            },\n\n        },\n    },\n})\n\nexport default theme\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n    p: theme.copy.body,\n    h1: {\n        ...theme.copy.h1,\n        '@media (max-width: 768px)': {\n            fontSize: '3rem'\n        },\n        '@media (max-width: 668px)': {\n            fontSize: '2.5rem'\n        },\n    },\n    h2: {\n        ...theme.copy.h2,\n        '@media (max-width: 768px)': {\n            fontSize: '2.5rem'\n        },\n        '@media (max-width: 668px)': {\n            fontSize: '2rem'\n        },\n    },\n    h3: {\n        ...theme.copy.h3,\n        '@media (max-width: 768px)': {\n            fontSize: '1.5rem'\n        },\n        '@media (max-width: 668px)': {\n            fontSize: '1.3rem'\n        },\n    },\n    h4: theme.copy.h4,\n    list: theme.copy.list,\n    listItem: theme.copy.listItem,\n})\n\nconst P = withStyles(styles)(({\n    className,\n    classes,\n    children,\n} = {}) => <p className={`${classes.p} ${className}`}>\n    {children}\n</p>)\n\nconst UL = withStyles(styles)(({\n    classes,\n    children,\n} = {}) => <ul className={classes.list}>\n    {children}\n</ul>)\n\nconst OL = withStyles(styles)(({\n    classes,\n    children,\n} = {}) => <ol className={classes.list}>\n    {children}\n</ol>)\n\nconst LI = withStyles(styles)(({\n    classes,\n    children,\n} = {}) => <li className={classes.listItem}>\n    {children}\n</li>)\n\nconst H = withStyles(styles)(({\n    level = 1,\n    styleAs,\n    className,\n    classes,\n    ...props\n} = {}) => {\n    const hClassName = `h${styleAs || level}`\n    const Tag = `h${level}`\n\n    return (\n        <Tag\n            className={`${classes[hClassName]} ${className}`}\n            {...props}\n\n        />\n    )\n})\n\n\nexport {\n    P,\n    UL,\n    OL,\n    LI,\n    H,\n}\n\n","import React, { useState } from 'react'\nimport Collapse from '@material-ui/core/Collapse'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { H, P } from './StyledTags'\n\n\nconst ChartDescription = ({\n    title,\n    intro,\n    children,\n    expandText = 'info',\n    className = '',\n    classes,\n} = {}) => {\n    const [toggle, setCount] = useState(false)\n\n    return (\n        <div className={`${classes.root} ${className}`}>\n            {\n               title && typeof title === 'string'\n                    ? <H level={2} >{title}</H>\n                    : title\n            }\n            <P>\n                {intro} {\n                    children && <a\n                        className={classes.link}\n                        href=\"#desc\"\n                        onClick={(e) => {\n                            e.preventDefault()\n                            setCount(!toggle)\n                        }}>\n                        {\n                            toggle\n                                ? 'hide'\n                                : expandText\n                        }\n                    </a>\n                }\n            </P>\n            <Collapse className=\"wrapper\" in={toggle}>\n                {children}\n            </Collapse>\n        </div>\n    )\n}\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'baseline',\n        '& a': {\n            marginLeft: '0.5rem',\n        }\n    },\n    link: {\n        color: theme.palette.link,\n    },\n})\n\nexport default withStyles(styles)(ChartDescription)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\n\nconst styles = theme => ({\n    root: {\n        padding: `${theme.mySpacing.y.large} ${theme.mySpacing.y.large} 0 ${theme.mySpacing.y.large}`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'top left',\n        backgroundSize: '100% 20px',\n        backgroundImage: `linear-gradient(${theme.palette.shadow}, rgba(0,0,0,0))`,\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    },\n    'bg-none': {\n        background: 'none'\n    },\n    'justify': {\n        justifyContent: 'space-between',\n    },\n})\n\nconst PaperWapper = ({ classes = {}, className = '', children } = {}) => (\n    <div\n        className={classNames(classes.root, classes[className] || className)}\n    >\n        {children}\n    </div>\n)\n\nexport default withStyles(styles)(PaperWapper)","import React from 'react'\nimport {\n    Button as CoreButton,\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst Button = ({\n    className,\n    classes,\n    onClick,\n    key,\n    value,\n    text,\n    type = 'submit',\n    color = 'inherit',\n} = {}) => (\n    <CoreButton\n        className={[classes.root, (className || '')].join(' ')}\n        variant=\"contained\"\n        size=\"small\"\n        type={type}\n        color={color}\n        value={value}\n        key={key}\n        onClick={onClick}\n    >\n        {text || value}\n    </CoreButton>\n)\n\nconst styles = theme => ({\n    root: {\n        marginRight: theme.mySpacing.x.small,\n        marginBottom: theme.mySpacing.y.small,\n    },\n})\nexport default withStyles(styles)(Button)","const styles = theme => ({\n    inputGrid: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        marginBottom: '1rem',\n        columnGap: '8px',\n        rowGap: '8px', // BUG: theme.spacing.unit does not have px for row but does for column, odd\n        '@media (max-width: 768px)': {\n            gridTemplateColumns: 'repeat(1, 1fr)',\n        },\n        '& button': {\n            minHeight: '3rem',\n        },\n        '& .tokenText' : {\n            gridColumn:'1 / -1'\n        }\n    },\n    link: {\n        color: theme.palette.link,\n    },\n    fullRow: {\n        gridColumn:'1 / -1',\n    },\n    formDescription: {\n        marginBottom: '0',\n    },\n    dataPaper: {\n        display: 'block',\n    },\n    child: {\n        margin: 0,\n        width: '100%'\n    },\n    copy: {\n        display: 'inline',\n    },\n    preFetched: {\n        marginBottom: '1rem',\n    },\n})\n\nexport default styles\n","import { splitEvery } from 'ramda'\n\n// Runs each batch synchronously and the items in a batch asynchronously\nconst runBatchQueue = (batches, job, resolved = []) => new Promise((resolve, reject) => {\n    const [currentBatch, ...remainingBatches] = batches\n\n    Promise.all(currentBatch.map((j) => job(j)))\n        .then((results) => (\n            remainingBatches && remainingBatches.length\n                ? runBatchQueue(remainingBatches, job, results)\n                    .then((more) => resolve(resolved.concat(more)))\n                    .catch(reject)\n                : resolve(resolved.concat(results))\n        ))\n        .catch(reject)\n})\n\n// Takes an array of arguments for the job and runs them in batches\nconst batch = (argsList = [], job, batchSize = 2) => {\n    const batches = splitEvery(batchSize, argsList)\n\n    return argsList.length\n        ? runBatchQueue(batches, job)\n        : []\n}\n\nexport default batch\n","import { pathOr } from 'ramda'\nimport format from 'date-fns/format'\n\nconst cursorQ = (cursor, key = 'after') => cursor\n    ? ` ${key}:\"${cursor}\" `\n    : ''\n\nconst getCursor = order => ({oldest, newest}) => {\n const cursor = order === 'DESC' ? oldest : newest\n return cursorQ(cursor)\n}\n\nconst pageInfo = 'pageInfo { endCursor hasNextPage hasPreviousPage startCursor }'\n\nconst comments = (cursor) => `\n    comments(first: ${cursor ? 100: 10} ${cursorQ(cursor)}) {\n      edges {\n        node {\n          author {\n            login\n          }\n          body\n        }\n      }\n      ${pageInfo}\n    }\n`\n\nconst pullRequests = order => pagination => `\npullRequests(\n  first: 100\n  ${getCursor(order)(pagination)}\n  states: [MERGED]\n  orderBy: {field: CREATED_AT direction: ${order}}\n) {\n  totalCount\n  edges {\n    node {\n      id\n      url\n      author {\n        login\n      }\n      repository {\n        name\n        owner {\n          login\n        }\n      }\n      additions\n      deletions\n      changedFiles\n      mergedAt\n      createdAt\n      ${reviews()}\n      ${comments()}\n    }\n  }\n  ${pageInfo}\n}`\n\nconst issues = order => pagination => `\nissues(\n  ${getCursor(order)(pagination)}\n  first: 100\n  orderBy: { field:CREATED_AT direction: ${order} }\n) {\n  totalCount\n  edges {\n    node {\n      title\n      createdAt\n      closedAt\n      state\n      labels(first:5) {\n        edges {\n          node {\n            name\n          }\n        }\n      }\n    }\n  }\n  ${pageInfo}\n}`\n\nconst releases = order => pagination => `\nreleases(\n  ${getCursor(order)(pagination)}\n  first:100\n  orderBy:{ field:CREATED_AT direction: ${order} }\n) {\n  totalCount\n  edges {\n    node {\n      id\n      name\n      createdAt\n      tag {\n        name\n      }\n    }\n  }\n  ${pageInfo}\n}`\n\nconst reviews = (cursor) => `\n    reviews(first: ${cursor ? 100 : 10} ${cursorQ(cursor)}) {\n      edges {\n        node {\n          id\n          state\n          author {\n            login\n          }\n          ${comments()}\n        }\n      }\n      ${pageInfo}\n    }\n`\n\nconst getDateRange = (type, order, fromDate, toDate) => {\n    const rangetype = /asc/i.test(order)\n        ? '=<'\n        : '=>'\n    const range = fromDate\n        ? ''\n        : rangetype\n\n    const to = toDate && format(new Date(toDate), 'yyyy-MM-dd')\n    const from = fromDate\n        ? `${format(new Date(fromDate), 'yyyy-MM-dd')}..`\n        : ''\n\n    return toDate\n        ? `${type}:${range}${from}${to}`\n        : ''\n}\n\nconst searchIssues = ({\n    org,\n    repo,\n    order,\n    fromDate,\n    toDate\n}) => (pagination)=> `\n  issues: search(\n    query: \"is:issue ${getDateRange('created', order, fromDate, toDate)} repo:${org}/${repo} sort:created-${/asc/i.test(order) ? 'asc' : 'desc'}\"\n    type: ISSUE\n    first: 100\n    ${getCursor(order)(pagination)}\n  ) {\n    issueCount\n    ${pageInfo}\n    edges {\n      node {\n        ... on Issue {\n          title\n          createdAt\n          closedAt\n          state\n          labels(first:10) {\n            edges {\n              node {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst searchPullRequests = ({\n    org,\n    repo,\n    order,\n    fromDate,\n    toDate\n}) => (pagination)=> `\n  pullRequests: search(\n    query: \"is:merged is:pr ${getDateRange('merged', order, fromDate, toDate)} repo:${org}/${repo} sort:created-${/asc/i.test(order) ? 'asc' : 'desc'}\"\n    type: ISSUE\n    first: 100\n    ${getCursor(order)(pagination)}\n  ) {\n    issueCount\n    ${pageInfo}\n    edges {\n      node {\n        ... on PullRequest {\n          id\n          url\n          author {\n            login\n          }\n          repository {\n            name\n            owner {\n              login\n            }\n          }\n          additions\n          deletions\n          changedFiles\n          mergedAt\n          createdAt\n          ${reviews()}\n          ${comments()}\n        }\n      }\n    }\n  }\n`\n\nconst getPaginationByType = (oldFetchInfo, results, order) => type => {\n    const {\n        hasNextPage = false,\n        startCursor,\n        endCursor,\n    } = pathOr({}, ['data', 'result', type, 'pageInfo'], results)\n\n    const typeStateMap = {\n        pullRequests: 'prPagination',\n        issues: 'issuesPagination',\n        releases: 'releasesPagination',\n    }\n\n    const oldestDefault = order === 'DESC' ? endCursor : startCursor\n    const oldestCurrent = pathOr(oldestDefault, [typeStateMap[type], 'oldest'], oldFetchInfo)\n\n    const newestDefault = order === 'ASC' ? endCursor : startCursor\n    const newestCurrent = pathOr(newestDefault, [typeStateMap[type], 'newest'], oldFetchInfo)\n\n    // TODO: Dont clear if undefined cursor\n    // TODO: add hasPrevPage\n    return {\n        newest: order === 'ASC' &&  endCursor ? endCursor : newestCurrent,\n        oldest: order === 'DESC' && endCursor ? endCursor : oldestCurrent,\n        hasNextPage,\n    }\n}\n\nconst getRemainingPageCount = (data) => {\n  const [ maxItems ] = ['issues', 'pullRequests', 'releases']\n    .map(type => pathOr(0, ['data', 'result', type, 'totalCount'], data))\n    .sort((a,b) => a > b)\n\n    console.log('-=-=--maxItems', maxItems)\n\n    return Math.ceil(maxItems/100) -1\n}\n\nconst userQuery = ({\n  user,\n  order = 'DESC',\n  amountOfData,\n  issuesPagination = {},\n  prPagination = {},\n}) => ({\n  query: `{\n    result: user(login: \"${user}\") {\n      login\n      ${prPagination.hasNextPage ? pullRequests(order)(prPagination) : ''}\n      ${issuesPagination.hasNextPage ? issues(order)(issuesPagination) : ''}\n    }\n  }`,\n  order,\n  resultInfo: (data) => {\n      const resultTypes = [\n          ['prPagination', 'pullRequests'],\n          ['issuesPagination', 'issues'],\n      ]\n\n      const byType = getPaginationByType(\n          {\n              issuesPagination,\n              prPagination,\n          },\n          data,\n          order\n      )\n\n      console.log('-=-=--data', data)\n      console.log('-=-=--amountOfData', amountOfData)\n\n      const updatedAmountOfData = Number.isInteger(amountOfData)\n          ? amountOfData - 1\n          : getRemainingPageCount(data);\n\n      console.log('-=-=--updatedAmountOfData, amountOfData', updatedAmountOfData, amountOfData)\n\n      const nextPageInfo = {}\n      resultTypes\n          .forEach(([key, type]) => nextPageInfo[key] = byType(type))\n      console.log('-=-=--nextPageInfo', nextPageInfo)\n      return {\n          hasNextPage: Object.values(nextPageInfo).some(({ hasNextPage } ) => hasNextPage !== false),\n          nextPageInfo: {\n            ...nextPageInfo,\n            amountOfData: updatedAmountOfData,\n          },\n      }\n  },\n  fillerType: 'batchedQuery',\n  hasMoreResults: [\n      prPagination.hasNextPage,\n      issuesPagination.hasNextPage,\n  ]\n      .some(x => x !== false),\n})\n\n// Sort out hasNextpage as diff by order\nconst batchedQuery = ({\n    org,\n    repo,\n    order = 'DESC',\n    amountOfData,\n    issuesPagination = {},\n    releasesPagination = {},\n    prPagination = {},\n}) => ({\n    query: `{\n      result: repository(name: \"${repo}\" owner: \"${org}\") {\n        id\n        description\n        name\n        owner {\n          org: login\n        }\n        ${prPagination.hasNextPage ? pullRequests(order)(prPagination) : ''}\n        ${issuesPagination.hasNextPage ? issues(order)(issuesPagination) : ''}\n        ${releasesPagination.hasNextPage ? releases(order)(releasesPagination) : ''}\n      }\n    }`,\n    order,\n    resultInfo: (data) => {\n        const resultTypes = [\n            ['prPagination', 'pullRequests'],\n            ['issuesPagination', 'issues'],\n            ['releasesPagination', 'releases'],\n        ]\n\n        const byType = getPaginationByType(\n            {\n                issuesPagination,\n                releasesPagination,\n                prPagination,\n            },\n            data,\n            order\n        )\n\n        console.log('-=-=--data', data)\n        console.log('-=-=--amountOfData', amountOfData)\n\n        const updatedAmountOfData = Number.isInteger(amountOfData)\n            ? amountOfData - 1\n            : getRemainingPageCount(data);\n\n        console.log('-=-=--updatedAmountOfData, amountOfData', updatedAmountOfData, amountOfData)\n\n        const nextPageInfo = resultTypes\n            .reduce((acc,[key, type]) => ({\n                ...acc,\n                [key] : byType(type)\n            }), {})\n\n        return {\n            hasNextPage: Object.values(nextPageInfo).some(({ hasNextPage } ) => hasNextPage !== false),\n            nextPageInfo: {\n              ...nextPageInfo,\n              amountOfData: updatedAmountOfData,\n            },\n        }\n    },\n    fillerType: 'batchedQuery',\n    hasMoreResults: [\n        prPagination.hasNextPage,\n        issuesPagination.hasNextPage,\n        releasesPagination.hasNextPage,\n    ]\n        .some(x => x !== false),\n})\n\nconst commentsQuery = ({ nodeId, cursor }) => ({\n    query: `{\n      node(id:\"${nodeId}\") {\n          ... on PullRequest {\n            id\n            ${comments(cursor)}\n          }\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'node', 'comments', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'node', 'comments', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            nodeId: pathOr('', ['data', 'node', 'id'], data),\n            cursor: pathOr('', ['data', 'node', 'comments', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n})\n\nconst reviewsQuery = ({ nodeId, cursor }) => ({\n    query: `{\n      node(id:\"${nodeId}\") {\n          ... on PullRequest {\n            id\n            ${reviews(cursor)}\n          }\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'node', 'reviews', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'node', 'reviews', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            nodeId: pathOr('', ['data', 'node', 'id'], data),\n            cursor: pathOr('', ['data', 'node', 'reviews', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n    fillerType: 'pullRequestReviewComments',\n})\n\nconst reviewCommentsQuery = ({ nodeId, cursor }) => ({\n    query: `{\n      node(id:\"${nodeId}\") {\n          ... on PullRequestReview {\n            id\n            ${comments(cursor)}\n          }\n        }\n    }`,\n    resultInfo: (data) => ({\n        rawData: data,\n        results: pathOr([], ['data', 'node', 'comments', 'edges'], data),\n        hasNextPage: pathOr(false, ['data', 'node', 'comments', 'pageInfo', 'hasNextPage'], data),\n        nextArgs: {\n            nodeId: pathOr('', ['data', 'node', 'id'], data),\n            cursor: pathOr('', ['data', 'node', 'comments', 'pageInfo', 'endCursor'], data),\n        },\n    }),\n})\n\nexport {\n    userQuery,\n    batchedQuery,\n    reviewCommentsQuery,\n    commentsQuery,\n    reviewsQuery,\n    searchIssues,\n    searchPullRequests,\n}","import { pathOr, propOr } from 'ramda'\nimport batch from './batch'\n\nimport {\n    commentsQuery,\n    reviewsQuery,\n    reviewCommentsQuery,\n} from './queries'\n\n// TODO: make this file more understandable\n// TODO: retry errored fill\nconst fillData = apiCall => {\n    const fillByType = (type) => {\n\n        const fillersByType = {\n            'pullRequests': [\n                pullRequestsComments,\n                pullRequestsReviews,\n            ],\n            'pullRequestReviewComments': [\n                allPullRequestReviewsComments,\n            ],\n            'batchedQuery': [\n                pullRequestsComments,\n                pullRequestsReviews,\n            ],\n        }\n\n        const fillers = fillersByType[type] || []\n\n        return (data) => fillers.length\n            ? Promise.all(\n                fillers\n                    .map((filler) => filler(data))\n            )\n                .then((resolvedFillers) => resolvedFillers\n                    .reduce((currentItem, applyFillerResult) => applyFillerResult(currentItem), data)\n                )\n            : data\n    }\n\n    const recursiveFiller = makeQuery => (queryInfo = {}) => async (currentResults = []) => {\n        const {\n            hasNextPage: currentHasNextPage,\n        } = queryInfo\n\n        const {\n            query,\n            resultInfo,\n            fillerType,\n        } = makeQuery(queryInfo)\n\n        const newResult = currentHasNextPage\n            ? await apiCall(query)\n            : {}\n\n        const {\n            results = [],\n            hasNextPage: newHasNextPage,\n            nextArgs,\n        } = resultInfo(newResult)\n\n        const updatedData = [\n            ...currentResults,\n            ...results,\n        ]\n\n        return newHasNextPage\n            ? recursiveFiller(makeQuery)(nextArgs)(updatedData)\n            : await fillByType(fillerType)(updatedData)\n    }\n\n    const updateRawData = (rawData = {}) => key => newData => {\n        const updatedNode = Object.assign(rawData.node, { [key]: newData })\n\n        return Object.assign(rawData, { node: updatedNode })\n    }\n\n    const getQueryInfo = key => data => ({\n        nodeId: pathOr('', ['node', 'id'], data),\n        cursor: pathOr('', ['node', key, 'pageInfo', 'endCursor'], data),\n        hasNextPage: pathOr(false, ['node', key, 'pageInfo', 'hasNextPage'], data),\n    })\n\n    const allPullRequestReviewsComments = async(data = []) => {\n        const getAllReviewComments = async(review) => {\n            const currentReviewComments = pathOr([], ['node', 'comments', 'edges'], review)\n            const reviewCommentsQueryInfo = getQueryInfo('comments')(review)\n\n            const allReviewComments = await recursiveFiller(reviewCommentsQuery)(reviewCommentsQueryInfo)(currentReviewComments)\n\n            return updateRawData(review)('comments')({ edges: allReviewComments })\n        }\n        const updatedReviewComments = await batch(data, getAllReviewComments, 10)\n\n        return () => updatedReviewComments\n    }\n\n    const pullRequestsReviews = async(data) => {\n        const pullRequests = pathOr([], ['data', 'result', 'pullRequests', 'edges'], data)\n\n        const getAllPullRequestReviews = async (pullRequest) => {\n            const currentReviews = pathOr([], ['node','reviews','edges'], pullRequest)\n            const reviewsQueryInfo = getQueryInfo('reviews')(pullRequest)\n\n            const allReviews = await recursiveFiller(reviewsQuery)(reviewsQueryInfo)(currentReviews)\n\n            return {\n                nodeId: pathOr('', ['node', 'id'], pullRequest),\n                results: { edges: allReviews },\n            }\n        }\n        const allPullRequestsReviews = await batch(pullRequests, getAllPullRequestReviews, 10)\n\n        return (data) => {\n            const updatedpullRequestsData = updatePullRequests(data)('reviews')(allPullRequestsReviews)\n\n            return {\n                data: Object.assign(propOr({}, 'data', data),\n                    {\n                        result: Object.assign(pathOr(\n                            {\n                                pullRequests: updatedpullRequestsData,\n                            },\n                            ['data', 'result'],\n                            data,\n                        )),\n                    }\n                ),\n            }\n        }\n    }\n\n    const updatePullRequests = data =>  key => pullRequestsItems => {\n        const pullRequestsData = pathOr({}, ['data', 'result', 'pullRequests'], data)\n        const currentPullRequests = pathOr([], ['data', 'result', 'pullRequests', 'edges'], data)\n\n        const mergedPullRequests = currentPullRequests\n            .map((currentPullRequest) => {\n                const nodeId = pathOr('', ['node', 'id'], currentPullRequest)\n                const item = pullRequestsItems\n                    .find(x => x.nodeId === nodeId)\n\n                return item\n                    ? updateRawData(currentPullRequest)(key)(item.results)\n                    : currentPullRequest\n\n            })\n\n        return Object.assign(pullRequestsData, { edges: mergedPullRequests })\n    }\n\n    const pullRequestsComments = async(data) => {\n        const pullRequests = pathOr([], ['data', 'result', 'pullRequests', 'edges'], data)\n\n        const getAllPullRequestComments = async (pullRequest) => {\n            const currentComments = pathOr([], ['node', 'comments', 'edges'], pullRequest)\n            const commentsQueryInfo = getQueryInfo('comments')(pullRequest)\n\n            const allComments = await recursiveFiller(commentsQuery)(commentsQueryInfo)(currentComments)\n\n            return {\n                nodeId: pathOr('', ['node','id'], pullRequest),\n                results: { edges: allComments },\n            }\n        }\n\n        const allPullRequestsComments = await batch(pullRequests, getAllPullRequestComments, 10)\n\n        return (data) => {\n            const updatedpullRequestsData = updatePullRequests(data)('comments')(allPullRequestsComments)\n\n            return {\n                data: Object.assign(propOr({}, 'data', data),\n                    {\n                        result: Object.assign(pathOr(\n                            {\n                                pullRequests: updatedpullRequestsData,\n                            },\n                            ['data', 'result'],\n                            data\n                        )),\n                    }\n                ),\n            }\n        }\n    }\n\n    return fillByType\n}\n\nexport default fillData\n","const types = {\n    SET_USER: 'SET_USER',\n    CLEAR_USER: 'CLEAR_USER',\n    SET_TEAM_NAME: 'SET_TEAM_NAME',\n    CLEAR_TEAM_NAME: 'CLEAR_USER',\n    STORE_ORG: 'STORE_ORG',\n    STORE_TOKEN: 'STORE_TOKEN',\n    SET_PR_PAGINATION: 'SET_PR_PAGINATION',\n    CLEAR_PR_PAGINATION: 'CLEAR_PR_PAGINATION',\n    SET_RELEASES_PAGINATION: 'SET_RELEASES_PAGINATION',\n    CLEAR_RELEASES_PAGINATION: 'CLEAR_RELEASES_PAGINATION',\n    SET_ISSUES_PAGINATION: 'SET_ISSUES_PAGINATION',\n    CLEAR_ISSUES_PAGINATION: 'CLEAR_ISSUES_PAGINATION',\n    FETCH_STATUS: 'FETCH_STATUS',\n    FETCH_START: 'FETCH_START',\n    FETCH_ERROR: 'FETCH_ERROR',\n    CLEAR_FETCH_ERROR: 'CLEAR_FETCH_ERROR',\n    FETCH_END: 'FETCH_END',\n    STORE_REPOS: 'STORE_REPOS',\n    STORE_REPO: 'STORE_REPO',\n    STORE_AMOUNT: 'STORE_AMOUNT',\n    STORE_SORT: 'STORE_SORT',\n    STORE_ENT_URL: 'STORE_ENT_URL',\n    STORE_EX_IDS: 'STORE_EX_IDS',\n    STORE_USER_IDS: 'STORE_USER_IDS',\n    ADD_PRS: 'ADD_PRS',\n    CLEAR_PRS: 'CLEAR_PRS',\n    ADD_REPO_INFO: 'ADD_REPO_INFO',\n    CLEAR_REPO_INFO: 'CLEAR_REPO_INFO',\n    ADD_ISSUES: 'ADD_ISSUES',\n    CLEAR_ISSUES: 'CLEAR_ISSUES',\n    ADD_RELEASES: 'ADD_RELEASES',\n    CLEAR_RELEASES: 'CLEAR_RELEASES',\n    TOGGLE_THEME: 'TOGGLE_THEME',\n    PREFETCHED_REPO: 'PREFETCHED_REPO',\n    ADD_USERS_DATA: 'ADD_USERS_DATA',\n    CLEAR_USERS_DATA: 'CLEAR_USERS_DATA',\n}\n\nexport default types","// TODO: Think more about if this should maintain github api data structures\n// TODO: add tests\nimport {\n    always,\n    cond,\n    propOr,\n    pathOr,\n    propEq,\n    mergeDeepRight,\n    T as alwaysTrue,\n    F as alwaysFalse,\n} from 'ramda'\nimport { compose } from 'redux'\n\nimport fillData from './fillers'\nimport types from '../state/types'\n\nconst parseJSON = response => new Promise((resolve, reject) => {\n    response.json()\n        .then(data => response.status === 200\n            ? resolve(data)\n            : reject(Object.assign(data, { status: response.status }))\n        )\n        .catch(error => {\n            error.status = response.status\n            reject(error)\n        })\n})\n\nconst triggeredAbuseRate = ({ message = '' }) =>/(You have triggered an abuse detection mechanism|You have exceeded a secondary rate limit)/.test(message)\n\nconst apiCall = fetchInfo => query =>\n    fetch((fetchInfo.enterpriseAPI || 'https://api.github.com/graphql'), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${fetchInfo.token}`,\n        },\n        body: JSON.stringify({ query }),\n    })\n        .then(parseJSON)\n\nconst shouldGetNextPage = (hasNextPage, { amountOfData }) => cond([\n    [always(hasNextPage === false), alwaysFalse],\n    [always(hasNextPage && Number.isInteger(amountOfData) && amountOfData >= 1), alwaysTrue],\n    [always(hasNextPage && amountOfData === 'all'), alwaysTrue],\n    [alwaysTrue, alwaysFalse],\n]);\n\nconst pause = (ms = 3000) => new Promise(resolve => setTimeout(resolve, ms))\nlet numRateTriggers = 0\n\nconst pauseThenRetry = async(apiInfo, results) => {\n    console.log('-=-=--paused');\n    await pause();\n    ++numRateTriggers\n    return numRateTriggers <= 10\n        ? api(apiInfo, results)\n        : {\n            level: 'error',\n            message: 'Hit rate limit too many times'\n        }\n}\n\nconst getTotalItemsByType = (type = '', results = []) => {\n    const [ result ] = results\n    const total = pathOr(0, ['data', 'result', type, 'totalCount'], result)\n    return total\n}\n\nconst getCurrentItemsByType = (type = '', results = []) => {\n    const total = results\n        .reduce((acc, result) => {\n            const itemCount = pathOr([], ['data', 'result', type, 'edges'], result)\n                .length\n            return acc + itemCount\n        }, 0)\n\n    return total\n}\n\nconst api = async({ fetchInfo, queryInfo, dispatch }, results = []) => {\n    const {\n        query,\n        resultInfo,\n        fillerType,\n    } = queryInfo(fetchInfo)\n    console.log('-=-=--query', query)\n\n    dispatch({\n        type: types.FETCH_STATUS,\n        payload: {\n            page: results.length,\n            pagesLoaded: results.length,\n            pagesRemaining: fetchInfo.amountOfData === 'all'\n                ? 0\n                : fetchInfo.amountOfData,\n            pullRequests: getCurrentItemsByType('pullRequests', results),\n            pullRequestsTotal: getTotalItemsByType('pullRequests', results),\n            issues: getCurrentItemsByType('issues', results),\n            issuesTotal: getTotalItemsByType('issues', results),\n            releases: getCurrentItemsByType('releases', results),\n            releasesTotal: getTotalItemsByType('releases', results),\n        }\n    })\n\n    const apiCallWithToken = apiCall(fetchInfo)\n    try {\n        const result = await apiCallWithToken(query)\n        if (triggeredAbuseRate(result)) {\n            throw new Error('Abuse rate triggered');\n        }\n\n        const fullData = await fillData(apiCallWithToken)(fillerType)(result)\n        const updatedResults = [\n            ...results,\n            fullData\n        ]\n\n        const {\n            hasNextPage,\n            nextPageInfo,\n        } = resultInfo(result)\n\n        const updatedFetchInfo = mergeDeepRight(fetchInfo, nextPageInfo)\n\n        return shouldGetNextPage(hasNextPage, updatedFetchInfo)(fullData)\n            ? api({ fetchInfo: updatedFetchInfo, queryInfo, dispatch }, updatedResults)\n            : {\n                fetchInfo: updatedFetchInfo,\n                results: updatedResults,\n            }\n    } catch (error) {\n        console.log('-=-=--api error', error)\n        const hasTriggeredAbuse = cond([\n            [triggeredAbuseRate, alwaysTrue],\n            [propEq('status', 500), alwaysTrue],\n            [propEq('status', 502), alwaysTrue],\n            [propEq('message', 'Abuse rate triggered'), alwaysTrue],\n            [compose(/ENOTFOUND|ECONNRESET/.test, propOr('', 'code')), alwaysTrue],\n            [compose(/fetch/i.test, propOr('', 'message')), alwaysTrue],\n            [alwaysTrue, alwaysFalse],\n        ])\n        const getErrorMessage = cond([\n            [\n                hasTriggeredAbuse,\n                always({\n                    level: 'warn',\n                    message: 'You may have triggered the api\\'s abuse detection, please wait a minute before trying again',\n                })\n            ],\n            [\n                propEq('status', 401),\n                always({\n                    level: 'error',\n                    message: 'GitHub token does not have correct settings, please see README',\n                }),\n            ],\n            [\n                compose(/40\\d/i.test, propOr('', 'status')),\n                always({\n                    level: 'error',\n                    message: `Auth error: ${error.message || 'UNKOWN'}`,\n                })\n            ],\n            [\n                alwaysTrue,\n                always({\n                    level: 'error',\n                    message: `ERROR: ${error.message || 'UNKOWN'}`,\n                })\n            ]\n        ]);\n\n        const errorMessage = getErrorMessage(error)\n        console.log('-=-=--errorMessage', errorMessage)\n\n        return hasTriggeredAbuse(error)\n            ? pauseThenRetry({ fetchInfo, queryInfo, dispatch }, results)\n            : {\n                ...errorMessage,\n                // fetchInfo: fetchInfo,\n                // results: results,\n            }\n    }\n}\n\nexport default api","import { userQuery as queryInfo } from './queries'\nimport { prop, pick } from 'ramda'\nimport api from './api'\nimport batch from './batch'\n\nconst getUsersData = async(fetchInfo, dispatch) => {\n    try {\n        const userIds = fetchInfo.userIds\n        const data = userIds\n            .map((user) => ({\n                fetchInfo: {\n                    ...fetchInfo,\n                    user,\n                },\n                queryInfo,\n                dispatch,\n            }))\n\n        const allUsersData = await batch(data, api, 3)\n\n        const finalFetchInfo = {\n            ...fetchInfo,\n            users: {},\n        }\n        const allResults = []\n        allUsersData\n            .forEach(({ fetchInfo, results }) => {\n                const user = prop('user', fetchInfo)\n                finalFetchInfo.users[user] = pick(['issuesPagination', 'prPagination', 'user'], fetchInfo)\n                allResults.push(results)\n            })\n\n        const usersData = {\n            fetchInfo: finalFetchInfo,\n            results: allResults.flat(),\n        }\n\n        console.log('-=-=--usersData', usersData)\n\n        return usersData\n    } catch (error) {\n        console.log('-=-=--getUsersData:error', error)\n        throw error\n    }\n}\n\nexport default getUsersData\n","const slimValue = (value) => {\n    const newValue = (typeof value === 'string' && value.length && value) // picks defined string\n        || (/^-?[\\d.]+$/.test(`${value}`) && /^-?[^0]/.test(`${value}`) && value) // picks non 0 number\n        || (Array.isArray(value) && value.length && slimArray(value)) // picks defined array\n        || (value && Object.keys(value).length && slimObject(value)) // picks defiend object\n        || (typeof value === 'boolean' && value) // allows boolean, false will be ignored\n\n    return newValue\n}\n\nconst slimArray = arr => {\n    const newArray = arr\n        .reduce((acc, item) => [\n            ...acc,\n            ...([slimValue(item)])\n        ], [])\n\n    return newArray.length && newArray\n}\n\nconst slimObject = obj => {\n    const newObject = Object.entries(obj)\n        .reduce((acc, [key, value]) => {\n            const newValue = slimValue(value)\n\n            return {\n                ...acc,\n                ...( newValue\n                    ? { [key]: newValue }\n                    : {}\n                )\n            }\n        }, {});\n\n    return Object.keys(newObject).length && newObject\n}\n\nexport {\n    slimValue,\n    slimArray,\n    slimObject,\n}\n","\nconst baseUserData = {\n    author: '',\n    approvalsGiven: 0,\n    approvalsByUser: {},\n    commentsGiven: 0,\n    commentsReceived: 0,\n    codeCommentsGiven: 0,\n    codeCommentsReceived: 0,\n    generalCommentsGiven: 0,\n    generalCommentsReceived: 0,\n    totalPRs: 0,\n    uniquePRsContributedTo: 0,\n    commentsByUser: {},\n}\n\nconst updateContributorCount = (currentData, objKey, obj, addition) => Object.entries(obj)\n    .reduce((acc, [key, value]) => {\n        const prevData = currentData[key] || {}\n        const updated = {\n            ...baseUserData,\n            ...prevData,\n            user: key,\n            [objKey]: (prevData[objKey] || 0) + (addition || value),\n        }\n\n        return Object.assign(acc, { [key]: updated })\n    }, {})\n\nconst formatUserData = (data = []) => {\n    const updateByUsersCount = (currentData, objKey, obj, author) => Object.entries(obj)\n        .reduce((acc, [key, value]) => {\n            const currentUserData = currentData[key] || {}\n            const currentKeyData = currentUserData[objKey] || {}\n            const updatedKeyData = {\n                ...currentKeyData,\n                [author]: (currentKeyData[author] || 0) + (value || 0),\n            }\n\n            const updated = {\n                ...baseUserData,\n                ...currentUserData,\n                author: key,\n                [objKey]: updatedKeyData,\n            }\n\n            return Object.assign(acc, { [key]: updated })\n        }, {})\n    const userData = data\n        .reduce((acc, prData) => {\n            const {\n                author,\n                prSize = 0,\n                age = 0,\n                approvals = 0,\n                approvers = {},\n                comments = 0,\n                commenters = {},\n                codeComments = 0,\n                codeCommenters = {},\n                generalComments = 0,\n                generalCommenters = {},\n            } = prData\n\n            const updatedCommentsByUser = updateByUsersCount(acc, 'commentsByUser', commenters, author)\n            Object.assign(acc, updatedCommentsByUser)\n\n            const updatedApprovalsByUser = updateByUsersCount(acc, 'approvalsByUser', approvers, author)\n            Object.assign(acc, updatedApprovalsByUser)\n\n            const updatedCommentsGiven = updateContributorCount(acc, 'commentsGiven', commenters)\n            Object.assign(acc, updatedCommentsGiven)\n\n            const updatedCodeCommentsGiven = updateContributorCount(acc, 'codeCommentsGiven', codeCommenters)\n            Object.assign(acc, updatedCodeCommentsGiven)\n\n            const updatedGeneralCommentsGiven = updateContributorCount(acc, 'generalCommentsGiven', generalCommenters)\n            Object.assign(acc, updatedGeneralCommentsGiven)\n\n            const updatedApprovalsGiven = updateContributorCount(acc, 'approvalsGiven', approvers)\n            Object.assign(acc, updatedApprovalsGiven)\n\n            const updatedUniquePRsApproved = updateContributorCount(acc, 'uniquePRsApproved', approvers, 1)\n            Object.assign(acc, updatedUniquePRsApproved)\n\n            const contrtibutors = [...new Set([\n                ...Object.keys(codeCommenters),\n                ...Object.keys(generalCommenters),\n                ...Object.keys(approvers),\n            ])]\n\n            contrtibutors\n                .forEach((key) => {\n                    const prevData = acc[key] || {}\n                    const updated = {\n                        ...baseUserData,\n                        ...prevData,\n                        author: key,\n                        uniquePRsContributedTo: (prevData.uniquePRsContributedTo || 0) + 1,\n                    }\n\n                    Object.assign(acc, { [key]: updated })\n                })\n\n\n            const prevData = acc[author] || {}\n\n            const prSizes = [...(prevData.prSizes || []), prSize]\n            const averagePrSize = Math.round(prSizes.reduce((acc, x) => acc + x, 0) / prSizes.length)\n\n            const prAges = [...(prevData.prAges || []), age]\n            const averagePrAge = Math.round(prAges.reduce((acc, x) => acc + x, 0) / prAges.length)\n\n            return Object.assign(acc, {\n                [author]: {\n                    ...baseUserData,\n                    ...prevData,\n                    author,\n                    user: author,\n                    approvalsReceived: (prevData.approvalsReceived || 0) + approvals,\n                    commentsReceived: (prevData.commentsReceived || 0) + comments,\n                    codeCommentsReceived: (prevData.codeCommentsReceived || 0) + codeComments,\n                    generalCommentsReceived: (prevData.generalCommentsReceived || 0) + generalComments,\n                    totalPRs: (prevData.totalPRs || 0) + 1,\n                    prSizes,\n                    prSize: averagePrSize,\n                    prAges,\n                    age: averagePrAge,\n                },\n            })\n\n        }, {})\n\n\n    const uniqueAuthors = [...new Set(data.map(x => x.author))]\n\n    const newUsersData = Object.values(userData)\n        .filter(({ author }) => uniqueAuthors.some(x => x === author))\n\n    const keys = [\n        'commentsGiven',\n        'commentsReceived',\n        'approvalsGiven',\n        'approvalsReceived',\n    ]\n\n    const sortedUsers = newUsersData\n        .sort((a, b) => {\n            const aTotal = keys\n                .reduce((acc, key) => acc + (a[key] || 0), 0)\n\n            const bTotal = keys\n                .reduce((acc, key) => acc + (b[key] || 0), 0)\n            return bTotal - aTotal\n        })\n\n    return sortedUsers\n}\n\nexport default formatUserData","import {\n    assoc,\n    dissocPath,\n    equals,\n    filter,\n    not,\n    map,\n    path,\n    pickAll,\n    pipe,\n    split,\n    trim,\n    propOr,\n} from 'ramda'\nimport api from '../api/api'\nimport getUsersData from '../api/getUsersData'\nimport {\n    formatPullRequests,\n    formatIssues,\n    formatReleases,\n    formatRepoInfo,\n} from '../format/rawData'\nimport { slimObject } from '../format/lightenData'\nimport { batchedQuery } from '../api/queries'\nimport formatUserData from '../format/userData'\nimport types from './types'\n\nconst setUser = (user = '') => ({\n    type: types.SET_USER,\n    payload: user,\n})\n\nconst toggleTheme = () => ({\n    type: types.TOGGLE_THEME,\n})\n\nconst clearUser = () => ({\n    type: types.CLEAR_USER,\n})\n\nconst storeToken = (token = '') => ({\n    type: types.STORE_TOKEN,\n    payload: token,\n})\n\nconst storeOrg = (org = '') => (dispatch, getState) => {\n    const {\n        fetches: {\n            org: currentOrg,\n        },\n    } = getState()\n\n    org && currentOrg && org !== currentOrg\n        && clearData(dispatch)\n\n    return dispatch({\n        type: types.STORE_ORG,\n        payload: org,\n    })\n}\n\nconst storeEnterpriseAPI = (enterpriseAPI = '') => (dispatch, getState) => {\n    const {\n        fetches: {\n            enterpriseAPI: currentEnterpriseAPI\n        },\n    } = getState()\n\n    enterpriseAPI && currentEnterpriseAPI && enterpriseAPI !== currentEnterpriseAPI\n        && clearData(dispatch)\n\n    return dispatch({\n        type: types.STORE_ENT_URL,\n        payload: enterpriseAPI,\n    })\n}\n\nconst storeTeamName = (teamName = '') => (dispatch, getState) => {\n    const {\n        fetches: {\n            teamName: currentTeamName\n        },\n    } = getState()\n\n    teamName && currentTeamName && teamName !== currentTeamName\n        && clearData(dispatch)\n\n    return dispatch({\n        type: types.SET_TEAM_NAME,\n        payload: teamName,\n    })\n}\n\nconst userIdsFromString = pipe(\n    split(','),\n    map(trim),\n    filter(Boolean)\n)\n\nconst storeUserIds = (userIds = '') => (dispatch, getState) => {\n    const userIdsArray = userIdsFromString(userIds)\n\n    const {\n        fetches: {\n            userIds: currentUserIds = []\n        },\n    } = getState()\n\n    not(equals(currentUserIds, userIdsArray))\n        && clearData(dispatch)\n\n    return dispatch({\n        type: types.STORE_USER_IDS,\n        payload: userIdsArray,\n    })\n}\n\nconst storeExcludeIds = (excludeIds = '') => (dispatch, getState) => {\n    const excludeArray = userIdsFromString(excludeIds)\n\n    const {\n        fetches: {\n            excludeIds: currentExcludeIds\n        },\n    } = getState()\n\n    excludeArray.length && not(equals(currentExcludeIds, excludeArray))\n        && clearData(dispatch)\n\n    return dispatch({\n        type: types.STORE_EX_IDS,\n        payload: excludeArray,\n    })\n}\n\nconst storeRepo = (repo = '') => (dispatch, getState) => {\n    const {\n        fetches: {\n            repo: currentRepo,\n        },\n    } = getState()\n\n    repo && currentRepo && repo !== currentRepo\n        && clearData(dispatch)\n\n    return dispatch({\n        type: types.STORE_REPO,\n        payload: repo,\n    })\n}\n\nconst storeAmountOfData = (amountOfData = '') => (dispatch) => dispatch({\n    type: types.STORE_AMOUNT,\n    payload: amountOfData,\n})\n\nconst storeSortDirection = (sortDirection = 'DESC') => (dispatch) => dispatch({\n    type: types.STORE_SORT,\n    payload: sortDirection,\n})\n\nconst clearData = (dispatch, msg = 'fff') => {\n    dispatch({ type: types.CLEAR_USER })\n    dispatch({ type: types.CLEAR_PRS })\n    dispatch({ type: types.CLEAR_PR_PAGINATION })\n    dispatch({ type: types.CLEAR_REPO_INFO })\n    dispatch({ type: types.CLEAR_USERS_DATA })\n    dispatch({ type: types.CLEAR_RELEASES })\n    dispatch({ type: types.CLEAR_RELEASES_PAGINATION })\n    dispatch({ type: types.CLEAR_ISSUES })\n    dispatch({ type: types.CLEAR_ISSUES_PAGINATION })\n    dispatch({ type: types.CLEAR_FETCH_ERROR })\n}\n\n// Hmm: full users format per new pr results\nconst updateUsersData = (dispatch, getState) => {\n    const { pullRequests } = getState()\n\n    dispatch({\n        type: types.ADD_USERS_DATA,\n        payload: formatUserData(pullRequests),\n    })\n}\n\nconst formatApiRepoInfo = ({ fetches: { repo, org, description = '' } = {} } = {} ) => ({\n    repo,\n    org,\n    description,\n})\n\nconst getErrorMessage = state => {\n    const {\n        fetches: {\n            org,\n            repo,\n            token,\n        } = {},\n    } = state\n\n    const missing = [\n        !org && 'Organisation',\n        !repo && 'Repository',\n        !token &&'GitHib token',\n    ]\n        .filter(Boolean)\n\n    const prepend = (i) => {\n        const maxIndex = missing.length - 1\n\n        return [\n            i === 0\n            && (() => 'Missing '),\n            i === maxIndex\n            && (() => ' and '),\n            i > 0\n            && (() => ', '),\n        ].find(Boolean)()\n    }\n\n    const message = missing\n        .reduce((acc, current, i) => acc + prepend(i) + current, '')\n\n    return message\n}\n\nconst validateRequest = state => {\n    const {\n        fetches: {\n            org,\n            repo,\n            token,\n        } = {},\n    } = state\n\n    const hasArgs = [org, repo, token]\n        .every(item => typeof item === 'string' && item.length > 0)\n\n    return {\n        isValid: hasArgs,\n        error: !hasArgs\n            ? {\n                level: 'error',\n                message: getErrorMessage(state),\n            }\n            : null,\n    }\n}\n\n// TODO: Improve clearData logic\nconst getAPIData = ({ appendData = false } = {}) => async (dispatch, getState) => {\n    const state = getState();\n\n    const { isValid: isValidRequest, error = {}} = validateRequest(state);\n\n    !isValidRequest && dispatch({\n        type: types.FETCH_ERROR,\n        payload: error,\n    })\n\n    isValidRequest && dispatch({\n        type: types.CLEAR_FETCH_ERROR,\n    })\n\n    isValidRequest && dispatch({\n        type: types.FETCH_START,\n    })\n\n    state.preFetchedRepo\n        && !appendData\n        && clearData(dispatch, 'pre api')\n\n    try {\n        const {\n            fetches,\n        } = getState();\n        const userIds = propOr([], 'userIds', fetches)\n\n        const { fetchInfo, results } = userIds.length\n            ? await getUsersData(fetches, dispatch)\n            : await api({ fetchInfo: fetches, queryInfo: batchedQuery, dispatch })\n        const excludeIds = propOr([], 'excludeIds', fetches)\n\n        const prs = formatPullRequests(excludeIds, results)\n        const repoInfo = formatRepoInfo(results)\n        const releases = formatReleases(results)\n        const issues = formatIssues(results)\n\n        dispatch({\n            type: types.ADD_PRS,\n            payload: prs,\n        })\n\n        dispatch({\n            type: types.ADD_REPO_INFO,\n            payload: repoInfo,\n        })\n\n        dispatch(updateUsersData)\n\n        dispatch({\n            type: types.ADD_RELEASES,\n            payload: releases,\n        })\n\n        dispatch({\n            type: types.ADD_ISSUES,\n            payload: issues,\n        })\n\n        dispatch({\n            type: types.SET_PR_PAGINATION,\n            payload: fetchInfo.prPagination,\n        })\n        dispatch({\n            type: types.SET_ISSUES_PAGINATION,\n            payload: fetchInfo.issuesPagination,\n        })\n        dispatch({\n            type: types.SET_RELEASES_PAGINATION,\n            payload: fetchInfo.releasesPagination,\n        })\n\n        dispatch({ type: types.FETCH_END })\n\n    } catch (error) {\n        console.log('-=-=--api data error', error)\n        dispatch({\n            type: types.FETCH_ERROR,\n            payload: {\n                level: 'error',\n                message: error.message || 'Unknown error',\n            },\n        })\n        dispatch({ type: types.FETCH_END })\n    }\n}\n\nconst getPreFetchedData = (repo = 'nivo') => (dispatch) => {\n    const repoData = require(`../prefetchedData/${repo}.json`)\n\n    const {\n        fetches = {},\n        preFetchedRepo = '',\n        pullRequests = [],\n        usersData= [],\n        issues = [],\n        releases = [],\n    } = repoData\n\n    clearData(dispatch)\n\n    const fetchesInfo = [\n        ['token', 'STORE_TOKEN'],\n        ['org', 'STORE_ORG'],\n        ['repo', 'STORE_REPO'],\n        ['enterpriseAPI', 'STORE_ENT_URL'],\n        ['prPagination', 'SET_PR_PAGINATION', {}],\n        ['releasesPagination', 'SET_RELEASES_PAGINATION', {}],\n        ['issuesPagination', 'SET_ISSUES_PAGINATION', {}]\n    ];\n\n    fetchesInfo.forEach(([payload, type, fallback = '']) => {\n        dispatch({\n            type: types[type],\n            payload: fetches[payload] || fallback,\n        })\n    });\n\n    dispatch({\n        type: types.PREFETCHED_REPO,\n        payload: preFetchedRepo,\n    })\n\n    dispatch({\n        type: types.ADD_REPO_INFO,\n        payload: formatApiRepoInfo(repoData),\n    })\n\n    dispatch({\n        type: types.ADD_PRS,\n        payload: pullRequests,\n    })\n    dispatch({\n        type: types.ADD_USERS_DATA,\n        payload: usersData.length\n            ? usersData\n            : formatUserData(pullRequests),\n    })\n\n    dispatch({\n        type: types.ADD_ISSUES,\n        payload: issues,\n    })\n\n    dispatch({\n        type: types.ADD_RELEASES,\n        payload: releases,\n    })\n\n    dispatch({\n        type: types.FETCH_END,\n    })\n}\n\nconst getDownloadProps = (dispatch, getState) => {\n    const state = getState()\n\n    const repo = path(['fetches', 'repo'], state)\n    const getReportData = pipe(\n        pickAll(['fetches', 'repoInfo', 'pullRequests', 'userData', 'issues', 'releases']),\n        dissocPath(['fetches', 'token']),\n        dissocPath(['fetches', 'amountOfData']),\n        dissocPath(['fetches', 'prPagination', 'hasNextPage']),\n        dissocPath(['fetches', 'issuesPagination', 'hasNextPage']),\n        dissocPath(['fetches', 'releasesPagination', 'hasNextPage']),\n        assoc('preFetchedRepo', repo),\n        slimObject\n    )\n\n    const reportData = getReportData(state)\n    const json = JSON.stringify(reportData, null, 2)\n    const blob = new Blob([json], { type: \"application/json\" })\n    const href  = URL.createObjectURL(blob)\n\n    return {\n        href,\n        download: `${path(['fetches', 'org'], state)}-${repo}.json`,\n    }\n}\n\nexport {\n    setUser,\n    clearUser,\n    storeOrg,\n    storeToken,\n    storeRepo,\n    storeTeamName,\n    storeEnterpriseAPI,\n    storeUserIds,\n    storeExcludeIds,\n    storeAmountOfData,\n    storeSortDirection,\n    getAPIData,\n    getPreFetchedData,\n    toggleTheme,\n    getDownloadProps,\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Button from '../../shared/Button'\nimport { P } from '../../shared/StyledTags'\nimport styles from './styles'\nimport { getPreFetchedData } from '../../../state/actions'\n\nconst FetchForm = (props) => {\n    const {\n        classes,\n        preFetchedRepo,\n        getPreFetchedRepo,\n    } = props\n\n    return (\n        <div className={classes.preFetched}>\n                <P>\n                    See community contribution health of some popular Open Source repositories.\n                </P>\n                {\n                    [\n                        'react',\n                        'svelte',\n                        'vue-next',\n                        'TypeScript',\n                        'material-ui',\n                        'xstate',\n                        'react-testing-library',\n                        'node',\n                        'deno',\n                        'vscode',\n                        'electron',\n                        'kotlin',\n                        'swift',\n                        'ramda',\n                        'babel',\n                        'jest',\n                        'prettier',\n                        'cypress',\n                    ]\n                        .map((repo, i) => <Button\n                            value={repo}\n                            key={i}\n                            color={preFetchedRepo === repo ? 'primary' : 'secondary'}\n                            onClick={(e) => {\n                                e.preventDefault()\n                                getPreFetchedRepo(repo)\n                            }}\n                        />)\n                }\n            </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    preFetchedRepo: state.preFetchedRepo,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getPreFetchedRepo: (x) => dispatch(getPreFetchedData(x)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FetchForm))\n","import React from 'react'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { P } from '../shared/StyledTags'\n\nconst variant = {\n    'warn': <WarningIcon />,\n    'error': <ErrorIcon />,\n}\n\nconst Message = ({\n    error: {\n        level,\n        message,\n    },\n    classes,\n    className,\n} = {}) => (\n    <div className={`${classes[level]} ${classes.root} ${className}`} >\n        {variant[level]}\n        <P className={classes.copy}>{message}</P>\n    </div>\n)\n\nconst styles = theme => ({\n    root: {\n        padding: '0.8rem',\n        display: 'flex',\n        alignItems: 'center',\n        borderRadius: '4px',\n    },\n    copy: {\n        margin: 0,\n        marginLeft: theme.mySpacing.y.medium,\n        padding: 0,\n        color: '#000',\n    },\n    error: {\n        backgroundColor: '#e02e2e',\n    },\n    warn: {\n        backgroundColor: '#dc7e09',\n    },\n})\nexport default withStyles(styles)(Message)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    always,\n    equals,\n    pathOr,\n    cond,\n    T as alwaysTrue\n} from 'ramda'\nimport {\n    TextField,\n    Select,\n    MenuItem,\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Button from '../../shared/Button'\nimport ChartDescription from '../../shared/ChartDescription'\nimport { P } from '../../shared/StyledTags'\nimport Message from '../Message'\nimport styles from './styles'\n\nimport {\n    storeOrg,\n    storeToken,\n    storeRepo,\n    storeEnterpriseAPI,\n    storeExcludeIds,\n    storeAmountOfData,\n    storeSortDirection,\n    getAPIData,\n    getPreFetchedData,\n    getDownloadProps,\n} from '../../../state/actions'\n\nconst buttonText = (fetching, preFetchedRepo, pullRequests = []) => [\n    fetching && 'fetching',\n    preFetchedRepo && `Get new ${preFetchedRepo} data`,\n    pullRequests.length && 'Get more data',\n    'Get data',\n].find(Boolean)\n\nconst validate = ({ key, value }) => {\n    const isValid = cond([\n        [equals('enterpriseAPI'), always(/^(https:\\/\\/.+\\..+|^$)/.test(value))],\n        [equals('excludeIds'), always(/^([\\w-.,\\s]+|)$/.test(value))],\n        [alwaysTrue, always(/^[\\w-.]+$/.test(value))],\n    ])(key)\n    return isValid\n}\n\nconst errorValue = formInfo => key => {\n    const value = formInfo[key]\n    const isValid = validate({ key, value })\n\n    return isValid ? false : true\n}\n\nconst RepoData = (props) => {\n    const {\n        setValues,\n        getData,\n        fetching,\n        error,\n        pullRequests = [],\n        classes,\n        preFetchedRepo,\n        getDownloadInfo,\n    } = props\n\n    const [inputError, setInputError] = useState({\n        token: false,\n        repo: false,\n        org: false,\n        enterpriseAPI: false,\n        excludeIds: false,\n    })\n\n    const [formInfo, setFormInfo] = useState({\n        startingPoint: 'now',\n        amountOfData: 1,\n        token: '',\n        repo: '',\n        org: '',\n        enterpriseAPI: '',\n        excludeIds: '',\n    })\n\n    const setValue = (key, value) => setFormInfo({\n        ...formInfo,\n        [key]: value\n    })\n\n    const inputProps = (key) => ({\n        className: classes.child,\n        error: inputError[key],\n        value: formInfo[key],\n        variant: 'outlined',\n        margin: 'normal',\n        helperText: inputError[key] && 'Invalid input',\n        onBlur: (event) => {\n            const value = pathOr('', ['target', 'value'], event)\n\n            const isValid = validate({ key, value })\n            setInputError({\n                ...inputError,\n                [key]: isValid ? false : true\n            })\n\n            console.log('-=-=--key,value,isValid', key,value,isValid)\n\n            isValid\n                && setValue(key, value)\n        },\n        onChange: (event) => {\n            const value = pathOr('', ['target', 'value'], event)\n            setInputError({\n                ...inputError,\n                [key]: false,\n            })\n\n            setValue(key, value)\n        },\n        onFocus: () => setInputError({\n            ...inputError,\n            [key]: false,\n        })\n    })\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        const getErrorValue = errorValue(formInfo)\n        const newInputError = {\n            'token': getErrorValue('token'),\n            'org': getErrorValue('org'),\n            'repo': getErrorValue('repo'),\n            'enterpriseAPI': getErrorValue('enterpriseAPI'),\n            'excludeIds': getErrorValue('excludeIds'),\n        }\n\n        setInputError(newInputError)\n\n        const allPass = Object.values(newInputError)\n            .every(x => !x)\n\n        console.log('-=-=--handleSubmitformInfo', formInfo)\n        allPass && !fetching\n            && setValues(formInfo)\n\n        allPass && !fetching\n            && getData()\n    }\n\n    return (\n        <ChartDescription\n            className={classes.formDescription}\n            title=\"\"\n            expandText=\"here\"\n            intro=\"Or get community contribution health data for any repository\"\n        >\n            <form\n                onSubmit={handleSubmit}\n            >\n                <div className={classes.inputGrid}>\n                    <Select\n                        value={formInfo.startingPoint}\n                        onChange={(e) => setValue('startingPoint', e.target.value)}\n                        inputProps={{ 'aria-label': 'Starting point' }}\n                        >\n                        <MenuItem value=\"now\" >Starting from now</MenuItem>\n                        <MenuItem value=\"start\">Starting from creation of the repo</MenuItem>\n                    </Select>\n                    <Select\n                        value={formInfo.amountOfData}\n                        onChange={(e) => setValue('amountOfData', e.target.value)}\n                        inputProps={{ 'aria-label': 'Amount of data' }}\n                        >\n                        <MenuItem value={1} default>Get 100 more PRs</MenuItem>\n                        <MenuItem value={20} >Get 2,000 more PRs</MenuItem>\n                        <MenuItem value={100} >Get 10,000 more PRs</MenuItem>\n                        <MenuItem value=\"all\">Get it all</MenuItem>\n                    </Select>\n\n                    <TextField\n                        {...inputProps('org')}\n                        label=\"Organisation\"\n                    />\n\n                    <TextField\n                        {...inputProps('repo')}\n                        label=\"Repository\"\n                    />\n                    <TextField\n                        {...inputProps('token')}\n                        label=\"Token*\"\n                    />\n                    <P className=\"tokenText\">\n                        * To create a token go to your GitHub <a className={classes.link} href=\"https://github.com/settings/tokens\">tokens</a> page, click on 'generate new token', choose the settings 'repo' (all) and 'read:org' then click 'Generate token'.\n                    </P>\n                </div>\n\n                <ChartDescription\n                    className={`${classes.formDescription} ${classes.fullRow}`}\n                    title=\"\"\n                    expandText=\"add this\"\n                    intro=\"Advanced options\"\n                >\n                    <div className={classes.inputGrid}>\n                        <TextField\n                            {...inputProps('excludeIds')}\n                            label=\"Exclude GitHub ids e.g. bots, ',' separated\"\n                        />\n                        <TextField\n                            {...inputProps('enterpriseAPI')}\n                            label=\"Enterprise API full url\"\n                        />\n                    </div>\n                </ChartDescription>\n\n                <div className={classes.inputGrid}>\n                    <Button\n                        className={`${classes.child} ${classes.fullRow}`}\n                        type={fetching ? 'disabled' : 'submit'}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        value={buttonText(fetching, '', preFetchedRepo ? [] : pullRequests)}\n                    />\n                    {\n                        error\n                            && <Message\n                                error={error}\n                                className={classes.fullRow}\n                            />\n                    }\n                </div>\n            </form>\n            {\n                !fetching\n                    && !preFetchedRepo\n                    && pullRequests.length > 0\n                    && <P><a className={classes.link} {...getDownloadInfo()}>Download report data</a></P>\n            }\n        </ChartDescription>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    fetching: state.fetching,\n    error: state.error,\n    pullRequests: state.pullRequests,\n    preFetchedRepo: state.preFetchedRepo,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setValues: ({ token, org, repo, enterpriseAPI, excludeIds, amountOfData, startingPoint }) => {\n        dispatch(storeToken(token))\n        dispatch(storeOrg(org))\n        dispatch(storeRepo(repo))\n        dispatch(storeEnterpriseAPI(enterpriseAPI))\n        dispatch(storeExcludeIds(excludeIds))\n        dispatch(storeAmountOfData(amountOfData))\n        dispatch(storeSortDirection(startingPoint === 'now'\n            ? 'DESC'\n            : 'ASC'\n        ))\n    },\n    getData: (x) => dispatch(getAPIData(x)),\n    getDownloadInfo: () => dispatch(getDownloadProps),\n    getPreFetchedRepo: (x) => dispatch(getPreFetchedData(x)),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RepoData))\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    always,\n    equals,\n    pathOr,\n    cond,\n    T as alwaysTrue\n} from 'ramda'\nimport {\n    TextField,\n    Select,\n    MenuItem,\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Button from '../../shared/Button'\nimport ChartDescription from '../../shared/ChartDescription'\nimport { P } from '../../shared/StyledTags'\nimport Message from '../Message'\nimport styles from './styles'\n\nimport {\n    storeToken,\n    storeUserIds,\n    storeTeamName,\n    storeEnterpriseAPI,\n    storeAmountOfData,\n    storeSortDirection,\n    getAPIData,\n    getDownloadProps,\n} from '../../../state/actions'\n\nconst buttonText = (fetching, pullRequests = []) => [\n    fetching && 'fetching',\n    pullRequests.length && 'Get more data',\n    'Get data',\n].find(Boolean)\n\nconst validate = ({ key, value }) => {\n    const isValid = cond([\n        [equals('enterpriseAPI'), always(/^(https:\\/\\/.+\\..+|^$)/.test(value))],\n        [equals('userIds'), always(/^([\\w-.,\\s]+)$/.test(value))],\n        [alwaysTrue, always(/^[\\w-.]+$/.test(value))],\n    ])(key)\n    return isValid\n}\n\nconst errorValue = formInfo => key => {\n    const value = formInfo[key]\n    const isValid = validate({ key, value })\n\n    return isValid ? false : true\n}\n\nconst RepoData = (props) => {\n    const {\n        setValues,\n        getData,\n        fetching,\n        error,\n        pullRequests = [],\n        classes,\n        getDownloadInfo,\n    } = props\n\n    const [inputError, setInputError] = useState({\n        token: false,\n        enterpriseAPI: false,\n        userIds: false,\n        teamName: false,\n    })\n\n    const [formInfo, setFormInfo] = useState({\n        startingPoint: 'now',\n        amountOfData: 1,\n        token: '',\n        teamName: '',\n        enterpriseAPI: '',\n        userIds: '',\n    })\n\n    const setValue = (key, value) => setFormInfo({\n        ...formInfo,\n        [key]: value\n    })\n\n    const inputProps = (key) => ({\n        className: classes.child,\n        error: inputError[key],\n        value: formInfo[key],\n        variant: 'outlined',\n        margin: 'normal',\n        helperText: inputError[key] && 'Invalid input',\n        onBlur: (event) => {\n            const value = pathOr('', ['target', 'value'], event)\n\n            const isValid = validate({ key, value })\n            setInputError({\n                ...inputError,\n                [key]: isValid ? false : true\n            })\n\n            console.log('-=-=--key,value,isValid', key,value,isValid)\n\n            isValid\n                && setValue(key, value)\n        },\n        onChange: (event) => {\n            const value = pathOr('', ['target', 'value'], event)\n            setInputError({\n                ...inputError,\n                [key]: false,\n            })\n\n            setValue(key, value)\n        },\n        onFocus: () => setInputError({\n            ...inputError,\n            [key]: false,\n        })\n    })\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        const getErrorValue = errorValue(formInfo)\n        const newInputError = {\n            'token': getErrorValue('token'),\n            'enterpriseAPI': getErrorValue('enterpriseAPI'),\n            'userIds': getErrorValue('userIds'),\n            'teamName': getErrorValue('teamName'),\n        }\n\n        setInputError(newInputError)\n\n        const allPass = Object.values(newInputError)\n            .every(x => !x)\n\n        console.log('-=-=--handleSubmitformInfo', formInfo)\n        allPass && !fetching\n            && setValues(formInfo)\n\n        allPass && !fetching\n            && getData()\n    }\n\n    return (\n        <ChartDescription\n            className={classes.formDescription}\n            title=\"\"\n            expandText=\"here\"\n            intro=\"Or get community contribution health data for any team\"\n        >\n            <form\n                onSubmit={handleSubmit}\n            >\n                <div className={classes.inputGrid}>\n                    <Select\n                        value={formInfo.startingPoint}\n                        onChange={(e) => setValue('startingPoint', e.target.value)}\n                        inputProps={{ 'aria-label': 'Starting point' }}\n                        >\n                        <MenuItem value=\"now\" >Starting from now</MenuItem>\n                        <MenuItem value=\"start\">Starting from creation of the repo</MenuItem>\n                    </Select>\n                    <Select\n                        value={formInfo.amountOfData}\n                        onChange={(e) => setValue('amountOfData', e.target.value)}\n                        inputProps={{ 'aria-label': 'Amount of data' }}\n                        >\n                        <MenuItem value={1} default>Get 100 more PRs</MenuItem>\n                        <MenuItem value={5} >Get 500 more PRs</MenuItem>\n                        <MenuItem value={100} >Get 10,000 more PRs</MenuItem>\n                        <MenuItem value=\"all\">Get it all</MenuItem>\n                    </Select>\n\n                    <TextField\n                        {...inputProps('userIds')}\n                        label=\"Comma separated list of user ids\"\n                    />\n                    <TextField\n                        {...inputProps('teamName')}\n                        label=\"Team name\"\n                    />\n                    <TextField\n                        {...inputProps('token')}\n                        label=\"Token*\"\n                    />\n                    <P className=\"tokenText\">\n                        * To create a token go to your GitHub <a className={classes.link} href=\"https://github.com/settings/tokens\">tokens</a> page, click on 'generate new token', choose the settings 'repo' (all) and 'read:org' then click 'Generate token'.\n                    </P>\n                </div>\n\n                <ChartDescription\n                    className={`${classes.formDescription} ${classes.fullRow}`}\n                    title=\"\"\n                    expandText=\"add this\"\n                    intro=\"Advanced options\"\n                >\n                    <TextField\n                        {...inputProps('enterpriseAPI')}\n                        label=\"Enterprise API full url\"\n                    />\n                </ChartDescription>\n\n                <div className={classes.inputGrid}>\n                    <Button\n                        className={`${classes.child} ${classes.fullRow}`}\n                        type={fetching ? 'disabled' : 'submit'}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        value={buttonText(fetching, '', pullRequests)}\n                    />\n                    {\n                        error\n                            && <Message\n                                error={error}\n                                className={classes.fullRow}\n                            />\n                    }\n                </div>\n            </form>\n            {\n                !fetching\n                    && pullRequests.length > 0\n                    && <P><a className={classes.link} {...getDownloadInfo()}>Download report data</a></P>\n            }\n        </ChartDescription>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    fetching: state.fetching,\n    error: state.error,\n    pullRequests: state.pullRequests,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setValues: ({ token, userIds, teamName, enterpriseAPI, amountOfData, startingPoint }) => {\n        dispatch(storeToken(token))\n        dispatch(storeUserIds(userIds))\n        dispatch(storeTeamName(teamName))\n        dispatch(storeEnterpriseAPI(enterpriseAPI))\n        dispatch(storeAmountOfData(amountOfData))\n        dispatch(storeSortDirection(startingPoint === 'now'\n            ? 'DESC'\n            : 'ASC'\n        ))\n    },\n    getData: (x) => dispatch(getAPIData(x)),\n    getDownloadInfo: () => dispatch(getDownloadProps),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RepoData))\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Paper from '../../shared/Paper'\nimport PrefetchedOptions from './PrefetchedOptions'\nimport RepoData from './RepoData'\nimport UsersData from './UsersData'\nimport styles from './styles'\n\nconst FetchForm = ({ classes }) => (\n    <Paper className={classes.dataPaper} >\n        <PrefetchedOptions />\n        <RepoData />\n        <UsersData />\n    </Paper>\n)\n\nexport default withStyles(styles)(FetchForm)\n","import React, { Fragment } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { H } from '../shared/StyledTags'\n\nconst ChartHeading = ({ className, items = [], text = '', type = '' } = {}) => {\n    const prepend = (i) => {\n        const maxIndex = items.length - 1\n\n        return [\n            i === 0\n            && (() => ''),\n            i === maxIndex\n            && (() => ' and '),\n            i > 0\n            && (() => ', '),\n        ].find(Boolean)()\n    }\n\n    const useStyles = makeStyles(theme => ({\n        root: props => ({\n            color: props.color,\n            borderBottom: `solid 2px ${props.color}`,\n            display: 'inline-block',\n            lineHeight: '2rem',\n            position: 'relative',\n            '&:before': {\n                lineHeight: '0',\n                content: '\"•\"',\n                position: 'absolute',\n                bottom: '-1px',\n                left: '-3px',\n            },\n            '&:after': {\n                lineHeight: '0',\n                content: '\"•\"',\n                position: 'absolute',\n                bottom: '-1px',\n                right: '-3px',\n            }\n        }),\n    }))\n\n    const LineItem = ({ color, label}) => {\n        const classes = useStyles({ color });\n        return (\n            <span\n                className={classes.root}\n            >\n                {label}\n            </span>\n        )\n    }\n\n    const Item = ({ color, label}) => (\n        <span\n            style={{ color }}\n        >\n            {label}\n        </span>\n    )\n\n    return (\n        <H level={3} className={className}>\n            {`${text} `}\n            {\n                items\n                    .map((item, i) => <Fragment key={i}>\n                        {prepend(i)}\n                        {\n                            type === 'line'\n                                ? <LineItem {...item} />\n                                : <Item {...item} />\n                        }\n                        </Fragment>)\n            }\n        </H>\n    )\n}\n\nexport default ChartHeading\n","import { withStyles } from '@material-ui/core/styles'\n\nconst styles = () => ({\n    centerHeading: {\n        textAlign: 'center',\n    },\n    headingWrap: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    barChartComponentWrap: {\n        width: '50%',\n        maxWidth: '1200px',\n        margin: '0 0 1rem 0',\n        '@media (max-width: 950px)': {\n            width: '100%',\n        },\n    },\n    lineChartComponentWrap: {\n        width: '100%',\n        maxWidth: '1200px',\n    },\n    chordWrap: {\n        width: '450px',\n        height: '450px',\n        '@media (max-width: 668px)': {\n            width: '370px',\n            height: '370px',\n            '& svg text': {\n                fontSize: '10px !important'\n            },\n        },\n    },\n    pieWrap: {\n        width: '100%',\n        height: '350px',\n        marginBottom: '20px',\n        '@media (max-width: 750px)': {\n            height: '300px',\n        },\n        '@media (max-width: 650px)': {\n            height: '250px',\n        },\n    },\n    chartWrap: {\n        width: '100%',\n        height: '500px',\n        '& svg g line': {\n            opacity: '0.6'\n        },\n        '@media (max-width: 768px)': {\n            height: '350px',\n            '& svg g line': {\n                opacity: '0.2'\n            },\n            '& svg g line:first-child': {\n                opacity: '1'\n            },\n        },\n        '@media (max-width: 668px)': {\n            height: '300px',\n            '& svg g circle': {\n                display: 'none'\n            },\n            '& svg path': {\n                opacity: '1'\n            },\n            '& svg text': {\n                fontSize: '10px !important'\n            },\n        },\n    },\n})\n\nconst styledCharts = (Chart) => withStyles(styles)(Chart)\n\nexport default styledCharts","const weekInMS = 60000 * 60 * 24 * 7\n\nconst getWeekNumber = date => {\n    const dateMS = date && new Date(date.split('T')[0]).getTime()\n    const weekNumber = dateMS && Math.round((dateMS) / weekInMS)\n\n    return weekNumber\n}\n\nconst isNewWeek = (prev, current) => {\n    const prevItemsWeek = getWeekNumber(prev)\n    const currentItemsWeek = getWeekNumber(current)\n\n    return (prevItemsWeek && currentItemsWeek) && prevItemsWeek !== currentItemsWeek\n}\n\nconst batchWeekly = key => data => data\n    .reduce((acc, item) => {\n        const prevWeeks = acc.length > 1\n            ? acc.slice(0, acc.length - 1)\n            : []\n\n        const currentWeek = acc[acc.length - 1] || []\n        const prevItem = currentWeek[currentWeek.length - 1] || {}\n\n        const all = isNewWeek(prevItem[key], item[key])\n            ? acc\n                .concat([[item]])\n            : prevWeeks\n                .concat([currentWeek.concat(item)])\n\n        return all\n    }, [])\n\nconst batchBy = type => key => data => ({\n    'week': batchWeekly(key)(data),\n})[type]\n\nexport default batchBy","import { apply } from 'ramda'\nimport batchBy from './batchBy'\n\nconst getAllYValues = data => data\n    .reduce((acc, { data }) => {\n        const values = data\n            .map(x => x.y)\n\n        acc.push(...values)\n\n        return acc\n    }, [])\n\nconst getMaxYValue = (data) => {\n    const allValues = getAllYValues(data)\n\n    const maxValue = apply(Math.max, allValues)\n\n    return maxValue\n}\n\nconst getMinYValue = (data) => {\n    const allValues = getAllYValues(data)\n\n    const minValue = apply(Math.min, allValues)\n\n    return minValue > 0\n        ? 0\n        : minValue\n}\n\nconst dateSort = (\n    { mergedAt: dateA = '' },\n    { mergedAt: dateB = '' },\n) => new Date(dateA).getTime() - new Date(dateB).getTime()\n\nconst formatDate = (date) => {\n    const info = new Date(date)\n    const month = info.getMonth() + 1\n    const dayM = info.getDate()\n    return `${info.getFullYear()}-${month < 10 ? `0${month}` : month}-${dayM < 10 ? `0${dayM}` : dayM}`\n}\n\nconst formatBatches = batches => dataKey => groupMath => batches\n    .map((batch) => {\n        const value = batch\n            .reduce((acc, current) => (current[dataKey] || 0) + acc, 0)\n\n        const valueByTypes = {\n            'average': Math.round(value / batch.length),\n            'sum': value,\n            'count': batch.length,\n        }\n\n        return {\n            y: valueByTypes[groupMath],\n            x: formatDate(batch[0].mergedAt),\n        }\n    })\n\nconst formatLineData = ({ data, dataKey, groupMath = 'average' }) => {\n    const filteredData = data\n        .filter(item => item.mergedAt && /\\d+/.test(item[dataKey]))\n\n    const sortedData = filteredData\n        .sort(dateSort)\n\n    const batchedData = batchBy('week')('mergedAt')(sortedData)\n    const formattedData = formatBatches(batchedData)(dataKey)(groupMath)\n\n    return formattedData\n}\n\nconst formatLinesData = (axix) => axix.lines\n    .map(({ label, color, dataKey, groupMath, data: lineData }) => {\n        const data = lineData || axix.data || []\n        const formattedData = formatLineData({ data, dataKey, groupMath })\n\n        return formattedData.length\n            && ({\n                id: label,\n                color,\n                data: formattedData,\n            })\n    })\n    .filter(Boolean)\n\nconst formatGraphMarkers = (markers, theme, lineData) => {\n    const [dateStart, dateEnd] = lineData\n        .reduce(([start, end], { data = [] } = {}) => {\n            const currentStart = data[0].x\n            const currentEnd = data[data.length - 1].x\n\n            return [\n                !start || new Date(currentStart) < start\n                    ? new Date(currentStart)\n                    : start,\n                !end || new Date(currentEnd) > end\n                    ? new Date(currentEnd)\n                    : end,\n            ]\n        }, [])\n\n    const markerType = (type) => ({\n        MAJOR: 'primary',\n        MINOR: 'secondary',\n    })[type] || 'tertiary'\n\n    const formattedMarkers = markers\n        .filter(({ date } = {}) => {\n            const currentDate = new Date(date)\n\n            return currentDate > dateStart && currentDate < dateEnd\n        })\n        .map((item) => ({\n            axis: 'x',\n            value: new Date(item.date).getTime(),\n            legend: item.releaseType === 'MAJOR'\n                ? item.description\n                : '',\n            ...(theme.charts.markers[markerType(item.releaseType)] || {}),\n        }))\n\n    return formattedMarkers\n}\n\nconst smoothNumber = (ruffledNumber) => {\n    const stringNumber = `${ruffledNumber}`\n    const roundTo = Math.ceil(stringNumber.length * 0.4)\n\n    const [backwards] = stringNumber\n        .split('')\n        .reduceRight(([acc = '', increment = false], item, index) => {\n            var number = parseInt(item)\n\n            const updatedItem = increment\n                ? number + 1\n                : number\n\n\n            const round = index !== 0 && (updatedItem > 9 || (index > roundTo && updatedItem > 4))\n\n            const newValue = round || index > roundTo\n                ? 0\n                : updatedItem\n\n            return [\n                [\n                    ...acc,\n                    newValue,\n                ],\n                round,\n            ]\n        }, [])\n\n    const smooth = backwards.reverse().join('')\n\n    return smooth\n}\n\nexport {\n    getMaxYValue,\n    getMinYValue,\n    formatLinesData,\n    formatGraphMarkers,\n    smoothNumber,\n    dateSort,\n}","import React from 'react'\nimport { pathOr, propOr } from 'ramda'\nimport { ResponsiveLine as NivoLine } from '@nivo/line'\nimport { TableTooltip } from '@nivo/tooltip'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\n\nimport {\n    getMaxYValue,\n    getMinYValue,\n    formatLinesData,\n    formatGraphMarkers,\n    smoothNumber,\n} from './lineHelpers'\n\nconst ToolTip = convertedRightLines => data => {\n    // NOTE: this is needed to use the original Y value for the tool tip\n    const getYValue = (point) => {\n        const label = point.serieId\n        const xCurrentValue = point.data.xFormatted\n        const yCurrentValue = point.data.yFormatted\n\n        const { data: rightLineMatch = [] } = convertedRightLines\n            .find(x => x.id === label) || {}\n\n        const rightItemMatch = rightLineMatch\n            .find(({ x, y }) => x === xCurrentValue && y === yCurrentValue)\n\n        const updatedY = rightItemMatch\n            ? rightItemMatch.originalY\n            : yCurrentValue\n\n        return updatedY\n    }\n\n    const Chip = ({ color }) => <span\n        style={{\n            display: 'block',\n            width: '12px',\n            height: '12px',\n            background: color,\n        }}\n    />\n\n    const points = pathOr([], ['slice', 'points'], data)\n    return (\n        <TableTooltip\n            rows={\n                points\n                    .map((point) => [\n                        <Chip color={point.serieColor} />,\n                        point.serieId,\n                        <strong>{getYValue(point)}</strong>,\n                    ])\n            }\n        />\n    )\n}\n\nconst Line = styledCharts(({\n    title,\n    data = [],\n    markers = [],\n    showLegends = false,\n    classes,\n} = {}) => {\n    const theme = useTheme();\n    // TODO: function to see time gap in data to help format date e.g. should add year\n    const leftAxis = data\n        .find(({ xAxis } = {}) => xAxis === 'left') || { data: [], lines: [] }\n    const leftLinesData = formatLinesData(leftAxis)\n    const maxLeftValue = getMaxYValue(leftLinesData)\n    const minLeftValue = getMinYValue(leftLinesData)\n\n    const rightAxis = data\n        .find(({ xAxis } = {}) => xAxis === 'right') || { data: [], lines: [] }\n    const rightLinesData = formatLinesData(rightAxis)\n    const maxRightValue = getMaxYValue(rightLinesData)\n\n    // As Nivo Line does not have right axis lines need to convert right line data to left line data\n    const convertedRightLines = rightLinesData\n        .map((item = {}) => {\n            const formattedData = item.data\n                .map((dataItem) => ({\n                    y: Math.round(dataItem.y * (maxLeftValue / maxRightValue)),\n                    x: dataItem.x,\n                    originalY: dataItem.y,\n                }))\n\n            return formattedData.length && ({\n                ...item,\n                data: formattedData,\n            })\n        })\n        .filter(Boolean)\n\n    const leftHeadingItems = title\n        ? []\n        : leftAxis.lines\n\n    const rightHeadingItems = rightAxis.lines\n\n    const legends = showLegends\n        ? [\n            {\n                anchor: 'top-right',\n                direction: 'column',\n                justify: false,\n                translateX: -10,\n                translateY: 10,\n                itemsSpacing: 0,\n                itemDirection: 'right-to-left',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 1,\n                symbolSize: 12,\n                symbolShape: 'square',\n                symbolBorderColor: 'rgba(0, 0, 0, .9)',\n                toggleSerie: true,\n                itemTextColor: theme.palette.text.primary,\n            }\n        ]\n        : []\n\n    const lineData = leftLinesData.concat(convertedRightLines)\n\n    const formattedMarkers = formatGraphMarkers(markers, theme, lineData)\n\n    const hasData = (items) => items.some(x => propOr([], 'data', x).length)\n\n    return hasData(lineData) && (\n        <div className={classes.lineChartComponentWrap}>\n            <div className={classes.headingWrap}>\n                <ChartHeading type='line' text={title} items={leftHeadingItems} />\n                {\n                    rightHeadingItems\n                        && <ChartHeading type='line' items={rightHeadingItems} />\n                }\n            </div>\n\n            <div className={classes.chartWrap}>\n                <NivoLine\n                    margin={{ top: 14, right: 50, bottom: 50, left: 50 }}\n                    data={lineData}\n                    colors={[\n                        ...leftAxis.lines.map(x => x.color),\n                        ...rightAxis.lines.map(x => x.color),\n                    ]}\n                    lineWidth={2}\n                    curve='monotoneX'\n                    animate={false}\n                    toggleSerie={showLegends && true}\n                    xScale={{\n                        type: 'time',\n                        format: '%Y-%m-%d',\n                    }}\n                    xFormat=\"time:%Y-%m-%d\"\n                    yScale={{\n                        type: 'linear',\n                        min: minLeftValue,\n                        max: maxLeftValue,\n                    }}\n                    axisBottom={{\n                        format: '%y/%m',\n                        tickSize: 0,\n                        tickPadding: 10,\n                        tickRotation: -45,\n                    }}\n                    legends={legends}\n                    axisLeft={{\n                        tickSize: 0,\n                        tickValues: 8,\n                    }}\n                    pointLabelYOffset={0}\n                    {...(\n                        formattedMarkers.length\n                            && { markers: formattedMarkers }\n\n                    )}\n                    {...(\n                        convertedRightLines.length\n                            && {\n                                axisRight: {\n                                    tickSize: 0,\n                                    tickValues: 8,\n                                    format: (rawLeftValue) => {\n                                        const realRightValue = Math.round(rawLeftValue * (maxRightValue / maxLeftValue))\n                                        return smoothNumber(realRightValue)\n                                    },\n                                },\n                            }\n                    )}\n                    enableGridX={false}\n                    enableSlices=\"x\"\n                    sliceTooltip={ToolTip(convertedRightLines)}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Line","import React from 'react'\nimport { connect } from 'react-redux'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport { P } from '../shared/StyledTags'\n\nimport Line from '../charts/Line'\n\nconst PullRequestTrends = ({\n    pullRequests = [],\n    releases = [],\n} = {}) => {\n    const { type } = useTheme();\n    return (\n        <Paper>\n            <ChartDescription\n                title=\"Pull Request trends\"\n            >\n                {\n                    releases.length > 1 && <div>\n                        <P>Vertical lines are releases: Green is a Major release, solid purple is Minor and dotted purple is Patch or Alpha</P>\n                    </div>\n                }\n            </ChartDescription>\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Comments',\n                                color: '#1f77b4',\n                                dataKey: 'comments',\n                            },\n                            {\n                                label: 'Approvals',\n                                color: '#e82573',\n                                dataKey: 'approvals',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data: pullRequests,\n                    },\n                    {\n                        lines: [\n                            {\n                                label: 'PR Size',\n                                color: type === 'dark' ? '#e2e2e2' : '#777',\n                                dataKey: 'prSize',\n                            },\n                        ],\n                        xAxis: 'right',\n                        data: pullRequests,\n                    },\n                ]}\n            />\n\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Age (days)',\n                                color: '#e82573',\n                                dataKey: 'age',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data: pullRequests,\n                    },\n                    {\n                        lines: [\n                            {\n                                label: 'PR Size',\n                                color: type === 'dark' ? '#e2e2e2' : '#777',\n                                dataKey: 'prSize',\n                            },\n                        ],\n                        xAxis: 'right',\n                        data: pullRequests,\n                    },\n                ]}\n            />\n        </Paper>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    releases: state.releases,\n})\n\nexport default connect(mapStateToProps)(PullRequestTrends)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { P, UL, LI } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport Line from '../charts/Line'\n\nconst formatIssueData = (data = []) => data\n    .map((item) => ({\n        mergedAt: item.mergedAt,\n        ...(\n            item.isBug\n                ? { bug: 1 }\n                : { issue: 1 }\n        ),\n    }))\n\nconst IssuesTrends = ({\n    issues = [],\n    releases = [],\n} = {}) => {\n    const data = formatIssueData(issues)\n\n    return data && data.length > 0 && (\n        <Paper>\n            <ChartDescription\n                title=\"Feature and bug trends\"\n            >\n                <div>\n                    <P>Bugs in this graph are issues that have a title or a label that contains the word 'bug'</P>\n                </div>\n            </ChartDescription>\n            <Line\n                markers={releases}\n                data={[\n                    {\n                        lines: [\n                            {\n                                label: 'Issues',\n                                color: '#1f77b4',\n                                dataKey: 'issue',\n                                groupMath: 'count',\n                            },\n                            {\n                                label: 'Bugs',\n                                color: '#e82573',\n                                dataKey: 'bug',\n                                groupMath: 'count',\n                            },\n                        ],\n                        xAxis: 'left',\n                        data,\n                    },\n                ]}\n            />\n        </Paper>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    issues: state.issues,\n    releases: state.releases,\n})\n\nexport default connect(mapStateToProps)(IssuesTrends)\n","const hasChartData = dataArray => keys => keys\n    .some(key => dataArray\n        .some(dataItem => dataItem[key])\n    )\n\nexport default hasChartData\n","import React from 'react'\nimport { filter } from 'ramda'\nimport { ResponsiveBar as NivoBar } from '@nivo/bar'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\nimport hasChartData from './hasChartData'\n\nconst Bar = styledCharts(({\n    data = [],\n    bars = [],\n    sortBy = 'comments',\n    indexBy = 'user',\n    max = 20,\n    classes,\n    layout = \"vertical\",\n    titlePrefix = ''\n} = {}) => {\n    const theme = useTheme();\n    const trimmedData = filter(item => bars.some(x => item[x.dataKey]), data)\n\n    const byPropDesc = prop => (a, b) =>\n        +((a[prop] || 0) < (b[prop] || 0)) || +((a[prop] || 0) === (b[prop] || 0)) - 1\n\n    const sortedData = sortBy\n        ? trimmedData.sort(byPropDesc(sortBy))\n        : trimmedData\n\n    const finalData = max\n        ? sortedData.slice(0, max - 1)\n        : sortedData\n\n    const keys = bars.map(x => x.dataKey)\n\n    return hasChartData(data)(keys) && (\n        <div className={classes.barChartComponentWrap}>\n            <ChartHeading text={titlePrefix} items={bars} />\n            <div className={classes.chartWrap}>\n                <NivoBar\n                    data={finalData}\n                    keys={keys}\n                    indexBy={indexBy}\n                    margin={{ top: 5, right: 50, bottom: 60, left: 50 }}\n                    padding={0.3}\n                    groupMode=\"grouped\"\n                    layout={layout}\n                    valueFormat={(value) => layout === 'horizontal'\n                        ? `${Math.abs(value)}`\n                        : value}\n                    colors={bars.map(x => x.color)}\n                    axisBottom={{\n                        tickSize: 0,\n                        tickRotation: -45,\n                    }}\n                    axisLeft={{\n                        tickSize: 0,\n                    }}\n                    enableLabel={false}\n                    animate={false}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Bar","const { path, prop } = require('ramda');\n\nconst getNameList = (data, key) => {\n    const scoredData = data\n        .reduce((acc, userData) => {\n            const author = userData.author\n            const keyData = userData[key] || {}\n            const given = Object.values(keyData).reduce((acc, current) => acc + current, 0)\n\n            return Object.assign(acc, { [author]: given })\n        }, {})\n\n    const sortedValues = Object.entries(scoredData)\n        .sort(([, a], [, b]) => b - a)\n\n    const total = sortedValues\n        .reduce((acc, [, value]) => value + acc, 0)\n\n\n    const percentageOfTotal = (value) => {\n        const percentPerUnit = 100 / total\n        const percentOf = value * percentPerUnit\n\n        return percentOf\n    }\n\n    const { showNames } = sortedValues\n        .reduce((\n            { accPercent = 0, showNames = [] },\n            [author, value],\n        ) => {\n            const itemPercent = percentageOfTotal(value, author, accPercent)\n            const newAccPercent = accPercent + itemPercent\n\n            return {\n                accPercent: newAccPercent,\n                showNames: value > 0 && itemPercent > 5\n                    ? [\n                        ...showNames,\n                        author,\n                    ]\n                    : showNames,\n            }\n        }, {})\n\n    // We do not want only one user going into the \"Other\" group\n    return showNames.length === data.length - 1\n        ? sortedValues.map(([x]) => x)\n        : showNames\n}\n\nconst getMatrix = (data, key, showNames, otherAppened) => {\n    const otherTotal = (ignoreNames, data = {}) => Object.entries(data)\n        .reduce((acc, [name, value]) => ignoreNames.some(x => x === name)\n            ? acc\n            : acc + value, 0)\n\n    const martixRow = (item) => [\n        ...showNames.map(x => path([key, x], item) || 0),\n        ...(\n            otherAppened\n                ? [otherTotal(showNames, prop(key, item))]\n                : []\n        ),\n    ]\n\n    const matrixRowsForNamed = showNames\n        .map((name) => {\n            const nameData = data.find(x => x.author === name)\n            return martixRow(nameData)\n        })\n\n    const matrixRowForOther = data\n        .filter(({ author }) => !showNames.some(x => x === author))\n        .reduce((acc, item) => {\n            const currentMatrix = martixRow(item)\n\n            const mergedMatrix = currentMatrix\n                .map((value, i) => value + (acc[i] || 0))\n\n            // Matrix other row can not have data to self logged, must be 0\n            return [\n                ...mergedMatrix.slice(0, mergedMatrix.length - 1),\n                0,\n            ]\n        }, [])\n\n    return [\n        ...matrixRowsForNamed,\n        ...(\n            matrixRowForOther.length\n                ? [matrixRowForOther]\n                : []\n        ),\n    ]\n}\n\nconst formatChordData = (data, key) => {\n    const showNames = getNameList(data, key)\n    const otherAppened = showNames.length < data.length\n\n    const matrix = getMatrix(data, key, showNames, otherAppened)\n\n    const names = [\n        ...showNames,\n        ...(\n            otherAppened\n                ? ['Others']\n                : []\n        ),\n    ]\n\n    return {\n        names,\n        matrix,\n    }\n}\n\nexport default formatChordData\n","const colors = ['#E82573', '#8b4ff0', '#1F77B4', '#4ECC7A', '#DBD523', '#EB9830', '#D14B41']\n\nexport default colors\n","import React from 'react'\nimport { ResponsiveChord as NivoChord } from '@nivo/chord'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport formatChordData from '../../format/chordData'\nimport styledCharts from './styledCharts'\nimport colors from '../colors'\n\nconst Chord = styledCharts(({\n    title,\n    data = [],\n    dataKey = '',\n    classes,\n} = {}) => {\n    const theme = useTheme();\n    const {\n        names,\n        matrix,\n    } = formatChordData(data, dataKey)\n\n    const hasMatrixData = (matrix) => matrix\n        .some(row => row\n            .some(Boolean)\n        )\n\n    return hasMatrixData(matrix) && (\n        <div>\n            <ChartHeading text={title} className={classes.centerHeading} />\n            <div className={classes.chordWrap}>\n                <NivoChord\n                    label=\"id\"\n                    data={matrix}\n                    keys={names}\n                    margin={{ top: 0, right: 10, bottom: 10, left: 10 }}\n                    arcBorderColor={{ from: 'color', modifiers: [['darker', 0.4]] }}\n                    ribbonOpacity={0.5}\n                    ribbonBorderWidth={0.5}\n                    ribbonBorderColor={{ from: 'color', modifiers: [['darker', 0.4]] }}\n                    innerRadiusRatio={0.85}\n                    labelRotation={0}\n                    padAngle={0.06}\n                    innerRadiusOffset={0.03}\n                    labelOffset={-23}\n                    labelTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\n                    colors={colors}\n                    isInteractive={true}\n                    arcHoverOpacity={1}\n                    arcHoverOthersOpacity={0.25}\n                    ribbonHoverOpacity={0.75}\n                    ribbonHoverOthersOpacity={0.25}\n                    animate={false}\n                    motionStiffness={90}\n                    motionDamping={7}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Chord","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { P, UL, LI } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport Bar from '../charts/Bar'\nimport Chord from '../charts/Chord'\n\nconst TeamTrends = ({\n    usersData = [],\n    classes,\n} = {}) => {\n    return (\n        <Paper>\n            <ChartDescription\n                title=\"Contribution distribution\"\n            >\n                <div>\n                    <P>Note: The Users in the graphs are people who have opened PRs to the repo. This can mean that the received metrics can be higher than given as people who have not opened PRs could have contributed.</P>\n                </div>\n            </ChartDescription>\n\n            {\n                usersData.length > 0\n                    && (\n                        <>\n                            <div className={classes.groupedCharts}>\n                                <Chord data={usersData} dataKey=\"commentsByUser\" title=\"Comment contributions\" />\n                                <Chord data={usersData} dataKey=\"approvalsByUser\" title=\"Approval contributions\" />\n                            </div>\n                            <Bar\n                                data={usersData}\n                                indexBy=\"author\"\n                                titlePrefix=\"Comments\"\n                                sortBy=\"commentsGiven\"\n                                max={7}\n                                bars={[\n                                    {\n                                        dataKey: 'commentsGiven',\n                                        color: '#1f77b4',\n                                        label: 'given',\n                                    },\n                                    {\n                                        dataKey: 'commentsReceived',\n                                        color: '#e82573',\n                                        label: 'received',\n                                    },\n                                ]}\n                            />\n                            <Bar\n                                data={usersData}\n                                indexBy=\"author\"\n                                titlePrefix=\"PRs,\"\n                                sortBy=\"uniquePRsApproved\"\n                                max={7}\n                                bars={[\n                                    {\n                                        dataKey: 'uniquePRsApproved',\n                                        color: '#1f77b4',\n                                        label: 'approved',\n                                    },\n                                    {\n                                        dataKey: 'totalPRs',\n                                        color: '#e82573',\n                                        label: 'opened',\n                                    },\n                                ]}\n                            />\n                        </>\n                    )\n            }\n        </Paper>\n    )\n}\n\nconst styles = theme => ({\n    groupedCharts: theme.palette.groupedCharts,\n})\n\nconst mapStateToProps = (state) => ({\n    usersData: state.usersData,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(TeamTrends))\n","import React from 'react'\nimport { Radar as NivoRadar } from '@nivo/radar'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\nimport hasChartData from './hasChartData'\n\n\nconst Radar = styledCharts(({\n    title = '',\n    titleItems = [],\n    data = [],\n    keys = [],\n    width = 410,\n    height = 300,\n    classes,\n} = {}) => {\n    const theme = useTheme();\n    const toolTipValues = data\n        .reduce((acc, item) => acc.concat(\n            keys\n                .map(key => item[`${key}Original`])\n        ), [])\n\n    return hasChartData(data)(keys) && (\n        <div>\n            <ChartHeading className={classes.centerHeading} items={\n                titleItems.length\n                    ? titleItems\n                    : [{ label: title }]\n            } />\n            <NivoRadar\n                width={width}\n                height={height}\n                margin={{ top: 0, bottom: 0, right: 100, left: 100 }}\n                dotSize={8}\n                dotBorderColor={theme.charts.dotColor}\n                dotBorderWidth={2}\n                colors={['#1f77b4', '#e82573']}\n                gridShape=\"linear\"\n                enableDotLabel={false}\n                gridLabelOffset={10}\n                gridLevels={3}\n                animate={false}\n                indexBy='area'\n                keys={keys}\n                data={data}\n                maxValue={100}\n                theme={theme.charts}\n                gridAngleStep={200}\n                angleStep={200}\n                tooltipFormat={() => toolTipValues.shift()}\n            />\n        </div>\n    )\n})\n\nexport default Radar","const formatRadarData = (userData, filterAuthor) => {\n\n    const defaultValues = {\n        age: 0,\n        approvalsGiven: 0,\n        approvalsReceived: 0,\n        codeCommentsGiven: 0,\n        codeCommentsReceived: 0,\n        commentsGiven: 0,\n        commentsReceived: 0,\n        generalCommentsGiven: 0,\n        generalCommentsReceived: 0,\n        prSize: 0,\n        totalPRs: 0,\n        uniquePRsApproved: 0,\n        uniquePRsContributedTo: 0,\n    }\n\n    const filteredContributors = userData\n        .filter(x => filterAuthor\n            ? x.author !== filterAuthor\n            : true)\n        .filter(({\n            commentsGiven,\n            commentsReceived,\n            approvalsGiven,\n            approvalsReceived,\n        }) => [\n            commentsGiven,\n            commentsReceived,\n            approvalsGiven,\n            approvalsReceived,\n        ].some(x => x > 1))\n\n    const keys = [\n        'commentsGiven',\n        'commentsReceived',\n        'approvalsGiven',\n        'approvalsReceived',\n    ]\n\n    const sortedUsers = filteredContributors\n        .sort((a, b) => {\n            const aTotal = keys\n                .reduce((acc, key) => acc + (a[key] || 0), 0)\n\n            const bTotal = keys\n                .reduce((acc, key) => acc + (b[key] || 0), 0)\n            return bTotal - aTotal\n        })\n\n    const p10 = Math.ceil(sortedUsers.length / 100 * 10)\n    const topUsers = p10 > 10\n        ? sortedUsers.slice(0, p10)\n        : sortedUsers\n\n    const totalled = topUsers\n        .filter(x => !filterAuthor || x.author !== filterAuthor)\n        .reduce((total, user) => {\n            const addedUser = Object.entries(user)\n                .filter(([, value]) => !Array.isArray(value) && /^\\d+$/.test(value) && value > 0)\n                .reduce((combinedData, [key, value]) => Object.assign(combinedData, { [key]: value + (total[key] || 0) }), {})\n\n            return Object.assign(total, addedUser)\n        }, {})\n\n    const userCount = topUsers.length\n    const averagedData = Object.entries(totalled)\n        .reduce((acc, [key, value], i) =>\n            Object.assign(\n                acc, { [key]: Math.round(value / userCount) }\n            ), { ...defaultValues, user: 'Peers', userCount }\n        )\n\n    const usersData = userData\n        .find(x => x.author === filterAuthor) || { approvalsGivenByTeam: {} }\n\n    const maxValues = userData\n        .reduce((parentAcc, user) => {\n            const withNumberValue = Object.entries(user)\n                .filter(([, value]) => !Array.isArray(value) && /^\\d+$/.test(value))\n\n            const upDateMaxValues = withNumberValue\n                .reduce((acc, [key, value]) => {\n                    const accVaue = parentAcc[key] || 0\n\n                    return Object.assign(acc, { [key]: accVaue > value ? accVaue : value })\n                }, {})\n\n            return Object.assign(parentAcc, upDateMaxValues)\n        }, defaultValues)\n\n    return {\n        averagedData,\n        maxValues,\n        users: userData,\n        user: filterAuthor\n            ? usersData\n            : {},\n    }\n}\n\nexport default formatRadarData","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { H, P, UL, LI } from '../shared/StyledTags'\nimport Paper from '../shared/Paper'\nimport ChartDescription from '../shared/ChartDescription'\nimport Radar from '../charts/Radar'\nimport formatRadarData from '../../format/radarData'\n\nconst radialChartsContributions = ({ maxValues = {}, users = [] }) => {\n    const keys = [\n        'commentsGiven',\n        'commentsReceived',\n        'approvalsGiven',\n        'approvalsReceived',\n    ]\n\n    const topXUsers = users\n        .sort((a, b) => {\n            const aTotal = keys\n                .reduce((acc, key) => acc + (a[key] || 0), 0)\n\n            const bTotal = keys\n                .reduce((acc, key) => acc + (b[key] || 0), 0)\n            return bTotal - aTotal\n        })\n        .slice(0, 6)\n\n    const items = [\n        {\n            area: 'Code comments',\n            given: 'codeCommentsGiven',\n            received: 'codeCommentsReceived',\n        },\n        {\n            area: 'PR comments',\n            given: 'generalCommentsGiven',\n            received: 'generalCommentsReceived',\n        },\n        {\n            area: 'Approvals',\n            given: 'approvalsGiven',\n            received: 'approvalsReceived',\n        },\n    ]\n\n    const radarData = topXUsers\n        .map(user => {\n            const data = items\n                .map(({ area, given, received}) => {\n                    const givenOriginal = user[given] || 0\n                    const receivedOriginal = user[received] || 0\n\n                    return {\n                        area,\n                        given: givenOriginal\n                            ? (givenOriginal / (maxValues[given] || 0)) * 100\n                            : 0,\n                        received: receivedOriginal\n                            ? (receivedOriginal / (maxValues[received] || 0)) * 100\n                            : 0,\n                        givenOriginal,\n                        receivedOriginal,\n                    }\n                })\n\n            return {\n                title: user.author,\n                data,\n                keys: ['given', 'received'],\n            }\n        })\n\n    return radarData\n}\n\nconst UserTrends = ({\n    usersData = [],\n} = {}) => {\n    const radarData = formatRadarData(usersData)\n    // const prRadars = radialChartsPRs(radarData)\n    const contributionsRadar = radialChartsContributions(radarData)\n\n    return (\n        <Paper>\n            <ChartDescription\n                title={(\n                    <>\n                        <H level={2}>User's contributions</H>\n                        <H level={3}>Comments and approvals, <span style={{ color: '#1f77b4' }}>given</span> and <span style={{ color:'#e82573'}}>received</span></H>\n                    </>\n                )}\n                intro=\"This section shows how given and received metrics compare for the top contributors.\"\n            >\n            </ChartDescription>\n            {\n                contributionsRadar.length > 0\n                    && contributionsRadar\n                        .map((info, i) => <Radar key={i} {...info} />)\n            }\n        </Paper>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    usersData: state.usersData,\n})\n\nexport default connect(mapStateToProps)(UserTrends)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Paper from '../shared/Paper'\nimport Button from '../shared/Button'\nimport { H } from '../shared/StyledTags'\n\n\nimport { setUser as setUserAction } from '../../state/actions'\n\nconst UserList = ({\n    usersData = [],\n    setUser,\n    classes,\n} = {}) => <>\n    <Paper className=\"justify\">\n        <H level={2} >\n            User pages\n        </H>\n        <div className={classes.allButons}>\n            {\n                usersData\n                    .map(({ author }, i) => (\n                        <Button\n                            value={author}\n                            key={i}\n                            color=\"secondary\"\n                            onClick={(e) => {\n                                e.preventDefault()\n                                setUser(e.currentTarget.value)\n                                window && window.scrollTo(0, 0)\n                            }}\n                        />\n                    ))\n            }\n        </div>\n    </Paper>\n</>\n\nconst mapDispatchToProps = dispatch => ({\n    setUser: (x) => dispatch(setUserAction(x)),\n})\n\nconst styles = theme => ({\n    'allButons': {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n        '& button': {\n            flexGrow: 1\n        }\n    },\n})\n\nconst mapStateToProps = (state) => ({\n    usersData: state.usersData,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UserList))","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { H } from '../shared/StyledTags'\nimport ChartDescription from '../shared/ChartDescription'\nimport Paper from '../shared/Paper'\n\nconst RepoDescription = ({ repoInfo, preFetchedRepo } = {}) => {\n    const {\n        org,\n        repo,\n        description,\n    } = repoInfo\n\n    return !preFetchedRepo && repo && org\n        ? (\n            <Paper>\n                <ChartDescription\n                    title={(\n                        <H level={2}>\n                            {\n                                org === repo\n                                    ? (\n                                        <span style={{ color: '#e82573' }}>{repo}</span>\n                                    )\n                                    : (\n                                        <>\n                                            <span style={{ color: '#1f77b4' }}>{org}</span>/<span style={{ color: '#e82573' }}>{repo}</span>\n                                        </>\n                                    )\n                            }\n                        </H>\n                    )}\n                    intro={description}\n                >\n                </ChartDescription>\n            </Paper>\n        )\n        : null\n}\n\nconst mapStateToProps = (state) => ({\n    repoInfo: state.repoInfo,\n    preFetchedRepo: state.preFetchedRepo,\n})\n\nexport default connect(mapStateToProps)(RepoDescription)\n","import React from 'react'\n\nimport PullRequestTrends from './sections/PullRequestTrends'\nimport IssuesTrends from './sections/IssuesTrends'\nimport TeamTrends from './sections/TeamTrends'\nimport UserTrends from './sections/UserTrends'\nimport UserList from './sections/UserList'\nimport RepoDescription from './sections/RepoDescription'\n\nconst RepoView = () => <>\n    <RepoDescription />\n    <TeamTrends />\n    <PullRequestTrends />\n    <IssuesTrends />\n    <UserTrends />\n    <UserList />\n</>\n\nexport default RepoView\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { H, P, UL, LI } from './shared/StyledTags'\nimport ChartDescription from './shared/ChartDescription'\nimport Button from './shared/Button'\nimport Paper from './shared/Paper'\nimport { clearUser } from '../state/actions'\nimport formatRadarData from '../format/radarData'\nimport Radar from './charts/Radar'\nimport Bar from './charts/Bar'\nimport Line from './charts/Line'\n\nconst colourA = '#1f77b4'\nconst colourB = '#e82573'\n\nconst userRadars = (\n    {\n        averagedData,\n        maxValues,\n        user,\n    },\n    userName\n) => {\n    const items = [\n        {\n            area: 'Code comments',\n            dataKey: 'codeCommentsGiven',\n        },\n        {\n            area: 'PR comments',\n            dataKey: 'generalCommentsGiven',\n        },\n        {\n            area: 'Approvals',\n            dataKey: 'approvalsGiven',\n        },\n        {\n            area: 'Merged PRs',\n            dataKey: 'totalPRs',\n        },\n        {\n            area: 'PR size',\n            dataKey: 'prSize',\n        },\n    ]\n\n    const getRadarData = items => items\n        .map(({ area, dataKey }) => {\n            const originalUser = user[dataKey] || 0\n            const peersOriginal = averagedData[dataKey] || 0\n            const maxValue = maxValues[dataKey] || 0\n\n            return {\n                area,\n                [userName]: (originalUser / maxValue) * 100,\n                peers: (peersOriginal / maxValue) * 100,\n                [`${userName}Original`]: originalUser,\n                peersOriginal,\n            }\n        })\n\n    const radars = [\n        {\n            data: getRadarData(items),\n            titleItems: [\n                { label: userName, color: colourA },\n                { label: 'Peers', color: colourB },\n            ],\n            keys: [userName, 'peers'],\n            width: 400,\n            height: 235,\n        },\n    ]\n\n    return radars\n}\n\nconst userBars = ({\n    averagedData,\n    user,\n}) => {\n    const averageAndUserData = [user, averagedData]\n\n    return [\n        {\n            bars:[\n                {\n                    dataKey: 'commentsGiven',\n                    color: colourA,\n                    label: 'Comments given',\n                },\n                {\n                    dataKey: 'commentsReceived',\n                    color: colourB,\n                    label: 'Comments received',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'approvalsGiven',\n                    color: colourA,\n                    label: 'Approvals given',\n                },\n                {\n                    dataKey: 'approvalsReceived',\n                    color: colourB,\n                    label: 'Approvals received',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'totalPRs',\n                    color: colourA,\n                    label: 'Opened PRs',\n                },\n                {\n                    dataKey: 'uniquePRsApproved',\n                    color: colourB,\n                    label: 'PRs approved',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'prSize',\n                    color: colourA,\n                    label: 'PR size',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n        {\n            bars: [\n                {\n                    dataKey: 'age',\n                    color: colourB,\n                    label: 'PR age',\n                },\n            ],\n            sortBy: '',\n            data: averageAndUserData,\n        },\n    ]\n}\n\nconst userGraphs = (data = [], releases = [], userName) => {\n    const mergedPrData = data\n        .filter(({ mergedAt } = {}) => mergedAt)\n\n    const peerPrData = mergedPrData\n        .filter(({ author }) => author !== userName)\n\n    const userPrData = mergedPrData\n        .filter(({ author }) => author === userName)\n\n    return [\n        {\n            markers: releases,\n            data: [{\n                lines: [\n                    {\n                        label: 'User comments',\n                        color: colourA,\n                        dataKey: 'commentsGiven',\n                        data: userPrData,\n                    },\n                    {\n                        label: 'Peer Comments',\n                        color: colourB,\n                        dataKey: 'commentsGiven',\n                        data: peerPrData,\n                    },\n                ],\n                xAxis: 'left',\n            }],\n        },\n        {\n            markers: releases,\n            data: [{\n                lines: [\n                    {\n                        label: 'User PR size',\n                        color: colourA,\n                        dataKey: 'prSize',\n                        data: userPrData,\n                    },\n                    {\n                        label: 'Peer PR size',\n                        color: colourB,\n                        dataKey: 'prSize',\n                        data: peerPrData,\n                    },\n                ],\n                xAxis: 'left',\n            }],\n        },\n        {\n            markers: releases,\n            data: [{\n                lines: [\n                    {\n                        label: 'User PR age',\n                        color: colourA,\n                        dataKey: 'age',\n                        data: userPrData,\n                    },\n                    {\n                        label: 'Peer PR age',\n                        color: colourB,\n                        dataKey: 'age',\n                        data: peerPrData,\n                    },\n                ],\n                xAxis: 'left',\n            }],\n        },\n    ]\n}\n\nconst UserView = ({\n    pullRequests = [],\n    releases = [],\n    usersData = [],\n    user,\n    removeUser,\n    classes,\n} = {}) => {\n    const radarData = formatRadarData(usersData, user)\n    const radars = userRadars(radarData, user)\n    const bars = userBars(radarData)\n    const graphs = userGraphs(pullRequests, releases, user)\n\n    return (\n        <>\n            <Paper>\n                <ChartDescription\n                    title={\n                        <H level={2}>\n                            <span style={{ color: colourA }}>{user}</span>\n                            <Button\n                                className={classes.topButton}\n                                variant=\"outlined\"\n                                size=\"small\"\n                                value=\"Back to main view\"\n                                color=\"secondary\"\n                                onClick={(e) => {\n                                    e.preventDefault()\n                                    removeUser()\n                                }} />\n                        </H>\n                    }\n                    intro={`A collection of charts showing ${user} and average data from the top ${radarData.averagedData.userCount} peers`}\n                >\n                    <div>\n                        <P>Reminder that context is needed, without it what looks good can be bad and what looks good can be bad</P>\n                        <UL>\n                            <LI>How do the given and received metrics compare?</LI>\n                            <LI>How do Code comments(the how) and PR comments(the what) comaire?</LI>\n                            <LI>How do PR approvals comaire?</LI>\n                            <LI>How do size of PRs comaire?</LI>\n                        </UL>\n                    </div>\n                </ChartDescription>\n\n                {\n                    radars.length\n                        && (\n                            <div className={classes.groupedCharts}>\n                                {\n                                    radars\n                                        .map((info, i) => <Radar key={i} {...info} />)\n                                }\n                            </div>\n                        )\n                }\n                {\n                    bars.length\n                        && bars\n                            .map((info, i) => <Bar key={i} {...info} />)\n                }\n                {\n                    graphs.length\n                        && graphs\n                            .map((info, i) => <Line key={i} {...info} />)\n                }\n\n                <Button\n                    className={classes.fill}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value=\"Back to main view\"\n                    color=\"secondary\"\n                    onClick={(e) => {\n                        e.preventDefault()\n                        removeUser()\n                        window && window.scrollTo(0, 0)\n                    }} />\n            </Paper>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    releases: state.releases,\n    usersData: state.usersData,\n    user: state.user,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    removeUser: (x) => dispatch(clearUser(x)),\n})\n\nconst styles = theme => ({\n    'groupedCharts': {\n        width: '100%',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n    },\n    fill: {\n        flexBasis: '100%',\n    },\n    topButton: {\n        marginLeft: theme.mySpacing.y.large,\n    },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UserView))","import React from 'react'\nimport { ResponsivePie } from '@nivo/pie'\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChartHeading from './ChartHeading'\nimport styledCharts from './styledCharts'\n\nconst Pie = styledCharts(({\n    title,\n    data = [],\n    classes,\n} = {}) => {\n    const theme = useTheme();\n\n    return data.length && (\n        <div className={classes.lineChartComponentWrap}>\n            <div className={classes.headingWrap}>\n                <ChartHeading type='line' text={title} />\n            </div>\n\n            <div className={classes.pieWrap}>\n                <ResponsivePie\n                    data={data}\n                    colors={{ datum: 'data.color' }}\n                    margin={{ top: 5, right: 80, bottom: 5, left: 80 }}\n                    animate={false}\n                    innerRadius={0.65}\n                    padAngle={1}\n                    cornerRadius={4}\n                    activeOuterRadiusOffset={5}\n                    borderWidth={1}\n                    startAngle={-90}\n                    endAngle={90}\n                    enableArcLabels={false}\n                    arcLinkLabelsSkipAngle={4}\n                    arcLinkLabelsThickness={2}\n                    arcLinkLabelsColor={{ from: 'color' }}\n                    arcLabelsSkipAngle={10}\n                    arcLinkLabelsDiagonalLength={10}\n                    arcLinkLabelsStraightLength={15}\n                    arcLinkLabelsTextColor={theme.palette.text.primary}\n                    // legends={legends}\n                    theme={theme.charts}\n                />\n            </div>\n        </div>\n    )\n})\n\nexport default Pie","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport ChartDescription from '../shared/ChartDescription'\nimport Line from '../charts/Line'\nimport Pie from '../charts/Pie'\nimport Paper from '../shared/Paper'\nimport colors from '../colors'\n\nconst RepoSplit = ({\n    pullRequests = [],\n} = {}) => {\n    const allRepos = {}\n    const sentPRData = pullRequests.map(prData => {\n        allRepos[prData.repo] =  (allRepos[prData.repo] || 0) + 1\n        return ({\n            ...prData,\n            [`repo-${prData.repo}`]: 1,\n        })\n    })\n    const uniqueRepos = Object.keys(allRepos)\n\n    const pieData = Object.entries(allRepos)\n        .sort(([,a],[,b]) => a - b)\n        .map(([repo, value], i) => ({\n            id: repo,\n            label: repo,\n            color: colors[i % colors.length],\n            value: value,\n        }))\n\n    return (<>\n        <Paper>\n            <ChartDescription title=\"PRs split by repository\" />\n            <Pie\n                data={pieData}\n                title=\"PR repository pie\"\n            />\n            <Line\n                showLegends={true}\n                title=\"Repository PRs over time\"\n                data={[\n                    {\n                        lines: uniqueRepos\n                            .map((repo, i) => ({\n                                label: repo,\n                                color: colors[i % colors.length],\n                                dataKey: `repo-${repo}`,\n                                groupMath: 'count',\n                            })),\n                        xAxis: 'left',\n                        data: sentPRData,\n                    },\n                ]}\n            />\n        </Paper>\n    </>)\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n})\n\nexport default connect(mapStateToProps)(RepoSplit)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Line from '../charts/Line'\nimport Paper from '../shared/Paper'\nimport colors from '../colors'\nimport ChartDescription from '../shared/ChartDescription'\nimport { P } from '../shared/StyledTags'\n\n\nconst Sentiment = ({\n    pullRequests = [],\n    userIds = [],\n    classes = {}\n} = {}) => {\n    const sentPRData = pullRequests.map(prData => ({\n        ...prData,\n        [`${prData.author}-commentsSentimentScore`]: prData.commentsSentimentScore,\n    }))\n\n    return (<>\n        <Paper>\n            <ChartDescription\n                title=\"Sentiment analysis*\"\n            >\n                <div>\n                    <P>*Adding this is an experiment to see if it can provide useful insights.</P>\n                    <P>Uses npm package <a className={classes.link} href=\"https://github.com/thisandagain/sentiment\" alt=\"sentiment github package\">sentiment</a> which uses AFINN-165 word list and Emoji ranking to perform sentiment analysis.</P>\n                    <P>Would like to look into AI sentiment analysis later down the line.</P>\n                </div>\n            </ChartDescription>\n            <Line\n                showLegends={true}\n                title=\"Sentiment received in PR comments\"\n                data={[\n                    {\n                        lines: userIds\n                            .map((userId, i) => ({\n                                label: `${userId}`,\n                                color: colors[i % colors.length],\n                                dataKey: `${userId}-commentsSentimentScore`,\n                            })),\n                        xAxis: 'left',\n                        data: sentPRData,\n                    },\n                ]}\n            />\n        </Paper>\n    </>)\n}\n\nconst mapStateToProps = (state) => ({\n    pullRequests: state.pullRequests,\n    userIds: state.userIds || ['bvaughn','gaearon','acdlite','sebmarkbage'],\n})\n\nconst styles = theme => ({\n    link: {\n        color: theme.palette.link,\n    },\n})\nexport default connect(mapStateToProps)(withStyles(styles)(Sentiment))\n","import React from 'react'\n\nimport PullRequestTrends from './sections/PullRequestTrends'\nimport IssuesTrends from './sections/IssuesTrends'\nimport TeamTrends from './sections/TeamTrends'\nimport UserTrends from './sections/UserTrends'\nimport UserList from './sections/UserList'\nimport RepoSplit from './sections/RepoSplit'\nimport Sentiment from './sections/Sentiment'\nimport RepoDescription from './sections/RepoDescription'\n\nconst Team = () => <>\n    <RepoDescription />\n    <TeamTrends />\n    <RepoSplit />\n    <Sentiment />\n    <PullRequestTrends />\n    <IssuesTrends />\n    <UserTrends />\n    <UserList />\n</>\n\nexport default Team\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n    cond,\n    always,\n    propSatisfies,\n    T as alwaysTrue,\n} from 'ramda'\nimport RepoView from '../Repo'\nimport UserView from '../User'\nimport TeamView from '../Team'\n\nconst Visualisation = (props) => (\n    <div>\n        {\n            cond([\n                [propSatisfies(Boolean, 'user'), always(<UserView />)],\n                [propSatisfies(Boolean, 'teamName'), always(<TeamView />)],\n                [alwaysTrue, always(<RepoView />)],\n            ])(props)\n        }\n    </div>\n)\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    teamName: state.teamName,\n})\n\nexport default connect(mapStateToProps)(Visualisation)","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst CoreWrapper = ({ classes, children }) => <div className={classes.wrapper}>{children}</div>\n\nconst styles = theme => ({\n    '@global': {\n        'body': {\n            margin: 0,\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    wrapper: {\n        padding: 0,\n        backgroundColor: theme.palette.background.default,\n        overflow: 'auto',\n    },\n})\n\nexport default withStyles(styles)(CoreWrapper)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Brightness3 from '@material-ui/icons/Brightness3';\nimport WbSunny from '@material-ui/icons/WbSunny';\n\nimport { toggleTheme } from '../../state/actions'\n\nconst Links = ({ classes, themeType, themeToggle }) => {\n    return (\n        <div className={classes.wrapper} >\n            <a alt=\"My Twitter page\" className={classes.link} href=\"https://twitter.com/chris_07734\">\n                <TwitterIcon className={classes.icon} />\n            </a>\n            <a alt=\"Github repo page\" className={classes.link} href=\"https://github.com/n07734/community-health\">\n                <GitHubIcon className={classes.icon} />\n            </a>\n            <a\n                href=\"#theme\"\n                alt=\"Change theme\"\n                onClick={(e) => {\n                    e.preventDefault()\n                    themeToggle()\n                }}\n                className={themeType}\n            >\n                <WbSunny className={`${classes.icon} sun`} />\n                <Brightness3 className={`${classes.icon} moon`} />\n            </a>\n        </div>\n    );\n};\n\nconst styles = theme => ({\n    wrapper: {\n        position: 'absolute',\n        top: theme.mySpacing.x.small,\n        right: theme.mySpacing.x.small,\n        '& > a': {\n            marginLeft: theme.mySpacing.x.small\n        },\n        '& a:hover $icon': {\n            color: theme.palette.iconHover\n        },\n        '& .dark .moon': {\n            display: 'none'\n        },\n        '& .dark:hover .moon': {\n            display: 'inline'\n        },\n        '& .dark:hover .sun': {\n            display: 'none'\n        },\n        '& .light .sun': {\n            display: 'none'\n        },\n        '& .light:hover .sun': {\n            display: 'inline'\n        },\n        '& .light:hover .moon': {\n            display: 'none'\n        },\n    },\n    icon: {\n        color: theme.palette.text.primary,\n    }\n})\n\nconst mapStateToProps = (state) => ({\n    themeType: state.themeType,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    themeToggle: (x) => dispatch(toggleTheme(x)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Links))\n","import React from 'react'\n\nimport { H, P } from '../shared/StyledTags'\nimport ChartDescription from '../shared/ChartDescription'\nimport Paper from '../shared/Paper'\nimport DataOptions from './DataOptions'\nimport Visualisation from './Visualisation'\nimport PageWrapper from './PageWrapper'\nimport Links from './Links'\n\nconst Page = () => (\n    <PageWrapper>\n        <Paper className=\"bg-none\">\n            <Links />\n            <ChartDescription\n                title={(\n                    <H level={1}>Code Community Health</H>\n                )}\n                intro=\"The aim of this tool is to help teams learn from their contribution trends. Also to see the contribution trends of popular repositories*\"\n            >\n                <div>\n                    <P>This tool is not a 'lines of code' like metric, it contains in depth contribution based metrics meant to help teams find good and bad trends. Also helps show if changes to ways of working have an impact on important metrics over time. Understanding of the team's way of working is needed to get the full value from this data.</P>\n                    <P>Context is king, data that looks 'good' might be 'bad' and data that looks 'bad' might be 'good'. For example little feedback in PRs may be expected if the team is doing small changes in an established code base or not getting enough feedback working on a greenfield project.</P>\n                    <P>The sections below have some pointers to look out for, these are meant as guides as team context is needed to know what the data is truly showing.</P>\n                    <P>* If you contribute to any of the open source repositories it would be great if you could open a pull request to describe what software delivery life cycle is and maybe what learnings that were made to get there. This could help others see how it impacts contributions and maybe adopt some of the practices.</P>\n                </div>\n            </ChartDescription>\n        </Paper>\n        <>\n            <DataOptions />\n            <Visualisation />\n        </>\n    </PageWrapper>\n)\n\nexport default Page\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { H } from './shared/StyledTags'\n\nconst styles = theme => ({\n    'root': {\n        position: 'relative',\n    },\n    'modal': {\n        position: 'fixed',\n        width: '80%',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        zIndex: 1000,\n        backgroundColor: theme.palette.background.paper,\n        padding: `${theme.mySpacing.x.large} ${theme.mySpacing.y.large}`,\n        '& .MuiLinearProgress-dashed': {\n            background: 'none',\n            backgroundColor: '#b10e4f',\n            animation: 'none',\n        },\n        '& .MuiLinearProgress-root': {\n            height: '14px',\n            marginBottom: theme.mySpacing.y.large,\n        }\n    },\n    'overlay': {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 999,\n        backgroundColor: '#b10e4f',\n        animation: 'pulse 1s infinite alternate',\n        opacity: 0.6,\n    },\n    '@keyframes pulse': {\n        '100%': {\n            opacity: 0.9,\n        },\n    }\n})\n\nconst Loader = ({\n    fetching,\n    fetchStatus = {},\n    classes\n} = {}) => {\n    const {\n        page = 1,\n        pagesLoaded = 0,\n        pagesRemaining = 0,\n        pullRequests = 0,\n        issues = 0,\n        releases = 0,\n    } = fetchStatus\n\n    const pagesTotal = pagesLoaded + pagesRemaining\n    const onePagePercent = 100 / (pagesTotal || 10)\n    const loadedPercent = (pagesLoaded * onePagePercent)\n\n    return (\n        fetching && <div>\n            <div className={ classes.overlay }></div>\n            <div className={ classes.modal }>\n                <H level={2}>\n                    {page} {pagesTotal ? `of ${pagesTotal}` : ''}\n                </H>\n                <LinearProgress className={classes.dashed} variant=\"determinate\" value={loadedPercent} valueBuffer={onePagePercent + loadedPercent}/>\n\n                <H level={2}>\n                    {pullRequests} Pull Requests\n                </H>\n                <H level={2}>\n                    {issues} Issues\n                </H>\n                <H level={2}>\n                    {releases} Releases\n                </H>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    fetching: state.fetching,\n    fetchStatus: state.fetchStatus,\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(Loader))\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport { pathOr } from 'ramda'\n\nimport theme from './theme'\nimport Page from './components/home/Page'\nimport Loader from './components/Loader'\n\nimport * as actions from './state/actions'\n\nconst App = ({ getPreFetchedData, themeType, setUser } = {}) => {\n    useEffect(() => {\n        const quertString = pathOr('', ['location', 'search'],window)\n        const urlParams = new URLSearchParams(quertString);\n        const repo = urlParams.get('repo') || 'react';\n        const user = urlParams.get('user') || '';\n\n        getPreFetchedData(repo)\n        setUser(user)\n    }, [getPreFetchedData, setUser])\n\n    return (\n        <MuiThemeProvider theme={theme(themeType)}>\n            <Loader />\n            <Page />\n        </MuiThemeProvider>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    themeType: state.themeType,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getPreFetchedData: (x) => dispatch(actions.getPreFetchedData(x)),\n    setUser: (x) => dispatch(actions.setUser(x)),\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App)\n","import { combineReducers } from 'redux'\nimport types from './types'\n\nconst reducers = combineReducers({\n    user: (user = '', action) => {\n        const newValue = ({\n            [types.SET_USER]: () => action.payload,\n            [types.CLEAR_USER]: () => '',\n        })[action.type]\n\n        return newValue\n            ? newValue()\n            : user\n    },\n    fetches: combineReducers({\n        token: (token = '', action) => (action.type === types.STORE_TOKEN)\n            ? action.payload\n            : token,\n        org: (org = '', action) => (action.type === types.STORE_ORG)\n            ? action.payload\n            : org,\n        repo: (repo = '', action) => (action.type === types.STORE_REPO)\n            ? action.payload\n            : repo,\n        teamName: (teamName = '', action) => {\n            const newValue = ({\n                [types.SET_TEAM_NAME]: () => action.payload,\n                [types.CLEAR_TEAM_NAME]: () => '',\n            })[action.type]\n\n            return newValue\n                ? newValue()\n                : teamName\n        },\n        amountOfData: (amountOfData = 1, action) => (action.type === types.STORE_AMOUNT)\n            ? action.payload\n            : amountOfData,\n        enterpriseAPI: (enterpriseAPI = '', action) => (action.type === types.STORE_ENT_URL)\n            ? action.payload\n            : enterpriseAPI,\n        userIds: (userIds = [], action) => (action.type === types.STORE_USER_IDS)\n            ? action.payload\n            : userIds,\n        excludeIds: (excludeIds = [], action) => (action.type === types.STORE_EX_IDS)\n            ? action.payload\n            : excludeIds,\n        prPagination: (pagination = { hasNextPage: true }, action) => ({\n            [types.SET_PR_PAGINATION]: action.payload,\n            [types.CLEAR_PR_PAGINATION]: { hasNextPage: true },\n        })[action.type] || pagination,\n        releasesPagination: (pagination = { hasNextPage: true }, action) => ({\n            [types.SET_RELEASES_PAGINATION]: action.payload,\n            [types.CLEAR_RELEASES_PAGINATION]: { hasNextPage: true },\n        })[action.type] || pagination,\n        issuesPagination: (pagination = { hasNextPage: true }, action) => ({\n            [types.SET_ISSUES_PAGINATION]: action.payload,\n            [types.CLEAR_ISSUES_PAGINATION]: { hasNextPage: true },\n        })[action.type] || pagination,\n    }),\n    fetching: (fetching = false, action) => [\n        action.type === types.FETCH_START\n            && (() => true),\n        action.type === types.FETCH_END\n            && (() => false),\n        () => fetching,\n    ]\n        .find(Boolean)(),\n    fetchStatus: (fetchStatus = {}, action) => action.type === types.FETCH_STATUS\n        ? action.payload\n        : fetchStatus,\n    error: (error = '', action) => {\n        const newValue = ({\n            [types.FETCH_ERROR]: () => action.payload,\n            [types.CLEAR_FETCH_ERROR]: () => '',\n        })[action.type]\n\n        return newValue\n            ? newValue()\n            : error\n    },\n    preFetchedRepo: (repo = '', action) => {\n        const newValue = ({\n            [types.PREFETCHED_REPO]: () => action.payload,\n            [types.CLEAR_PRS]: () => '',\n        })[action.type]\n\n        return newValue\n            ? newValue()\n            : repo\n    },\n    repoInfo: (repoInfo = {}, action) => [\n        action.type === types.ADD_REPO_INFO\n            && action.payload,\n        action.type === types.CLEAR_REPO_INFO\n            && {},\n        repoInfo,\n    ].find(Boolean),\n    pullRequests: (prs = [], action) => [\n        action.type === types.ADD_PRS\n            && prs.concat(action.payload),\n        action.type === types.CLEAR_PRS && [],\n        prs,\n    ].find(Boolean),\n    usersData: (users = [], action) => [\n        action.type === types.ADD_USERS_DATA\n            && action.payload,\n        action.type === types.CLEAR_USERS_DATA && [],\n        users,\n    ].find(Boolean),\n    issues: (issues = [], action) => [\n        action.type === types.ADD_ISSUES\n            && issues.concat(action.payload),\n        action.type === types.CLEAR_ISSUES && [],\n        issues,\n    ].find(Boolean),\n    releases: (releases = [], action) => [\n        action.type === types.ADD_RELEASES\n            && releases.concat(action.payload),\n        action.type === types.CLEAR_RELEASES && [],\n        releases,\n    ].find(Boolean),\n    themeType: (themeType = 'dark', action) =>\n        action.type === types.TOGGLE_THEME\n            ? (themeType === 'dark' ? 'light' : 'dark')\n            : themeType,\n})\n\nexport default reducers\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createStore, applyMiddleware, compose } from 'redux'\n\nimport App from './App'\nimport reducers from './state/reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunk)\n))\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}